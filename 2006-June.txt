From smackay at berlios.de  Mon Jun  5 17:48:47 2006
From: smackay at berlios.de (smackay at berlios.de)
Date: Mon, 5 Jun 2006 17:48:47 +0200
Subject: [Transform-svn] r162 - in trunk: doc src/com/flagstone/transform/tools
Message-ID: <200606051548.k55FmlGe014001@sheep.berlios.de>

Author: smackay
Date: 2006-06-05 17:48:40 +0200 (Mon, 05 Jun 2006)
New Revision: 162

Modified:
   trunk/doc/CHANGES.txt
   trunk/src/com/flagstone/transform/tools/TextDump.java
Log:
Fixed bug in TextDump which was not including the actions which 
make up the body of the function definition.

Modified: trunk/doc/CHANGES.txt
===================================================================
--- trunk/doc/CHANGES.txt	2006-04-14 09:01:52 UTC (rev 161)
+++ trunk/doc/CHANGES.txt	2006-06-05 15:48:40 UTC (rev 162)
@@ -1,3 +1,8 @@
+2006-06-05 - smackay at flagstonesoftware.com
+
+    * Fixed bug in TextDump which was not including the actions which make up
+      the body of the function definition.
+
 2006-04-03 - denis at fireflydesign.com
 
     * Always use 6 byte header for DefineLosslessImage2 (FSDefineImage2) because

Modified: trunk/src/com/flagstone/transform/tools/TextDump.java
===================================================================
--- trunk/src/com/flagstone/transform/tools/TextDump.java	2006-04-14 09:01:52 UTC (rev 161)
+++ trunk/src/com/flagstone/transform/tools/TextDump.java	2006-06-05 15:48:40 UTC (rev 162)
@@ -1575,7 +1575,7 @@
                     decoded = true;
                     break;
                 case NewFunction2:
-                    decodeNewFunction2(coder);
+                    length = decodeNewFunction2(coder);
                     next = start + (length << 3);
                     decoded = true;
                     break;
@@ -2392,6 +2392,8 @@
                 
             int actionsLength = coder.readWord("actionsLength", 2, false);
             
+            length += actionsLength;
+            
             coder.beginArray("actions");
 
             while (actionsLength > 0)
@@ -2400,7 +2402,7 @@
             coder.endObject();
             coder.endObject();
             
-            return length + actionsLength;
+            return length;
         }
         
         int decodeNewFunction2(SWFDecoder coder)
@@ -2422,6 +2424,8 @@
                 
             int actionsLength = coder.readWord("actionsLength", 2, false);
             
+            length += actionsLength;
+            
             coder.beginArray("actions");
 
             while (actionsLength > 0)
@@ -2430,7 +2434,7 @@
             coder.endObject();
             coder.endObject();
             
-            return length + actionsLength;
+            return length;
         }
 
         void decodePush(SWFDecoder coder)



From smackay at berlios.de  Sun Jun 11 14:49:57 2006
From: smackay at berlios.de (smackay at berlios.de)
Date: Sun, 11 Jun 2006 14:49:57 +0200
Subject: [Transform-svn] r163 - in dev/dev-2-2/src/com/flagstone/transform: . util
Message-ID: <200606111249.k5BCnvAO022700@sheep.berlios.de>

Author: smackay
Date: 2006-06-11 14:48:29 +0200 (Sun, 11 Jun 2006)
New Revision: 163

Modified:
   dev/dev-2-2/src/com/flagstone/transform/FSAction.java
   dev/dev-2-2/src/com/flagstone/transform/FSBitmapFill.java
   dev/dev-2-2/src/com/flagstone/transform/FSBounds.java
   dev/dev-2-2/src/com/flagstone/transform/FSButton.java
   dev/dev-2-2/src/com/flagstone/transform/FSButtonColorTransform.java
   dev/dev-2-2/src/com/flagstone/transform/FSButtonEvent.java
   dev/dev-2-2/src/com/flagstone/transform/FSButtonSound.java
   dev/dev-2-2/src/com/flagstone/transform/FSCall.java
   dev/dev-2-2/src/com/flagstone/transform/FSCharacter.java
   dev/dev-2-2/src/com/flagstone/transform/FSClipEvent.java
   dev/dev-2-2/src/com/flagstone/transform/FSCoder.java
   dev/dev-2-2/src/com/flagstone/transform/FSColor.java
   dev/dev-2-2/src/com/flagstone/transform/FSColorTable.java
   dev/dev-2-2/src/com/flagstone/transform/FSColorTransform.java
   dev/dev-2-2/src/com/flagstone/transform/FSCoordTransform.java
   dev/dev-2-2/src/com/flagstone/transform/FSCurve.java
   dev/dev-2-2/src/com/flagstone/transform/FSDefineButton.java
   dev/dev-2-2/src/com/flagstone/transform/FSDefineButton2.java
   dev/dev-2-2/src/com/flagstone/transform/FSDefineFont.java
   dev/dev-2-2/src/com/flagstone/transform/FSDefineFont2.java
   dev/dev-2-2/src/com/flagstone/transform/FSDefineImage.java
   dev/dev-2-2/src/com/flagstone/transform/FSDefineImage2.java
   dev/dev-2-2/src/com/flagstone/transform/FSDefineJPEGImage.java
   dev/dev-2-2/src/com/flagstone/transform/FSDefineJPEGImage2.java
   dev/dev-2-2/src/com/flagstone/transform/FSDefineJPEGImage3.java
   dev/dev-2-2/src/com/flagstone/transform/FSDefineMorphShape.java
   dev/dev-2-2/src/com/flagstone/transform/FSDefineMovieClip.java
   dev/dev-2-2/src/com/flagstone/transform/FSDefineShape.java
   dev/dev-2-2/src/com/flagstone/transform/FSDefineShape2.java
   dev/dev-2-2/src/com/flagstone/transform/FSDefineShape3.java
   dev/dev-2-2/src/com/flagstone/transform/FSDefineSound.java
   dev/dev-2-2/src/com/flagstone/transform/FSDefineText.java
   dev/dev-2-2/src/com/flagstone/transform/FSDefineText2.java
   dev/dev-2-2/src/com/flagstone/transform/FSDefineTextField.java
   dev/dev-2-2/src/com/flagstone/transform/FSDefineVideo.java
   dev/dev-2-2/src/com/flagstone/transform/FSDoAction.java
   dev/dev-2-2/src/com/flagstone/transform/FSEnableDebugger.java
   dev/dev-2-2/src/com/flagstone/transform/FSEnableDebugger2.java
   dev/dev-2-2/src/com/flagstone/transform/FSEnvelope.java
   dev/dev-2-2/src/com/flagstone/transform/FSExceptionHandler.java
   dev/dev-2-2/src/com/flagstone/transform/FSExport.java
   dev/dev-2-2/src/com/flagstone/transform/FSFontInfo.java
   dev/dev-2-2/src/com/flagstone/transform/FSFontInfo2.java
   dev/dev-2-2/src/com/flagstone/transform/FSFrameLabel.java
   dev/dev-2-2/src/com/flagstone/transform/FSFree.java
   dev/dev-2-2/src/com/flagstone/transform/FSGetUrl.java
   dev/dev-2-2/src/com/flagstone/transform/FSGetUrl2.java
   dev/dev-2-2/src/com/flagstone/transform/FSGotoFrame.java
   dev/dev-2-2/src/com/flagstone/transform/FSGotoFrame2.java
   dev/dev-2-2/src/com/flagstone/transform/FSGotoLabel.java
   dev/dev-2-2/src/com/flagstone/transform/FSGradient.java
   dev/dev-2-2/src/com/flagstone/transform/FSGradientFill.java
   dev/dev-2-2/src/com/flagstone/transform/FSIf.java
   dev/dev-2-2/src/com/flagstone/transform/FSImport.java
   dev/dev-2-2/src/com/flagstone/transform/FSInitialize.java
   dev/dev-2-2/src/com/flagstone/transform/FSJPEGEncodingTable.java
   dev/dev-2-2/src/com/flagstone/transform/FSJump.java
   dev/dev-2-2/src/com/flagstone/transform/FSKerning.java
   dev/dev-2-2/src/com/flagstone/transform/FSLimitScript.java
   dev/dev-2-2/src/com/flagstone/transform/FSLine.java
   dev/dev-2-2/src/com/flagstone/transform/FSMorphBitmapFill.java
   dev/dev-2-2/src/com/flagstone/transform/FSMorphGradient.java
   dev/dev-2-2/src/com/flagstone/transform/FSMorphGradientFill.java
   dev/dev-2-2/src/com/flagstone/transform/FSMorphSolidFill.java
   dev/dev-2-2/src/com/flagstone/transform/FSMorphSolidLine.java
   dev/dev-2-2/src/com/flagstone/transform/FSMovie.java
   dev/dev-2-2/src/com/flagstone/transform/FSMovieEvent.java
   dev/dev-2-2/src/com/flagstone/transform/FSNewFunction.java
   dev/dev-2-2/src/com/flagstone/transform/FSNewFunction2.java
   dev/dev-2-2/src/com/flagstone/transform/FSNull.java
   dev/dev-2-2/src/com/flagstone/transform/FSPathsArePostscript.java
   dev/dev-2-2/src/com/flagstone/transform/FSPlaceObject.java
   dev/dev-2-2/src/com/flagstone/transform/FSPlaceObject2.java
   dev/dev-2-2/src/com/flagstone/transform/FSPointer.java
   dev/dev-2-2/src/com/flagstone/transform/FSProperty.java
   dev/dev-2-2/src/com/flagstone/transform/FSProtect.java
   dev/dev-2-2/src/com/flagstone/transform/FSPush.java
   dev/dev-2-2/src/com/flagstone/transform/FSQuicktimeMovie.java
   dev/dev-2-2/src/com/flagstone/transform/FSRegisterCopy.java
   dev/dev-2-2/src/com/flagstone/transform/FSRegisterIndex.java
   dev/dev-2-2/src/com/flagstone/transform/FSRegisterVariable.java
   dev/dev-2-2/src/com/flagstone/transform/FSRemoveObject.java
   dev/dev-2-2/src/com/flagstone/transform/FSRemoveObject2.java
   dev/dev-2-2/src/com/flagstone/transform/FSSerialNumber.java
   dev/dev-2-2/src/com/flagstone/transform/FSSetBackgroundColor.java
   dev/dev-2-2/src/com/flagstone/transform/FSSetTarget.java
   dev/dev-2-2/src/com/flagstone/transform/FSShape.java
   dev/dev-2-2/src/com/flagstone/transform/FSShapeStyle.java
   dev/dev-2-2/src/com/flagstone/transform/FSShowFrame.java
   dev/dev-2-2/src/com/flagstone/transform/FSSolidFill.java
   dev/dev-2-2/src/com/flagstone/transform/FSSolidLine.java
   dev/dev-2-2/src/com/flagstone/transform/FSSound.java
   dev/dev-2-2/src/com/flagstone/transform/FSSoundStreamBlock.java
   dev/dev-2-2/src/com/flagstone/transform/FSSoundStreamHead.java
   dev/dev-2-2/src/com/flagstone/transform/FSSoundStreamHead2.java
   dev/dev-2-2/src/com/flagstone/transform/FSStartSound.java
   dev/dev-2-2/src/com/flagstone/transform/FSTabOrder.java
   dev/dev-2-2/src/com/flagstone/transform/FSTable.java
   dev/dev-2-2/src/com/flagstone/transform/FSTableIndex.java
   dev/dev-2-2/src/com/flagstone/transform/FSText.java
   dev/dev-2-2/src/com/flagstone/transform/FSUnknownAction.java
   dev/dev-2-2/src/com/flagstone/transform/FSUnknownObject.java
   dev/dev-2-2/src/com/flagstone/transform/FSVideoFrame.java
   dev/dev-2-2/src/com/flagstone/transform/FSVoid.java
   dev/dev-2-2/src/com/flagstone/transform/FSWaitForFrame.java
   dev/dev-2-2/src/com/flagstone/transform/FSWaitForFrame2.java
   dev/dev-2-2/src/com/flagstone/transform/FSWith.java
   dev/dev-2-2/src/com/flagstone/transform/util/FSCodec.java
   dev/dev-2-2/src/com/flagstone/transform/util/FSImageConstructor.java
   dev/dev-2-2/src/com/flagstone/transform/util/FSShapeConstructor.java
   dev/dev-2-2/src/com/flagstone/transform/util/FSSoundConstructor.java
   dev/dev-2-2/src/com/flagstone/transform/util/FSTextConstructor.java
Log:
Relaxed final clause on classes to allow sub-classing.

Modified: dev/dev-2-2/src/com/flagstone/transform/FSAction.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSAction.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/FSAction.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -549,7 +549,7 @@
 <p>Note: The FSPush class allows more than one value to be pushed onto the stack at a time. In the above examples separate FSPush objects are created to make the code a little more readable.</p>
 
 */  
-public final class FSAction extends FSActionObject
+public class FSAction extends FSActionObject
 {
     /** Type identifying a NextFrame stack-based action. */
     public static final int NextFrame        = 4;

Modified: dev/dev-2-2/src/com/flagstone/transform/FSBitmapFill.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSBitmapFill.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/FSBitmapFill.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -111,7 +111,7 @@
 
 <p>The FSBitmapFill class represents the FillStyle structure from the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 1.</p>
  */
-public final class FSBitmapFill extends FSFillStyle
+public class FSBitmapFill extends FSFillStyle
 {
     private int identifier = 0;
     private FSCoordTransform transform = null;

Modified: dev/dev-2-2/src/com/flagstone/transform/FSBounds.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSBounds.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/FSBounds.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -100,7 +100,7 @@
 <p>The FSBounds class corresponds to the RECT data type, in the Macromedia Flash 
 (SWF) File Format Specification. It was introduced in Flash 1.</p>
  */
-public final class FSBounds extends FSTransformObject
+public class FSBounds extends FSTransformObject
 {
     private int minX = 0;
     private int minY = 0;

Modified: dev/dev-2-2/src/com/flagstone/transform/FSButton.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSButton.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/FSButton.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -85,7 +85,7 @@
 <p>The FSButton class represents the ButtonRecord structure from the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 1.</p>
 
  */  
-public final class FSButton extends FSTransformObject
+public class FSButton extends FSTransformObject
 {
     /** Code for the button in the up state. */
     public static final int Up = 1;

Modified: dev/dev-2-2/src/com/flagstone/transform/FSButtonColorTransform.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSButtonColorTransform.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/FSButtonColorTransform.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -61,7 +61,7 @@
 
 <p>The FSButtonColorTransform class represents the DefineButtonCXForm structure from the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 2.</p>
  */
-public final class FSButtonColorTransform extends FSMovieObject
+public class FSButtonColorTransform extends FSMovieObject
 {
     private int identifier = 0;
     private FSColorTransform colorTransform = null;

Modified: dev/dev-2-2/src/com/flagstone/transform/FSButtonEvent.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSButtonEvent.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/FSButtonEvent.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -117,7 +117,7 @@
 <h1 class="datasheet">History</h1>
 
 <p>The FSButtonEvent class represents the ButtonCondAction data structure from the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 3.</p> */  
-public final class FSButtonEvent extends FSTransformObject
+public class FSButtonEvent extends FSTransformObject
 {
     /** Defines the button event that occurs when the mouse cursor moves over the active area of a button. */
     public static final int RollOver = 1;

Modified: dev/dev-2-2/src/com/flagstone/transform/FSButtonSound.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSButtonSound.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/FSButtonSound.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -84,7 +84,7 @@
 
 <p>The FSButtonSound class represents the DefineButtonSound structure from the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 2.</p>
  */
-public final class FSButtonSound extends FSMovieObject
+public class FSButtonSound extends FSMovieObject
 {
     private int identifier = 0;
     private FSSound[] sound = new FSSound[] {null, null, null, null};

Modified: dev/dev-2-2/src/com/flagstone/transform/FSCall.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSCall.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/FSCall.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -66,7 +66,7 @@
 
 <p>The FSCall class represents the ActionCall action of the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 4.</p>
  */  
-public final class FSCall extends FSActionObject
+public class FSCall extends FSActionObject
 {
     private static final FSCall instance = new FSCall();
     

Modified: dev/dev-2-2/src/com/flagstone/transform/FSCharacter.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSCharacter.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/FSCharacter.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -101,7 +101,7 @@
 
 <p>The FSCharacter class represents the GlyphEntry structure from Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 1.</p>
  */
-public final class FSCharacter extends FSTransformObject
+public class FSCharacter extends FSTransformObject
 {
     private int glyphIndex = 0;
     private int advance = 0;

Modified: dev/dev-2-2/src/com/flagstone/transform/FSClipEvent.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSClipEvent.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/FSClipEvent.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -168,7 +168,7 @@
 The event model was extended in Flash 6 to support the set of events that Buttons 
 respond to. In Flash 7 the Construct event was added.</p>
  */  
-public final class FSClipEvent extends FSTransformObject
+public class FSClipEvent extends FSTransformObject
 {
 /** Code for a load event.*/
     public static final int Load = 1;

Modified: dev/dev-2-2/src/com/flagstone/transform/FSCoder.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSCoder.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/FSCoder.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -49,7 +49,7 @@
  * an exception. The eof() method can be used to determine whether the end of 
  * the buffer has been reached.
  */
-public final class FSCoder 
+public class FSCoder 
 {
     /** 
      * Identifies that multibyte words are stored in little-endian format with 

Modified: dev/dev-2-2/src/com/flagstone/transform/FSColor.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSColor.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/FSColor.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -85,7 +85,7 @@
 
 <p>FSColor class represents the colour data types, RGB and RGBA in the Macromedia Flash (SWF) File Format Specification. The colour data structure was available was introduced in Flash 1 and transparent colours were introduced in Flash 3.</p>
  */
-public final class FSColor extends FSTransformObject
+public class FSColor extends FSTransformObject
 {
     private int red = 0;
     private int green = 0;

Modified: dev/dev-2-2/src/com/flagstone/transform/FSColorTable.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSColorTable.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/FSColorTable.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -288,7 +288,7 @@
 \endhtmlonly
 
 */
-public final class FSColorTable
+public class FSColorTable
 {
     /** Definition of the color, aliceblue from the Netscape color table. */
     public static FSColor aliceblue() { return new FSColor(0xF0, 0xF8, 0xFF, 0xFF); }

Modified: dev/dev-2-2/src/com/flagstone/transform/FSColorTransform.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSColorTransform.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/FSColorTransform.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -164,7 +164,7 @@
 
 <p>The FSCoordTransform class represents the CXForm and CXFormWithAlpha data structures from the Macromedia Flash (SWF) File Format Specification. They were introduced in Flash 1 and Flash 3 respectively.</P>
  */
-public final class FSColorTransform extends FSTransformObject
+public class FSColorTransform extends FSTransformObject
 {
     private float multiplyRed = 1.0f;
     private float multiplyGreen = 1.0f;

Modified: dev/dev-2-2/src/com/flagstone/transform/FSCoordTransform.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSCoordTransform.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/FSCoordTransform.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -151,7 +151,7 @@
 
 <p>The FSCoordTransform class represents the Matrix data structure from the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 1.</p>
  */
-public final class FSCoordTransform extends FSTransformObject
+public class FSCoordTransform extends FSTransformObject
 {
     private float[][] matrix = new float[][] { 
         {1.0f, 0.0f, 0.0f}, 

Modified: dev/dev-2-2/src/com/flagstone/transform/FSCurve.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSCurve.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/FSCurve.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -74,7 +74,7 @@
 <p>The FSCurve class represents the CurvedEdge record from the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 1.</p>
 
  */
-public final class FSCurve extends FSTransformObject
+public class FSCurve extends FSTransformObject
 {
     private int controlX = 0;
     private int controlY = 0;

Modified: dev/dev-2-2/src/com/flagstone/transform/FSDefineButton.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSDefineButton.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/FSDefineButton.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -142,7 +142,7 @@
 
 <p>The FSDefineButton class represents the DefineButton structure from the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 1.</p>
  */
-public final class FSDefineButton extends FSDefineObject
+public class FSDefineButton extends FSDefineObject
 {
     private ArrayList buttonRecords = null;
     private ArrayList actions = null;

Modified: dev/dev-2-2/src/com/flagstone/transform/FSDefineButton2.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSDefineButton2.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/FSDefineButton2.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -117,7 +117,7 @@
 
 <p>The FSDefineButton2 class represents the DefineButton2 structure from the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 3.</p>
  */  
-public final class FSDefineButton2 extends FSDefineObject
+public class FSDefineButton2 extends FSDefineObject
 {
 /** Defines whether a FSDefineButton2 object is configured as a momentary, push button. */
     public static final int Push = 0;

Modified: dev/dev-2-2/src/com/flagstone/transform/FSDefineFont.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSDefineFont.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/FSDefineFont.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -63,7 +63,7 @@
 
 <p>The FSDefineFont class represents the DefineFont structure from the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 1.</p>
  */
-public final class FSDefineFont extends FSDefineObject
+public class FSDefineFont extends FSDefineObject
 {
     private ArrayList shapes = null;
     

Modified: dev/dev-2-2/src/com/flagstone/transform/FSDefineFont2.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSDefineFont2.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/FSDefineFont2.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -151,7 +151,7 @@
 spoken languages was added in Flash 6. Support for small point size fonts was 
 added in Flash 7.</p>
  */
-public final class FSDefineFont2 extends FSDefineObject
+public class FSDefineFont2 extends FSDefineObject
 {
     private int encoding = FSText.Unicode;
     private boolean small = false;

Modified: dev/dev-2-2/src/com/flagstone/transform/FSDefineImage.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSDefineImage.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/FSDefineImage.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -96,7 +96,7 @@
 
 <p>The FSDefineImage class represents the DefineBitsLossless tag from the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 2.</p>
  */
-public final class FSDefineImage extends FSDefineObject
+public class FSDefineImage extends FSDefineObject
 {
     private int width = 0;
     private int height = 0;

Modified: dev/dev-2-2/src/com/flagstone/transform/FSDefineImage2.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSDefineImage2.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/FSDefineImage2.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -86,7 +86,7 @@
 
 <p>The FSDefineImage2 class represents the DefineBitsLossless2 tag from the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 3.</p>
  */  
-public final class FSDefineImage2 extends FSDefineObject
+public class FSDefineImage2 extends FSDefineObject
 {
     private int width = 0;
     private int height = 0;

Modified: dev/dev-2-2/src/com/flagstone/transform/FSDefineJPEGImage.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSDefineJPEGImage.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/FSDefineJPEGImage.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -89,7 +89,7 @@
 
 <p>The FSDefineJPEGImage class represents the DefineBits data structure from the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 1.</p>
  */
-public final class FSDefineJPEGImage extends FSDefineObject
+public class FSDefineJPEGImage extends FSDefineObject
 {
     private byte[] image = null;
     private int width;

Modified: dev/dev-2-2/src/com/flagstone/transform/FSDefineJPEGImage2.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSDefineJPEGImage2.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/FSDefineJPEGImage2.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -90,7 +90,7 @@
 
 <p>The FSDefineJPEGImage2 class represents the DefineBitsJPEG2 tag from the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 2.</p>
  */
-public final class FSDefineJPEGImage2 extends FSDefineObject
+public class FSDefineJPEGImage2 extends FSDefineObject
 {
     private int width;
     private int height;

Modified: dev/dev-2-2/src/com/flagstone/transform/FSDefineJPEGImage3.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSDefineJPEGImage3.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/FSDefineJPEGImage3.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -114,7 +114,7 @@
 
 <p>The FSDefineJPEGImage3 class represents the DefineBitsJPEG3 tag from the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 3.</p>
  */  
-public final class FSDefineJPEGImage3 extends FSDefineObject
+public class FSDefineJPEGImage3 extends FSDefineObject
 {
     private int width;
     private int height;

Modified: dev/dev-2-2/src/com/flagstone/transform/FSDefineMorphShape.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSDefineMorphShape.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/FSDefineMorphShape.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -155,7 +155,7 @@
 
 <p>The FSDefineMorphShape class represents the DefineMorphShape tag from the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 3.</p>
  */  
-public final class FSDefineMorphShape extends FSDefineObject
+public class FSDefineMorphShape extends FSDefineObject
 {
     private FSBounds startBounds = null;
     private FSBounds endBounds = null;

Modified: dev/dev-2-2/src/com/flagstone/transform/FSDefineMovieClip.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSDefineMovieClip.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/FSDefineMovieClip.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -65,7 +65,7 @@
 
 <p>The FSDefineMovieClip class represents the DefineSprite tag from the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 3.</p>
  */  
-public final class FSDefineMovieClip extends FSDefineObject
+public class FSDefineMovieClip extends FSDefineObject
 {
     private ArrayList objects = null;
 

Modified: dev/dev-2-2/src/com/flagstone/transform/FSDefineShape.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSDefineShape.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/FSDefineShape.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -116,7 +116,7 @@
 
 <p>The FSDefineShape class represents the DefineShape tag from the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 1.</p>
  */
-public final class FSDefineShape extends FSDefineObject
+public class FSDefineShape extends FSDefineObject
 {
     private FSBounds bounds = null;
     private ArrayList fillStyles = null;

Modified: dev/dev-2-2/src/com/flagstone/transform/FSDefineShape2.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSDefineShape2.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/FSDefineShape2.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -117,7 +117,7 @@
 
 <p>The FSDefineShape2 class represents the DefineShape2 data structure from the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 2.</p>
  */
-public final class FSDefineShape2 extends FSDefineObject
+public class FSDefineShape2 extends FSDefineObject
 {
     private FSBounds bounds = null;
     private ArrayList fillStyles = null;

Modified: dev/dev-2-2/src/com/flagstone/transform/FSDefineShape3.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSDefineShape3.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/FSDefineShape3.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -110,7 +110,7 @@
 
 <p>The FSDefineShape3 class represents the DefineShape3 tag from the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 3.</p>
  */  
-public final class FSDefineShape3 extends FSDefineObject
+public class FSDefineShape3 extends FSDefineObject
 {
     private FSBounds bounds = null;
     private ArrayList fillStyles = null;

Modified: dev/dev-2-2/src/com/flagstone/transform/FSDefineSound.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSDefineSound.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/FSDefineSound.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -117,7 +117,7 @@
 Flash (SWF) File Format Specification. It was introduced in Flash 1. Flash 3 added 
 support for MP3 and the Nellymoser Asao format was added in Flash 6.</p>
  */  
-public final class FSDefineSound extends FSDefineObject
+public class FSDefineSound extends FSDefineObject
 {
     private int format = 0;
     private int playbackRate = 5512;

Modified: dev/dev-2-2/src/com/flagstone/transform/FSDefineText.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSDefineText.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/FSDefineText.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -118,7 +118,7 @@
 
 <p>The FSDefineText class represents the DefineText tag from the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 1.</p>
  */
-public final class FSDefineText extends FSDefineObject
+public class FSDefineText extends FSDefineObject
 {
     private FSBounds bounds = null;
     private FSCoordTransform transform = null;

Modified: dev/dev-2-2/src/com/flagstone/transform/FSDefineText2.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSDefineText2.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/FSDefineText2.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -117,7 +117,7 @@
 
 <p>The FSDefineText2 class represents the DefineText2 tag from the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 3.</p>
  */  
-public final class FSDefineText2 extends FSDefineObject
+public class FSDefineText2 extends FSDefineObject
 {
     private FSBounds bounds = null;
     private FSCoordTransform transform = null;

Modified: dev/dev-2-2/src/com/flagstone/transform/FSDefineTextField.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSDefineTextField.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/FSDefineTextField.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -224,7 +224,7 @@
 
 <p>FSDefineTextField class represents the DefineTextField from the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 4.</p>
  */  
-public final class FSDefineTextField extends FSDefineObject
+public class FSDefineTextField extends FSDefineObject
 {
 /** Key used to identify the wordWrapped attribute. */
     public static final String WordWrapped = "WordWrapped";

Modified: dev/dev-2-2/src/com/flagstone/transform/FSDefineVideo.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSDefineVideo.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/FSDefineVideo.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -100,7 +100,7 @@
 File Format Specification. It was introduced in Flash 6. The ScreenVideo format 
 was introduced in Flash 7.</p>
  */  
-public final class FSDefineVideo extends FSDefineObject
+public class FSDefineVideo extends FSDefineObject
 {
     /// The video data was encoded using the Sorenson modified H263 format.
     public static final int H263 = 2;

Modified: dev/dev-2-2/src/com/flagstone/transform/FSDoAction.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSDoAction.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/FSDoAction.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -78,7 +78,7 @@
 
 <p>The FSDoAction class represents the DoAction tag from the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 1.</p>
  */
-public final class FSDoAction extends FSMovieObject
+public class FSDoAction extends FSMovieObject
 {
     private ArrayList actions = null;
     private byte[] encodedActions = null;

Modified: dev/dev-2-2/src/com/flagstone/transform/FSEnableDebugger.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSEnableDebugger.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/FSEnableDebugger.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -59,7 +59,7 @@
 
 <p>The FSEnableDebugger class represents the EnableDebugger data structure of the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 5.</p>
  */  
-public final class FSEnableDebugger extends FSMovieObject
+public class FSEnableDebugger extends FSMovieObject
 {
     private String password = null;
         

Modified: dev/dev-2-2/src/com/flagstone/transform/FSEnableDebugger2.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSEnableDebugger2.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/FSEnableDebugger2.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -56,7 +56,7 @@
 
 <p>The FSEnableDebugger2 class represents the EnableDebugger2 data structure introduced in Flash 6. It replaced EnableDebugger in Flash 5 with a different format to support internal changes in the Flash Player. The functionality was not changed.</p>
  */  
-public final class FSEnableDebugger2 extends FSMovieObject
+public class FSEnableDebugger2 extends FSMovieObject
 {
     private String password = null;
         

Modified: dev/dev-2-2/src/com/flagstone/transform/FSEnvelope.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSEnvelope.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/FSEnvelope.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -67,7 +67,7 @@
 
 <p>The FSEnvelope class represents the SoundEnvelope structure from the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 1.</p>
  */
-public final class FSEnvelope extends FSTransformObject
+public class FSEnvelope extends FSTransformObject
 {
     private int mark = 0;
     private int left = 0;

Modified: dev/dev-2-2/src/com/flagstone/transform/FSExceptionHandler.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSExceptionHandler.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/FSExceptionHandler.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -84,7 +84,7 @@
 
 <p>The FSExceptionHandler represents the Try action introduced in Flash 7 and is used to directly support the exception handling syntax defined in ActionScript 2.0.</p>
  */  
-public final class FSExceptionHandler extends FSActionObject
+public class FSExceptionHandler extends FSActionObject
 {
     private int register = 0;
     private String variable = null;

Modified: dev/dev-2-2/src/com/flagstone/transform/FSExport.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSExport.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/FSExport.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -74,7 +74,7 @@
 
 <p>The FSExport class represents the ExportAssets tag in the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 5.</p>
  */  
-public final class FSExport extends FSMovieObject
+public class FSExport extends FSMovieObject
 {
     private Hashtable objects = new Hashtable();
         

Modified: dev/dev-2-2/src/com/flagstone/transform/FSFontInfo.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSFontInfo.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/FSFontInfo.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -111,7 +111,7 @@
 Flash specification. It was introduced in Flash 1. Support for small fonts was 
 added in Flash 7.</p>
  */
-public final class FSFontInfo extends FSMovieObject
+public class FSFontInfo extends FSMovieObject
 {
     private int identifier = 0;
     private String name = "";

Modified: dev/dev-2-2/src/com/flagstone/transform/FSFontInfo2.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSFontInfo2.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/FSFontInfo2.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -68,7 +68,7 @@
 <p>The FSFontInfo2 class supports the DefineFontInfo2 data structure introduced 
 in Flash 6. Support for small fonts was added in Flash 7.</p>
  */  
-public final class FSFontInfo2 extends FSMovieObject
+public class FSFontInfo2 extends FSMovieObject
 {
     private int identifier = 0;
     private String name = "";

Modified: dev/dev-2-2/src/com/flagstone/transform/FSFrameLabel.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSFrameLabel.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/FSFrameLabel.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -150,7 +150,7 @@
 
 <p>The FSFrameLabel class represents the FrameLabel tag from the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 3. In Flash 6 the label can support named anchors which allows a frame to be specified as the starting point when displaying a Flash movie in a web browser.</p>
  */  
-public final class FSFrameLabel extends FSMovieObject
+public class FSFrameLabel extends FSMovieObject
 {
     private String label = null;
 // Flash 6

Modified: dev/dev-2-2/src/com/flagstone/transform/FSFree.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSFree.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/FSFree.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -53,7 +53,7 @@
 
 <p>The FSFree class represents the FreeCharacter tag from the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 3.</p>
  */  
-public final class FSFree extends FSMovieObject
+public class FSFree extends FSMovieObject
 {
     private int identifier = 0;
         

Modified: dev/dev-2-2/src/com/flagstone/transform/FSGetUrl.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSGetUrl.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/FSGetUrl.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -126,7 +126,7 @@
 
 <p>The FSGetUrl is a class for representing the ActionGetUrl action of the Macromedia Flash (SWF) File Format Specification. It was introduced in  Flash 1.</p>
  */
-public final class FSGetUrl extends FSActionObject
+public class FSGetUrl extends FSActionObject
 {
     private String url = null;
     private String target = "";

Modified: dev/dev-2-2/src/com/flagstone/transform/FSGetUrl2.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSGetUrl2.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/FSGetUrl2.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -146,7 +146,7 @@
 
 <p>The FSGetUrl2 is a class for representing the ActionGetUrl2 action of the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 4.</p>
  */  
-public final class FSGetUrl2 extends FSActionObject
+public class FSGetUrl2 extends FSActionObject
 {
     /** Load a movie without submitting the movie variables. */
     public static final int MovieToLevel = 0;

Modified: dev/dev-2-2/src/com/flagstone/transform/FSGotoFrame.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSGotoFrame.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/FSGotoFrame.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -79,7 +79,7 @@
 <h1 class="datasheet">History</h1>
 
 <p>The FSGotoFrame represents the ActionGotoFrame action of the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 3. This class is now superseded by the FSGotoFrame2 action which allows either the name of a frame or a number of be specified.</p> */
-public final class FSGotoFrame extends FSActionObject
+public class FSGotoFrame extends FSActionObject
 {
     private int frameNumber = 1;
 

Modified: dev/dev-2-2/src/com/flagstone/transform/FSGotoFrame2.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSGotoFrame2.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/FSGotoFrame2.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -139,7 +139,7 @@
 action. In Flash 5 the frameOffset attribute was added which allows movies to be divided into a 
 series of 'pages'.</p>
  */  
-public final class FSGotoFrame2 extends FSActionObject
+public class FSGotoFrame2 extends FSActionObject
 {
     private boolean playFrame = false;
     private int frameOffset = 0;

Modified: dev/dev-2-2/src/com/flagstone/transform/FSGotoLabel.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSGotoLabel.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/FSGotoLabel.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -81,7 +81,7 @@
 <h1 class="datasheet">History</h1>
 
 <p>FSGotoLabel represents the ActionGotoLabel action of the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 3.</p> */  
-public final class FSGotoLabel extends FSActionObject
+public class FSGotoLabel extends FSActionObject
 {
     private String label = null;
     

Modified: dev/dev-2-2/src/com/flagstone/transform/FSGradient.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSGradient.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/FSGradient.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -56,7 +56,7 @@
 
 <p>The FSGradient class represents the GradientRecord structure from the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 1.</p>
  */
-public final class FSGradient extends FSTransformObject
+public class FSGradient extends FSTransformObject
 {
     private int ratio = 0;
     private FSColor color = null;

Modified: dev/dev-2-2/src/com/flagstone/transform/FSGradientFill.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSGradientFill.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/FSGradientFill.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -119,7 +119,7 @@
 <p>The FSGradientFill class represents the FillStyle structure from the Macromedia Flash 
 (SWF) File Format Specification. It was introduced in Flash 1.</p>
  */
-public final class FSGradientFill extends FSFillStyle
+public class FSGradientFill extends FSFillStyle
 {
     private FSCoordTransform transform = null;
     private ArrayList gradients = null;

Modified: dev/dev-2-2/src/com/flagstone/transform/FSIf.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSIf.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/FSIf.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -71,7 +71,7 @@
 
 <p>The FSIf class represents the ActionIf action of the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 4.</p>
  */  
-public final class FSIf extends FSActionObject
+public class FSIf extends FSActionObject
 {
     private int offset = 0;
 

Modified: dev/dev-2-2/src/com/flagstone/transform/FSImport.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSImport.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/FSImport.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -84,7 +84,7 @@
 
 <p>The FSImport class represents the ImportAssets data structure in the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 5.</p>
  */  
-public final class FSImport extends FSMovieObject
+public class FSImport extends FSMovieObject
 {
     private String url = null;
     private Hashtable objects = new Hashtable();

Modified: dev/dev-2-2/src/com/flagstone/transform/FSInitialize.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSInitialize.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/FSInitialize.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -85,7 +85,7 @@
 
 @see FSDoAction
  */  
-public final class FSInitialize extends FSMovieObject
+public class FSInitialize extends FSMovieObject
 {
     private int identifier = 0;
     private ArrayList actions = null;

Modified: dev/dev-2-2/src/com/flagstone/transform/FSJPEGEncodingTable.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSJPEGEncodingTable.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/FSJPEGEncodingTable.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -80,7 +80,7 @@
 
 <p>The FSJPEGEncodingTable class represents the JPEGEncodingTable tag from the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 1.</p>
  */
-public final class FSJPEGEncodingTable extends FSMovieObject
+public class FSJPEGEncodingTable extends FSMovieObject
 {
     private byte[] encodingTable = null;
 

Modified: dev/dev-2-2/src/com/flagstone/transform/FSJump.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSJump.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/FSJump.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -64,7 +64,7 @@
 
 <p>The FSJump class represents the ActionJump action of the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 4.</p>
  */  
-public final class FSJump extends FSActionObject
+public class FSJump extends FSActionObject
 {
     private int offset = 0;
 

Modified: dev/dev-2-2/src/com/flagstone/transform/FSKerning.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSKerning.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/FSKerning.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -62,7 +62,7 @@
 
 <p>FSKerning class represents the KerningRecord from the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 2.</p>
  */
-public final class FSKerning extends FSTransformObject
+public class FSKerning extends FSTransformObject
 {
     private int leftGlyphIndex = 0;
     private int rightGlyphIndex = 0;

Modified: dev/dev-2-2/src/com/flagstone/transform/FSLimitScript.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSLimitScript.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/FSLimitScript.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -61,7 +61,7 @@
 
 <p>The FSLimitScript represents the ScriptLimits tag in the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 7.</p>
  */  
-public final class FSLimitScript extends FSMovieObject
+public class FSLimitScript extends FSMovieObject
 {
     private int depth = 0; 
     private int timeout = 0; 

Modified: dev/dev-2-2/src/com/flagstone/transform/FSLine.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSLine.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/FSLine.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -59,7 +59,7 @@
 
 <p>The FSLine class represents the StraightEdge record from the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 1.</p>
  */
-public final class FSLine extends FSTransformObject
+public class FSLine extends FSTransformObject
 {
     private int x = 0;
     private int y = 0;

Modified: dev/dev-2-2/src/com/flagstone/transform/FSMorphBitmapFill.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSMorphBitmapFill.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/FSMorphBitmapFill.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -77,7 +77,7 @@
 
 <p>The FSMorphBitmapFill class represents the MorphFillStyle structure from the Macromedia Flash (SWF) File Format Specification. Shape morphing was introduced in Flash 3.</P>
  */  
-public final class FSMorphBitmapFill extends FSFillStyle
+public class FSMorphBitmapFill extends FSFillStyle
 {
     private int identifier = 0;
     private FSCoordTransform startTransform = new FSCoordTransform(0,0);

Modified: dev/dev-2-2/src/com/flagstone/transform/FSMorphGradient.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSMorphGradient.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/FSMorphGradient.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -71,7 +71,7 @@
 
 <p>The FSMorphGradient class represents the MorphGradientRecord structure from the Macromedia Flash (SWF) File Format Specification. Shape morphing was introduced in Flash 3.</p>
  */  
-public final class FSMorphGradient extends FSTransformObject
+public class FSMorphGradient extends FSTransformObject
 {
     private int startRatio = 0;
     private int endRatio = 0;

Modified: dev/dev-2-2/src/com/flagstone/transform/FSMorphGradientFill.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSMorphGradientFill.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/FSMorphGradientFill.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -127,7 +127,7 @@
 
 <p>The FSMorphGradientFill class represents the MorphFillStyle structure from the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 3.</p>
  */  
-public final class FSMorphGradientFill extends FSFillStyle
+public class FSMorphGradientFill extends FSFillStyle
 {
     private FSCoordTransform startTransform = null;
     private FSCoordTransform endTransform = null;

Modified: dev/dev-2-2/src/com/flagstone/transform/FSMorphSolidFill.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSMorphSolidFill.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/FSMorphSolidFill.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -69,7 +69,7 @@
 
 <p>The FSMorphSolidFill class represents the MorphFillStyle structure from the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 3.</p>
  */  
-public final class FSMorphSolidFill extends FSFillStyle
+public class FSMorphSolidFill extends FSFillStyle
 {
     private FSColor startColor = null;
     private FSColor endColor = null;

Modified: dev/dev-2-2/src/com/flagstone/transform/FSMorphSolidLine.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSMorphSolidLine.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/FSMorphSolidLine.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -66,7 +66,7 @@
 
 <p>The FSMorphSolidLine class represents the MorphLineStyle structure from the Macromedia Flash (SWF) File Format Specification. Shape morphing was introduced in Flash 3.</P>
  */  
-public final class FSMorphSolidLine extends FSLineStyle
+public class FSMorphSolidLine extends FSLineStyle
 {
     private int startWidth = 0;
     private int endWidth = 0;

Modified: dev/dev-2-2/src/com/flagstone/transform/FSMovie.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSMovie.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/FSMovie.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -158,7 +158,7 @@
 Flash the encoding attribute may be set to match the character set of the application 
 used to encoded the Flash file.</p>';
 */  
-public final class FSMovie implements Cloneable
+public class FSMovie implements Cloneable
 {
     static void encodeObjects(FSCoder coder, ArrayList array)
     {

Modified: dev/dev-2-2/src/com/flagstone/transform/FSMovieEvent.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSMovieEvent.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/FSMovieEvent.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -41,7 +41,7 @@
  * while a movie is being encoded or decoded.
  *
  */
-public final class FSMovieEvent
+public class FSMovieEvent
 {
     /** Identifies an event generated while a movie is being encoded. */
     public static final int Encode = 0;

Modified: dev/dev-2-2/src/com/flagstone/transform/FSNewFunction.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSNewFunction.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/FSNewFunction.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -141,7 +141,7 @@
 
 <p>The FSNewFunction class represents the ActionDefineFunction action of the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 5.</p>
  */  
-public final class FSNewFunction extends FSActionObject
+public class FSNewFunction extends FSActionObject
 {
     private String name = null;
     private ArrayList arguments = null;

Modified: dev/dev-2-2/src/com/flagstone/transform/FSNewFunction2.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSNewFunction2.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/FSNewFunction2.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -200,7 +200,7 @@
 <p>The FSNewFunction class represents the ActionDefineFunction2 action of the 
 Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 7.</p>
  */  
-public final class FSNewFunction2 extends FSActionObject
+public class FSNewFunction2 extends FSActionObject
 {
 /** Create and initialized the predefined variable, <em>super</em>. */
     public static final int CreateSuper = 4;

Modified: dev/dev-2-2/src/com/flagstone/transform/FSNull.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSNull.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/FSNull.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -39,7 +39,7 @@
 <p>The FSNull class represents the Null data type from the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 5.</p>
 
  */  
-public final class FSNull extends FSTransformObject
+public class FSNull extends FSTransformObject
 {
     private static final FSNull instance = new FSNull();
     

Modified: dev/dev-2-2/src/com/flagstone/transform/FSPathsArePostscript.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSPathsArePostscript.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/FSPathsArePostscript.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -61,7 +61,7 @@
 Macromedia Flash (SWF) File Format Specification. It is not documented in later 
 editions of the specification. It is not known when this tag was added.</p>
  */  
-public final class FSPathsArePostscript extends FSMovieObject
+public class FSPathsArePostscript extends FSMovieObject
 {
     private static final FSPathsArePostscript instance = new FSPathsArePostscript();
     

Modified: dev/dev-2-2/src/com/flagstone/transform/FSPlaceObject.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSPlaceObject.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/FSPlaceObject.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -116,7 +116,7 @@
 
 <p>The FSPlaceObject class represents the PlaceObject tag from the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 1 and is superseded by the PlaceObject2 tag which was added in Flash 3.</p>
  */
-public final class FSPlaceObject extends FSMovieObject
+public class FSPlaceObject extends FSMovieObject
 {
     private int identifier = 0;
     private int layer = 0;

Modified: dev/dev-2-2/src/com/flagstone/transform/FSPlaceObject2.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSPlaceObject2.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/FSPlaceObject2.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -248,7 +248,7 @@
 
 <p>The FSPlaceObject2 class represents the PlaceObject2 tag from the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 3.</p>
  */  
-public final class FSPlaceObject2 extends FSMovieObject
+public class FSPlaceObject2 extends FSMovieObject
 {
     /* Update an existing object on the display list */
     public static final int Modify = 1;

Modified: dev/dev-2-2/src/com/flagstone/transform/FSPointer.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSPointer.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/FSPointer.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -57,7 +57,7 @@
 (SWF) File Format Specification. It is not documented in later editions of the 
 specification. It is not known when this tag was added.</p>
  */  
-public final class FSPointer extends FSMovieObject
+public class FSPointer extends FSMovieObject
 {
     private int pointer = 0;
 

Modified: dev/dev-2-2/src/com/flagstone/transform/FSProperty.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSProperty.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/FSProperty.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -36,7 +36,7 @@
  * 
  * See FSPush for a list of available properties.
  */
-public final class FSProperty extends FSTransformObject
+public class FSProperty extends FSTransformObject
 {
     private int value = 0;
 

Modified: dev/dev-2-2/src/com/flagstone/transform/FSProtect.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSProtect.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/FSProtect.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -59,7 +59,7 @@
 
 <p>The FSProtect class represents the Protect tag from the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 2. The password attribute was added in Flash 5.</p>
  */
-public final class FSProtect extends FSMovieObject
+public class FSProtect extends FSMovieObject
 {
     private String password = null;
         

Modified: dev/dev-2-2/src/com/flagstone/transform/FSPush.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSPush.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/FSPush.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -135,7 +135,7 @@
 
 <p>FSPush is a class for representing the Push action of the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 4 and contained either an integer or string argument. It was extended in Flash 5 to support a number of different data types and allow more than one value to be added in a single action.</p>
  */  
-public final class FSPush extends FSActionObject
+public class FSPush extends FSActionObject
 {
 /** The x-origin of the movie clip relative to the parent clip.*/
     public static final int _x = (Transform.VERSION < 5) ? 0x00000000 : 0;

Modified: dev/dev-2-2/src/com/flagstone/transform/FSQuicktimeMovie.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSQuicktimeMovie.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/FSQuicktimeMovie.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -55,7 +55,7 @@
 
 <p>The FSQuicktimeMovie class represents the QuicktimeMovie structure from the Macromedia Flash (SWF) File Format Specification. This structure is undocumented in later versions of the specification. It is not known when it was introduced.</p>
  */ 
-public final class FSQuicktimeMovie extends FSMovieObject
+public class FSQuicktimeMovie extends FSMovieObject
 {
     private String name = null;
         

Modified: dev/dev-2-2/src/com/flagstone/transform/FSRegisterCopy.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSRegisterCopy.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/FSRegisterCopy.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -68,7 +68,7 @@
 Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 5 
 and expanded in Flash 7 to support up to 256 registers.</p>
  */  
-public final class FSRegisterCopy extends FSActionObject
+public class FSRegisterCopy extends FSActionObject
 {
     private int registerNumber = 0;
     

Modified: dev/dev-2-2/src/com/flagstone/transform/FSRegisterIndex.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSRegisterIndex.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/FSRegisterIndex.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -61,7 +61,7 @@
 
 <p>The RegisterCopy action and access to the Flash Player's internal registers was introduced in Flash 5. The number of registers supported was expanded in Flash 7 to 256.</p>
  */  
-public final class FSRegisterIndex extends FSTransformObject
+public class FSRegisterIndex extends FSTransformObject
 {
     private int index = 0;
 

Modified: dev/dev-2-2/src/com/flagstone/transform/FSRegisterVariable.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSRegisterVariable.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/FSRegisterVariable.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -37,7 +37,7 @@
 <p>Register numbers up to 255 may be specified. If the number is zero then the 
 argument is defined as a local variable.</p>
  */  
-public final class FSRegisterVariable extends FSTransformObject
+public class FSRegisterVariable extends FSTransformObject
 {
     private int index = 0;
     private String name = null;

Modified: dev/dev-2-2/src/com/flagstone/transform/FSRemoveObject.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSRemoveObject.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/FSRemoveObject.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -90,7 +90,7 @@
 
 <p>The FSRemoveObject class represents the RemoveObject tag from the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 1 and is superseded by the RemoveObject2 tag which was added in Flash 3.</p>
  */
-public final class FSRemoveObject extends FSMovieObject
+public class FSRemoveObject extends FSMovieObject
 {
     private int identifier = 0;
     private int layer = 0;

Modified: dev/dev-2-2/src/com/flagstone/transform/FSRemoveObject2.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSRemoveObject2.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/FSRemoveObject2.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -55,7 +55,7 @@
 
 <p>The FSRemoveObject2 class represents the RemoveObject2 tag from the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash in Flash 3.</p>
  */ 
-public final class FSRemoveObject2 extends FSMovieObject
+public class FSRemoveObject2 extends FSMovieObject
 {
     private int layer = 0;
 

Modified: dev/dev-2-2/src/com/flagstone/transform/FSSerialNumber.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSSerialNumber.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/FSSerialNumber.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -60,7 +60,7 @@
 
 <p>The FSSerialNumber represents the SerialNumber tag in the Macromedia Flash (SWF) File Format Specification. It is not known when this tag was introduced.</p>
  */  
-public final class FSSerialNumber extends FSMovieObject
+public class FSSerialNumber extends FSMovieObject
 {
     private String serialNumber = null;
     

Modified: dev/dev-2-2/src/com/flagstone/transform/FSSetBackgroundColor.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSSetBackgroundColor.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/FSSetBackgroundColor.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -64,7 +64,7 @@
 
 <p>The FSSetBackgroundColor class represents the SetBackgroundColor tag from the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 1.</p>
  */
-public final class FSSetBackgroundColor extends FSMovieObject
+public class FSSetBackgroundColor extends FSMovieObject
 {
     private FSColor color = null;
     

Modified: dev/dev-2-2/src/com/flagstone/transform/FSSetTarget.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSSetTarget.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/FSSetTarget.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -71,7 +71,7 @@
 
 <p>The FSSetTarget class represents the SetTarget action of the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 3.</p>
  */ 
-public final class FSSetTarget extends FSActionObject
+public class FSSetTarget extends FSActionObject
 {
     private String target = "";
     

Modified: dev/dev-2-2/src/com/flagstone/transform/FSShape.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSShape.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/FSShape.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -53,7 +53,7 @@
 
 <p>The FSShape class represents the Shape record from the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 1.</p>
  */
-public final class FSShape extends FSTransformObject
+public class FSShape extends FSTransformObject
 {
     private ArrayList objects = null;
     private byte[] encodedObjects = null; 

Modified: dev/dev-2-2/src/com/flagstone/transform/FSShapeStyle.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSShapeStyle.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/FSShapeStyle.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -211,7 +211,7 @@
 
 <p>The FSShapeStyle class represents the StyleChange record from the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 1.</p>
  */
-public final class FSShapeStyle extends FSTransformObject
+public class FSShapeStyle extends FSTransformObject
 {
     private int moveX = Transform.VALUE_NOT_SET;
     private int moveY = Transform.VALUE_NOT_SET;

Modified: dev/dev-2-2/src/com/flagstone/transform/FSShowFrame.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSShowFrame.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/FSShowFrame.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -93,7 +93,7 @@
 
 <p>The FSShowFrame class represents the ShowFrame data structure from the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 1.</p>
  */
-public final class FSShowFrame extends FSMovieObject
+public class FSShowFrame extends FSMovieObject
 {
     private static final FSShowFrame instance = new FSShowFrame();
     

Modified: dev/dev-2-2/src/com/flagstone/transform/FSSolidFill.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSSolidFill.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/FSSolidFill.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -95,7 +95,7 @@
 
 <p>The FSSolidFill class represents the FillStyle structure from the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 1.</p>
  */
-public final class FSSolidFill extends FSFillStyle
+public class FSSolidFill extends FSFillStyle
 {
     private FSColor color = null;
     

Modified: dev/dev-2-2/src/com/flagstone/transform/FSSolidLine.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSSolidLine.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/FSSolidLine.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -89,7 +89,7 @@
 
 <p>The FSSolidLine class represents the LineStyle structure from the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 1. Support for transparent colours was added in Flash 3.</p>
  */
-public final class FSSolidLine extends FSLineStyle
+public class FSSolidLine extends FSLineStyle
 {
     private int width = 0;
     private FSColor color = null;

Modified: dev/dev-2-2/src/com/flagstone/transform/FSSound.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSSound.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/FSSound.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -82,7 +82,7 @@
 
 <p>The FSSound class is based on the SoundInfo data structure from the Macromedia Flash (SWF) File Format Specification. However it also contains the identifier for the sound which is a separate attribute in the data structures defined in the specification that contain SoundInfo data.</p>
  */
-public final class FSSound extends FSTransformObject
+public class FSSound extends FSTransformObject
 {
     /** Identifies an uncompressed pulse code modulated sound. The byte-order for 16-bit sound samples
      is dependent on the host platform on which the sound is played. */

Modified: dev/dev-2-2/src/com/flagstone/transform/FSSoundStreamBlock.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSSoundStreamBlock.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/FSSoundStreamBlock.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -66,7 +66,7 @@
 compressed ADPCM format. Support for MP3 was added in Flash 3. The Nellymoser Asao
 format was added in Flash 6.</p>
  */
-public final class FSSoundStreamBlock extends FSMovieObject
+public class FSSoundStreamBlock extends FSMovieObject
 {
     private byte[] soundData = null;
     

Modified: dev/dev-2-2/src/com/flagstone/transform/FSSoundStreamHead.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSSoundStreamHead.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/FSSoundStreamHead.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -116,7 +116,7 @@
 <p>The FSSoundStreamHead class represents the SoundStreamHead structure from the 
 Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 1.</p>
  */
-public final class FSSoundStreamHead extends FSMovieObject
+public class FSSoundStreamHead extends FSMovieObject
 {
     private int format = FSSound.ADPCM;
 

Modified: dev/dev-2-2/src/com/flagstone/transform/FSSoundStreamHead2.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSSoundStreamHead2.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/FSSoundStreamHead2.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -115,7 +115,7 @@
 Flash specification. It was introduced in Flash 3. Support for the Nellymoser Asao
 format was added in Flash 6.</p>
  */
-public final class FSSoundStreamHead2 extends FSMovieObject
+public class FSSoundStreamHead2 extends FSMovieObject
 {
     private int format = FSSound.ADPCM;
 

Modified: dev/dev-2-2/src/com/flagstone/transform/FSStartSound.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSStartSound.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/FSStartSound.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -52,7 +52,7 @@
 
 <p>The FSStartSound class represents the StartSound tag from the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 1. In the Macromedia Flash (SWF) File Format Specification the StartSound tag contains an identifier and an FSSoundInfo structure. The Transform FSSound object simply combines both to simplify the design of other sound classes. The information encoded is identical.</p>
  */
-public final class FSStartSound extends FSMovieObject
+public class FSStartSound extends FSMovieObject
 {
     private FSSound sound = null;
 

Modified: dev/dev-2-2/src/com/flagstone/transform/FSTabOrder.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSTabOrder.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/FSTabOrder.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -59,7 +59,7 @@
 
 <p>The FSTabOrder object represents the SetTabIndex tag in the Flash file specification . It was introduced in Flash 7.</p>
  */  
-public final class FSTabOrder extends FSMovieObject
+public class FSTabOrder extends FSMovieObject
 {
     private int layer = 0; 
     private int index = 0; 

Modified: dev/dev-2-2/src/com/flagstone/transform/FSTable.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSTable.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/FSTable.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -101,7 +101,7 @@
 File Format Specification. It was introduced in Flash 5. It was extended in Flash 
 6 to support tables of up to 65536 strings.</p>
  */  
-public final class FSTable extends FSActionObject
+public class FSTable extends FSActionObject
 {
     private ArrayList values = null;
     

Modified: dev/dev-2-2/src/com/flagstone/transform/FSTableIndex.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSTableIndex.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/FSTableIndex.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -68,7 +68,7 @@
 <p>The string literal table was introduced in Flash 5. It was extended in Flash 
 6 to support tables of up to 65536 strings.</p>
  */  
-public final class FSTableIndex extends FSTransformObject
+public class FSTableIndex extends FSTransformObject
 {
     private int index = 0;
 

Modified: dev/dev-2-2/src/com/flagstone/transform/FSText.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSText.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/FSText.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -188,7 +188,7 @@
 structures from the Macromedia Flash (SWF) File Format Specification. It was 
 introduced in Flash 1.</p> 
  */
-public final class FSText extends FSTransformObject
+public class FSText extends FSTransformObject
 {
     /** Defines that the font character set is based on the Unicode standard. */
     public static final int Unicode = 0;

Modified: dev/dev-2-2/src/com/flagstone/transform/FSUnknownAction.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSUnknownAction.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/FSUnknownAction.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -53,7 +53,7 @@
 
 <p>The object provides direct access to the encoded data of the action offering the possibility to encode and decode actions that are not directly supported in the current release of the framework. However a detailed knowledge of how the action is encoded and decoded is required.</p>
  */
-public final class FSUnknownAction extends FSActionObject
+public class FSUnknownAction extends FSActionObject
 {
     private byte[] data = null;
     

Modified: dev/dev-2-2/src/com/flagstone/transform/FSUnknownObject.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSUnknownObject.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/FSUnknownObject.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -53,7 +53,7 @@
 
 <p>The object provides direct access to the encoded data of the data structure offering the possibility for Transform to encode and decode tags that are not directly supported in the current release of the package. However a detailed knowledge of how the data structure is encoded and decoded is required.</p>
  */
-public final class FSUnknownObject extends FSMovieObject
+public class FSUnknownObject extends FSMovieObject
 {
     private byte[] data = null;
     

Modified: dev/dev-2-2/src/com/flagstone/transform/FSVideoFrame.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSVideoFrame.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/FSVideoFrame.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -65,7 +65,7 @@
 
 <p>The FSVideoFrame class represents the VideoFrame data structure in the Macromedia Flash (SWF) File Format Specification. It was added in Flash 6 with support for the Sorenson modified H263 format. Support for Macromedia's Screen Video format was added in Flash 7.</p>
  */  
-public final class FSVideoFrame extends FSMovieObject
+public class FSVideoFrame extends FSMovieObject
 {
     private int identifier = 0;
     private int frameNumber = 0;

Modified: dev/dev-2-2/src/com/flagstone/transform/FSVoid.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSVoid.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/FSVoid.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -39,7 +39,7 @@
 <p>The FSVoid class represents the Void data type from the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 5.</p>
 
  */  
-public final class FSVoid extends FSTransformObject
+public class FSVoid extends FSTransformObject
 {
     private static final FSVoid instance = new FSVoid();
     

Modified: dev/dev-2-2/src/com/flagstone/transform/FSWaitForFrame.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSWaitForFrame.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/FSWaitForFrame.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -84,7 +84,7 @@
 
 <p>The FSWaitForFrame class represents the ActionWaitForFrame action of the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 3.</p>
  */
-public final class FSWaitForFrame extends FSActionObject
+public class FSWaitForFrame extends FSActionObject
 {
     private int frameNumber = 1;
     private int actionCount = 0;

Modified: dev/dev-2-2/src/com/flagstone/transform/FSWaitForFrame2.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSWaitForFrame2.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/FSWaitForFrame2.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -82,7 +82,7 @@
 
 <p>The FSWaitForFrame2 class represents the ActionWaitForFrame2 action of the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 4.</p>
  */  
-public final class FSWaitForFrame2 extends FSActionObject
+public class FSWaitForFrame2 extends FSActionObject
 {
     private int actionCount = 0;
     

Modified: dev/dev-2-2/src/com/flagstone/transform/FSWith.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSWith.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/FSWith.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -82,7 +82,7 @@
 
 <p>The FSWith class represents the ActionWith action in the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 5. FSWith supersedes the FSSetTarget action.</p>
  */  
-public final class FSWith extends FSActionObject
+public class FSWith extends FSActionObject
 {
     private ArrayList actions = null;
     

Modified: dev/dev-2-2/src/com/flagstone/transform/util/FSCodec.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/util/FSCodec.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/util/FSCodec.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -52,7 +52,7 @@
  * that overflowed will be set to zero, rather than throwing an exception. The eof() method 
  * can be used to determine whether the end of the buffer has been reached.
  */
-public final class FSCodec
+public class FSCodec
 {
     /** 
      * Identifies that multibyte words are stored in little-endian format with the least

Modified: dev/dev-2-2/src/com/flagstone/transform/util/FSImageConstructor.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/util/FSImageConstructor.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/util/FSImageConstructor.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -195,7 +195,7 @@
  *     imageConstructor.setJPEGImage(imageWidth, imageHeight, image);
  * </pre>
  */
-public final class FSImageConstructor
+public class FSImageConstructor
 {
     /** Format for JPEG encoded images */
     public static final int JPEG = 0;

Modified: dev/dev-2-2/src/com/flagstone/transform/util/FSShapeConstructor.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/util/FSShapeConstructor.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/util/FSShapeConstructor.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -139,7 +139,7 @@
  *</pre>
  *
  */
-public final class FSShapeConstructor
+public class FSShapeConstructor
 {
     private double flattenLimit = 0.25;
    /** 

Modified: dev/dev-2-2/src/com/flagstone/transform/util/FSSoundConstructor.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/util/FSSoundConstructor.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/util/FSSoundConstructor.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -122,7 +122,7 @@
  * </pre>
  *
  */
-public final class FSSoundConstructor
+public class FSSoundConstructor
 {
     private static final int[] riffSignature = { 82, 73, 70, 70 };
     private static final int[] wavSignature = { 87, 65, 86, 69 };

Modified: dev/dev-2-2/src/com/flagstone/transform/util/FSTextConstructor.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/util/FSTextConstructor.java	2006-06-05 15:48:40 UTC (rev 162)
+++ dev/dev-2-2/src/com/flagstone/transform/util/FSTextConstructor.java	2006-06-11 12:48:29 UTC (rev 163)
@@ -186,7 +186,7 @@
  * that cannot be displayed (the missing glyph will be displayed instead) or -1 
  * if all the characters are represented in the font.</P>
  */
-public final class FSTextConstructor
+public class FSTextConstructor
 {
     private static final int OS_2 = 0x4F532F32;
     private static final int HEAD = 0x68656164;



From smackay at berlios.de  Sun Jun 11 15:13:06 2006
From: smackay at berlios.de (smackay at berlios.de)
Date: Sun, 11 Jun 2006 15:13:06 +0200
Subject: [Transform-svn] r164 - in trunk: doc src/com/flagstone/transform
Message-ID: <200606111313.k5BDD6cN008546@sheep.berlios.de>

Author: smackay
Date: 2006-06-11 15:12:59 +0200 (Sun, 11 Jun 2006)
New Revision: 164

Modified:
   trunk/doc/CHANGES.txt
   trunk/src/com/flagstone/transform/FSDefineJPEGImage.java
   trunk/src/com/flagstone/transform/FSDefineJPEGImage2.java
   trunk/src/com/flagstone/transform/FSDefineJPEGImage3.java
Log:
Backed out changes to JPEG image classes - again - they were added 
again before the dev-2-2 branch was created.

Modified: trunk/doc/CHANGES.txt
===================================================================
--- trunk/doc/CHANGES.txt	2006-06-11 12:48:29 UTC (rev 163)
+++ trunk/doc/CHANGES.txt	2006-06-11 13:12:59 UTC (rev 164)
@@ -1,3 +1,10 @@
+2006-06-11 - smackay at flagstonesoftware.com
+
+    * Confirmed integration of TestNG into ant buils file, test.xml.
+    
+    * Backed out changes to JPEG image classes - again - they were added again 
+      before the dev-2-2 branch was created.
+      
 2006-06-05 - smackay at flagstonesoftware.com
 
     * Fixed bug in TextDump which was not including the actions which make up

Modified: trunk/src/com/flagstone/transform/FSDefineJPEGImage.java
===================================================================
--- trunk/src/com/flagstone/transform/FSDefineJPEGImage.java	2006-06-11 12:48:29 UTC (rev 163)
+++ trunk/src/com/flagstone/transform/FSDefineJPEGImage.java	2006-06-11 13:12:59 UTC (rev 164)
@@ -92,8 +92,6 @@
 public final class FSDefineJPEGImage extends FSDefineObject
 {
     private byte[] image = null;
-    private int width;
-    private int height;
     
     /**
      * Construct an FSDefineJPEGImage object, initalizing it with values decoded 
@@ -125,29 +123,9 @@
     public FSDefineJPEGImage(FSDefineJPEGImage obj)
     {
         super(obj);
-        width = obj.width;
-        height = obj.height;
         image = Transform.clone(obj.image);
     }
 
-    /** 
-     * Gets the width of the image in pixels. 
-     * 
-     * @return the width of the image.
-     */
-    public int getWidth()
-    {
-        return width; 
-    }    
-    /** 
-     * Gets the height of the image in pixels.
-     * 
-     * @return the height of the image in pixels.
-     */
-    public int getHeight()
-    {
-        return height;
-    }
     /** Gets the image data.
 
         @return the array of bytes containing the image data.
@@ -163,7 +141,6 @@
     public void setImage(byte[] bytes)
     {
         image = bytes;
-        decodeInfo();
     }
 
     public Object clone()
@@ -224,32 +201,4 @@
         setImage(data);
         coder.endObject(name());
     }
-    private boolean decodeInfo()
-    {
-        FSCoder coder = new FSCoder(FSCoder.BIG_ENDIAN, image);
-                 
-        if (coder.readWord(2, false) != 0xffd8)
-            return false;
-
-        while (true) 
-        {
-            int marker = coder.readWord(2, false);
-            int size = coder.readWord(2, false);
-            
-            if ((marker & 0xff00) != 0xff00) 
-                return false;
-            
-            if (marker >= 0xffc0 && marker <= 0xffcf && marker != 0xffc4 && marker != 0xffc8) 
-            {
-                coder.readWord(1, false);
-                height = coder.readWord(2, false);
-                width = coder.readWord(2, false);
-                return true;
-            } 
-            else 
-            {
-                coder.adjustPointer((size - 2) << 3);
-            }
-        }
-    }
 }

Modified: trunk/src/com/flagstone/transform/FSDefineJPEGImage2.java
===================================================================
--- trunk/src/com/flagstone/transform/FSDefineJPEGImage2.java	2006-06-11 12:48:29 UTC (rev 163)
+++ trunk/src/com/flagstone/transform/FSDefineJPEGImage2.java	2006-06-11 13:12:59 UTC (rev 164)
@@ -92,8 +92,6 @@
  */
 public final class FSDefineJPEGImage2 extends FSDefineObject
 {
-    private int width;
-    private int height;
     private byte[] image = null;
     private byte[] encodingTable = new byte[] { 
         (byte)0xFF, (byte)0xD8, (byte)0xFF, (byte)0xD9 
@@ -142,29 +140,9 @@
     {
         super(obj);
         image = Transform.clone(obj.image);
-        width = obj.width;
-        height = obj.height;
         encodingTable = Transform.clone(obj.encodingTable);
     }
 
-    /** 
-     * Gets the width of the image in pixels. 
-     * 
-     * @return the width of the image.
-     */
-    public int getWidth()
-    {
-        return width; 
-    }    
-    /** 
-     * Gets the height of the image in pixels.
-     * 
-     * @return the height of the image in pixels.
-     */
-    public int getHeight()
-    {
-        return height;
-    }
     /** Gets the image data.
 
         @return the array of bytes containing the image data.
@@ -184,7 +162,6 @@
     public void setImage(byte[] bytes)
     {
         image = bytes;
-        decodeInfo();
     }
 
     /** Sets the encoding table.
@@ -297,32 +274,4 @@
 
         return bytes;
     }
-    private boolean decodeInfo()
-    {
-        FSCoder coder = new FSCoder(FSCoder.BIG_ENDIAN, image);
-                 
-        if (coder.readWord(2, false) != 0xffd8)
-            return false;
-
-        while (true) 
-        {
-            int marker = coder.readWord(2, false);
-            int size = coder.readWord(2, false);
-            
-            if ((marker & 0xff00) != 0xff00) 
-                return false;
-            
-            if (marker >= 0xffc0 && marker <= 0xffcf && marker != 0xffc4 && marker != 0xffc8) 
-            {
-                coder.readWord(1, false);
-                height = coder.readWord(2, false);
-                width = coder.readWord(2, false);
-                return true;
-            } 
-            else 
-            {
-                coder.adjustPointer((size - 2) << 3);
-            }
-        }
-    }
 }

Modified: trunk/src/com/flagstone/transform/FSDefineJPEGImage3.java
===================================================================
--- trunk/src/com/flagstone/transform/FSDefineJPEGImage3.java	2006-06-11 12:48:29 UTC (rev 163)
+++ trunk/src/com/flagstone/transform/FSDefineJPEGImage3.java	2006-06-11 13:12:59 UTC (rev 164)
@@ -116,8 +116,6 @@
  */  
 public final class FSDefineJPEGImage3 extends FSDefineObject
 {
-    private int width;
-    private int height;
     private byte[] image = null;
     private byte[] encodingTable = new byte[] { 
         (byte)0xFF, (byte)0xD8, (byte)0xFF, (byte)0xD9 
@@ -160,30 +158,10 @@
     {
         super(obj);
         image = Transform.clone(obj.image);
-        width = obj.width;
-        height = obj.height;
         encodingTable = Transform.clone(obj.encodingTable);
         alpha = Transform.clone(obj.alpha);
     }
 
-    /** 
-     * Gets the width of the image in pixels. 
-     * 
-     * @return the width of the image.
-     */
-    public int getWidth()
-    {
-        return width; 
-    }    
-    /** 
-     * Gets the height of the image in pixels.
-     * 
-     * @return the height of the image in pixels.
-     */
-    public int getHeight()
-    {
-        return height;
-    }
     /** Gets the encoding table.
 
         @return the array of bytes containing the encoding table.
@@ -218,7 +196,6 @@
     public void setImage(byte[] bytes)
     {
         image = bytes;
-        decodeInfo();
     }
 
     /** Sets the alpha channel data with the zlib compressed data.
@@ -350,32 +327,4 @@
 
         return bytes;
     }
-    private boolean decodeInfo()
-    {
-        FSCoder coder = new FSCoder(FSCoder.BIG_ENDIAN, image);
-                 
-        if (coder.readWord(2, false) != 0xffd8)
-            return false;
-
-        while (true) 
-        {
-            int marker = coder.readWord(2, false);
-            int size = coder.readWord(2, false);
-            
-            if ((marker & 0xff00) != 0xff00) 
-                return false;
-            
-            if (marker >= 0xffc0 && marker <= 0xffcf && marker != 0xffc4 && marker != 0xffc8) 
-            {
-                coder.readWord(1, false);
-                height = coder.readWord(2, false);
-                width = coder.readWord(2, false);
-                return true;
-            } 
-            else 
-            {
-                coder.adjustPointer((size - 2) << 3);
-            }
-        }
-    }
 }
\ No newline at end of file



From smackay at berlios.de  Tue Jun 20 09:18:53 2006
From: smackay at berlios.de (smackay at berlios.de)
Date: Tue, 20 Jun 2006 09:18:53 +0200
Subject: [Transform-svn] r165 - in trunk: doc src/com/flagstone/transform
Message-ID: <200606200718.k5K7Ir2S025059@sheep.berlios.de>

Author: smackay
Date: 2006-06-20 09:18:32 +0200 (Tue, 20 Jun 2006)
New Revision: 165

Modified:
   trunk/doc/CHANGES.txt
   trunk/src/com/flagstone/transform/FSDefineJPEGImage2.java
   trunk/src/com/flagstone/transform/FSDefineJPEGImage3.java
Log:
Fixed bug in FSDefinedJPEGImage2 and FSDefinedJPEGImage3 where 
the encoding table could not be set to null (to create an empty 
table).

Modified: trunk/doc/CHANGES.txt
===================================================================
--- trunk/doc/CHANGES.txt	2006-06-11 13:12:59 UTC (rev 164)
+++ trunk/doc/CHANGES.txt	2006-06-20 07:18:32 UTC (rev 165)
@@ -1,3 +1,8 @@
+2006-06-20 - smackay at flagstonesoftware.com
+
+    * Fixed bug in FSDefinedJPEGImage2 and FSDefinedJPEGImage3 where the 
+      encoding table could not be set to null (to create an empty table).
+
 2006-06-11 - smackay at flagstonesoftware.com
 
     * Confirmed integration of TestNG into ant buils file, test.xml.

Modified: trunk/src/com/flagstone/transform/FSDefineJPEGImage2.java
===================================================================
--- trunk/src/com/flagstone/transform/FSDefineJPEGImage2.java	2006-06-11 13:12:59 UTC (rev 164)
+++ trunk/src/com/flagstone/transform/FSDefineJPEGImage2.java	2006-06-20 07:18:32 UTC (rev 165)
@@ -31,9 +31,13 @@
 package com.flagstone.transform;
 
 /**
-FSDefineJPEGImage2 is used to define a JPEG encoded image with an integrated encoding table. 
+FSDefineJPEGImage2 is used to define a JPEG encoded image with an integrated 
+encoding table. 
   
-<p>It extends the FSDefineJPEGImage class by including a separate encoding table, rather than using an FSJPEGEncodingTable object to store the encoding table. This allows multiple JPEG images with different amounts of compression to be included within a Flash file.</p>
+<p>It extends the FSDefineJPEGImage class by including a separate encoding table, 
+rather than using an FSJPEGEncodingTable object to store the encoding table. 
+This allows multiple JPEG images with different amounts of compression to be 
+included within a Flash file.</p>
 
 <table class="datasheet">
 
@@ -45,7 +49,8 @@
 
 <tr>
 <td><a name="FSDefineJPEGImage2_1">identifier</a></td>
-<td>A unique identifier, in the range 1..65535, that is used to reference the image from other objects.</td>
+<td>A unique identifier, in the range 1..65535, that is used to reference the 
+image from other objects.</td>
 </tr>
 
 <tr>
@@ -59,11 +64,17 @@
 </tr>
 </table>
 
-<p>Although the encoding table defines how the image is compressed it is not essential. If an FSDefineJPEGImage2 object is created with an empty encoding table then the Flash Player will still display the JPEG image correctly. The empty encoding table is not a null object. It contains four bytes: 0xFF, 0xD9, 0xFF, 0xD8. Note however that this is reversed from StartOfImage (SOI, 0xFFD8) and EndOfImage (EOI, 0xFFD9) tags defined in the JPEG file format specification. This appears to be a bug in Flash. However the order is preserved to ensure compatibility although code has been tested with the normal order for the tags and the images were displayed correctly.</p>
+<p>Although the encoding table defines how the image is compressed it is not 
+essential. If an FSDefineJPEGImage3 object is created with an empty encoding 
+table then the Flash Player will still display the JPEG image correctly. The 
+empty encoding table is not a null object. It contains four bytes: 0xFF, 0xD8, 
+0xFF, 0xD9. For convenience passing a null reference to any of the constructors 
+or to the setEncodingTable method will create an empty table.</p>
 
 <h1 class="datasheet">Examples</h1>
 
-<p>The simplest way to use the FSDefineJPEGImage2 class is to use the constructor that specifies the JPEG file to initialise the object:</p>
+<p>The simplest way to use the FSDefineJPEGImage2 class is to use the constructor 
+that specifies the JPEG file to initialise the object:</p>
 
 <pre>
 File aFile = new File(filename);
@@ -93,9 +104,7 @@
 public final class FSDefineJPEGImage2 extends FSDefineObject
 {
     private byte[] image = null;
-    private byte[] encodingTable = new byte[] { 
-        (byte)0xFF, (byte)0xD8, (byte)0xFF, (byte)0xD9 
-    };
+    private byte[] encodingTable = null;
 
     /**
      * Construct an FSDefineJPEGImage2 object, initalizing it with values decoded 
@@ -129,6 +138,7 @@
     {
         super(DefineJPEGImage2, anIdentifier);
         setImage(imageBytes);
+        setEncodingTable(null);
     }
     /**
      * Constructs an FSDefineJPEGImage2 object by copying values from an 
@@ -170,6 +180,9 @@
         */
     public void setEncodingTable(byte[] bytes)
     {
+        if (bytes == null) {
+            encodingTable = new byte[] { (byte)0xFF, (byte)0xD8, (byte)0xFF, (byte)0xD9 };
+        }
         encodingTable = bytes;
     }
 

Modified: trunk/src/com/flagstone/transform/FSDefineJPEGImage3.java
===================================================================
--- trunk/src/com/flagstone/transform/FSDefineJPEGImage3.java	2006-06-11 13:12:59 UTC (rev 164)
+++ trunk/src/com/flagstone/transform/FSDefineJPEGImage3.java	2006-06-20 07:18:32 UTC (rev 165)
@@ -60,13 +60,20 @@
 
 <tr>
 <td><a name="FSDefineJPEGImage3_3">alpha</a></td>
-<td>An array of bytes containing the zlib encoded alpha channel data for each pixel in the image.</td>
+<td>An array of bytes containing the zlib encoded alpha channel data for each 
+pixel in the image.</td>
 </tr>
 </table>
 
-<p>Although the encoding table defines how the image is compressed it is not essential. If an FSDefineJPEGImage3 object is created with an empty encoding table then the Flash Player will still display the JPEG image correctly. The empty encoding table is not a null object. It contains four bytes: 0xFF, 0xD9, 0xFF, 0xD8. Note however that this is reversed from StartOfImage (SOI, 0xFFD8) and EndOfImage (EOI, 0xFFD9) tags defined in the JPEG file format specification. This appears to be a bug in Flash. However the order is preserved to ensure compatibility although code has been tested with the normal order for the tags and the images were displayed correctly.</p>
+<p>Although the encoding table defines how the image is compressed it is not 
+essential. If an FSDefineJPEGImage3 object is created with an empty encoding 
+table then the Flash Player will still display the JPEG image correctly. The 
+empty encoding table is not a null object. It contains four bytes: 0xFF, 0xD8, 
+0xFF, 0xD9. For convenience passing a null reference to any of the constructors 
+or to the setEncodingTable method will create an empty table.</p>
 
-<p>The simplest way to use the FSDefineJPEGImage3 class is to use the constructor that specifies the JPEG file to initialise the object:</p>
+<p>The simplest way to use the FSDefineJPEGImage3 class is to use the constructor 
+that specifies the JPEG file to initialise the object:</p>
 
 <pre>
 File aFile = new File(filename);
@@ -108,18 +115,19 @@
 movie.add(new FSDefineJPEGImage3(movie.newIdentifier(), bytes, null, compressedAlpha));
 </pre>
 
-<p>This generates an object with an empty encoding table, however the image will still be displayed correctly. The empty encoding table is not a null object. The alpha channel data is set so the image is completely opaque.</P>
+<p>This generates an object with an empty encoding table, however the image will 
+still be displayed correctly. The empty encoding table is not a null object. The 
+alpha channel data is set so the image is completely opaque.</P>
 
 <h1 class="datasheet">History</h1>
 
-<p>The FSDefineJPEGImage3 class represents the DefineBitsJPEG3 tag from the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 3.</p>
+<p>The FSDefineJPEGImage3 class represents the DefineBitsJPEG3 tag from the 
+Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 3.</p>
  */  
 public final class FSDefineJPEGImage3 extends FSDefineObject
 {
     private byte[] image = null;
-    private byte[] encodingTable = new byte[] { 
-        (byte)0xFF, (byte)0xD8, (byte)0xFF, (byte)0xD9 
-    };
+    private byte[] encodingTable = null;
     private byte[] alpha = null;
 
     /**
@@ -186,6 +194,9 @@
         */
     public void setEncodingTable(byte[] bytes)
     {
+        if (bytes == null) {
+            encodingTable = new byte[] { (byte)0xFF, (byte)0xD8, (byte)0xFF, (byte)0xD9 };
+        }
         encodingTable = bytes;
     }
 



From smackay at berlios.de  Sat Jun 24 13:03:02 2006
From: smackay at berlios.de (smackay at berlios.de)
Date: Sat, 24 Jun 2006 13:03:02 +0200
Subject: [Transform-svn] r166 - trunk/doc/releases
Message-ID: <200606241103.k5OB32W5005014@sheep.berlios.de>

Author: smackay
Date: 2006-06-24 13:02:40 +0200 (Sat, 24 Jun 2006)
New Revision: 166

Added:
   trunk/doc/releases/transform-2.1.3.txt
Log:
Added release notes for 2.1.3

Added: trunk/doc/releases/transform-2.1.3.txt
===================================================================
--- trunk/doc/releases/transform-2.1.3.txt	2006-06-20 07:18:32 UTC (rev 165)
+++ trunk/doc/releases/transform-2.1.3.txt	2006-06-24 11:02:40 UTC (rev 166)
@@ -0,0 +1,66 @@
+------------------------------------------------------------
+  Release Notes for Transform SWF for Java, Version 2.1.3.
+------------------------------------------------------------
+
+This a minor release fixing bugs.
+
+Bug Fixes     
+    FSDefineImage2: The encoding of the type and length always uses 6 bytes.     
+    TextDump: NewFunction and NewFunction2 no longer decodes actions twice.     
+	FSDefinedJPEGImage[2,3]: now allows null encoding tables.
+	
+Package Changes     
+    The TestNG libraries are now included in the release.     
+ 
+-------------
+  Bug Fixes  
+-------------
+
+1. FSDefineImage2: The encoding of the type and length always uses 6 bytes.  
+
+The type and length of each data structure can be encoded using either 2 bytes,
+if the length of the encoded structure is less than 63 bytes or 6 bytes if it 
+is longer. There is a bug in Flash that requires that the FSDefineImage class 
+(DefineLosslessImage in the Macromedia specification) always uses the 6-byte 
+form. This bug was also discivered to apply to the FSDefineImage2 class 
+(DefineLosslessImage2). The class now always uses the 6-byte form.
+
+2. TextDump: NewFunction and NewFunction2 no longer decodes actions twice.  
+
+The definition of the NewFunction and NewFunction2 actions from Macromedia
+contains a field that specifies the size, in bytes, of the encoded actions that 
+make up the body of the function. These encoded actions are not part of the data 
+structure but instead follow immediately  after the NewFunction[2] action.
+  
+In Transform the encoded actions are stored in an array internal to the 
+NewFunction[2] action as this allows the developer to ignore the encoded length 
+of the function body - the NewFunction[2] action calculates that when the 
+objects are encoded.
+  
+The TextDump tool was decoding the actions that make up the body of the function
+twice. The result was that the actions appeared as part of the function 
+definition then again as a series of actions following the function definition.
+This is now fixed.
+
+3. FSDefinedJPEGImage[2,3]: now allows null encoding tables.  
+
+The documentation for the FSDefineJPEGImage2 and FSDefineJPEGImage2 classes
+state that a null reference can be used when creating objects with empty 
+(undefined) encoding tables. This was incorrect and a NullPointerException would
+be throw.
+
+The classes have now been fixed to allow this. Passing a null reference will
+create an empty table containing only the StartOfImage (0xFFD8) and EndOfImage  
+(0xFFD9) markers.
+
+
+-------------------
+  Package Changes  
+-------------------
+
+1. The TestNG libraries are now included in the release.  
+
+TestNG is used to perform testing on the classes in the framework. Rather than 
+having to download them separately from www.testng.org, the JAR files are now
+included in the release. Thanks to Cedric Beust and the TestNG team for allowing
+this.



From smackay at berlios.de  Sat Jun 24 13:04:57 2006
From: smackay at berlios.de (smackay at berlios.de)
Date: Sat, 24 Jun 2006 13:04:57 +0200
Subject: [Transform-svn] r167 - trunk
Message-ID: <200606241104.k5OB4v1J005516@sheep.berlios.de>

Author: smackay
Date: 2006-06-24 13:04:32 +0200 (Sat, 24 Jun 2006)
New Revision: 167

Modified:
   trunk/build.xml
Log:
Updated version number for 2.1.3

Modified: trunk/build.xml
===================================================================
--- trunk/build.xml	2006-06-24 11:02:40 UTC (rev 166)
+++ trunk/build.xml	2006-06-24 11:04:32 UTC (rev 167)
@@ -37,7 +37,7 @@
 
     </description>
 
-    <property name="version" value="2.1.2"/>
+    <property name="version" value="2.1.3"/>
     
     <property name="src.dir" location="src"/>
     <property name="lib.dir" location="lib"/>



From smackay at berlios.de  Sun Jun 25 19:02:54 2006
From: smackay at berlios.de (smackay at berlios.de)
Date: Sun, 25 Jun 2006 19:02:54 +0200
Subject: [Transform-svn] r168 - trunk/src/com/flagstone/transform
Message-ID: <200606251702.k5PH2sn1012463@sheep.berlios.de>

Author: smackay
Date: 2006-06-25 19:02:43 +0200 (Sun, 25 Jun 2006)
New Revision: 168

Modified:
   trunk/src/com/flagstone/transform/FSPlaceObject2.java
Log:
Corrected bug in FSPlaceObject2.equals() that did include result 
from comparing other attributes when comparing encoded actions.

Modified: trunk/src/com/flagstone/transform/FSPlaceObject2.java
===================================================================
--- trunk/src/com/flagstone/transform/FSPlaceObject2.java	2006-06-24 11:04:32 UTC (rev 167)
+++ trunk/src/com/flagstone/transform/FSPlaceObject2.java	2006-06-25 17:02:43 UTC (rev 168)
@@ -821,9 +821,9 @@
                 result = result && transform == typedObject.transform;
 
             if (clipEvents != null)
-                result = clipEvents.equals(typedObject.clipEvents);
+                result = result && clipEvents.equals(typedObject.clipEvents);
             else
-                result = Transform.equals(encodedEvents, typedObject.encodedEvents);
+                result = result && Transform.equals(encodedEvents, typedObject.encodedEvents);
         }
         return result;
     }



From smackay at berlios.de  Sun Jun 25 19:04:51 2006
From: smackay at berlios.de (smackay at berlios.de)
Date: Sun, 25 Jun 2006 19:04:51 +0200
Subject: [Transform-svn] r169 - trunk/src/com/flagstone/transform
Message-ID: <200606251704.k5PH4pPX012729@sheep.berlios.de>

Author: smackay
Date: 2006-06-25 19:04:07 +0200 (Sun, 25 Jun 2006)
New Revision: 169

Modified:
   trunk/src/com/flagstone/transform/FSCoder.java
Log:
The context variable, version is now publicly accessible - this
should only be used for testing.

Modified: trunk/src/com/flagstone/transform/FSCoder.java
===================================================================
--- trunk/src/com/flagstone/transform/FSCoder.java	2006-06-25 17:02:43 UTC (rev 168)
+++ trunk/src/com/flagstone/transform/FSCoder.java	2006-06-25 17:04:07 UTC (rev 169)
@@ -1051,7 +1051,11 @@
     public static final int TransparentColors = 0;
 
     static final int Action = 1;
-    static final int Version = 2;
+    /**
+     * Version is used to pass the current version of Flash that an object is 
+     * being encoded or decoded for.
+     */
+    public static final int Version = 2;
     static final int Type = 3;
     static final int Empty = 4;
     static final int Identifier = 5;



From smackay at berlios.de  Sun Jun 25 19:15:35 2006
From: smackay at berlios.de (smackay at berlios.de)
Date: Sun, 25 Jun 2006 19:15:35 +0200
Subject: [Transform-svn] r170 - trunk/src/com/flagstone/transform/test
Message-ID: <200606251715.k5PHFZkf018978@sheep.berlios.de>

Author: smackay
Date: 2006-06-25 19:15:26 +0200 (Sun, 25 Jun 2006)
New Revision: 170

Modified:
   trunk/src/com/flagstone/transform/test/FSColorTest.java
Log:
Refactored code. Added method to encode data. Updated test values.

Modified: trunk/src/com/flagstone/transform/test/FSColorTest.java
===================================================================
--- trunk/src/com/flagstone/transform/test/FSColorTest.java	2006-06-25 17:04:07 UTC (rev 169)
+++ trunk/src/com/flagstone/transform/test/FSColorTest.java	2006-06-25 17:15:26 UTC (rev 170)
@@ -33,18 +33,17 @@
 
 public class FSColorTest 
 {    
-    private byte[][] testData = new byte[][] { 
-        {(byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00},
-        {(byte)0xFF, (byte)0xFF, (byte)0xFF, (byte)0xFF},
-    };
-                
-    private int[][] testValues = new int[][] {
+    private int[][] values = new int[][] {
         {  0,   0,   0,   0},
+        {  1,   2,   3,   4},
         {255, 255, 255, 255},
     };
                 
+    private byte[][] encodedValues = null;
+    
     public FSColorTest()
-    {        
+    {
+        encodeValues();
     }
     /**
      * @testng.test groups="color"
@@ -63,13 +62,13 @@
     {
         FSColor colour = null;
         
-        for (int i=0; i<testValues.length; i++) 
+        for (int i=0; i<values.length; i++) 
         {
-            colour = new FSColor(testValues[i][0], testValues[i][1], testValues[i][2]);
-            compareAttributes(colour, testValues[i], 3);
+            colour = new FSColor(values[i][0], values[i][1], values[i][2]);
+            compareAttributes(colour, values[i], 3);
 
-            colour = new FSColor(testValues[i][0], testValues[i][1], testValues[i][2], testValues[i][3]);
-            compareAttributes(colour, testValues[i], 4);
+            colour = new FSColor(values[i][0], values[i][1], values[i][2], values[i][3]);
+            compareAttributes(colour, values[i], 4);
         }
     }
     /**
@@ -79,30 +78,30 @@
     {
         FSColor colour = new FSColor(-1, -1, -1, -1);
         
-        for (int i=0; i<testValues.length; i++) 
+        for (int i=0; i<values.length; i++) 
         {
-            colour.setRed(testValues[i][0]);
-            colour.setGreen(testValues[i][1]);
-            colour.setBlue(testValues[i][2]);
-            colour.setAlpha(testValues[i][3]);
+            colour.setRed(values[i][0]);
+            colour.setGreen(values[i][1]);
+            colour.setBlue(values[i][2]);
+            colour.setAlpha(values[i][3]);
             
-            compareAttributes(colour, testValues[i], 4);
+            compareAttributes(colour, values[i], 4);
         }
 
         colour = new FSColor(-1, -1, -1, -1);
         
-        for (int i=0; i<testValues.length; i++) 
+        for (int i=0; i<values.length; i++) 
         {
-            colour.setChannels(testValues[i][0], testValues[i][1], testValues[i][2], testValues[i][3]);            
-            compareAttributes(colour, testValues[i], 4);
+            colour.setChannels(values[i][0], values[i][1], values[i][2], values[i][3]);            
+            compareAttributes(colour, values[i], 4);
         }
         
         colour = new FSColor(-1, -1, -1, -1);
         
-        for (int i=0; i<testValues.length; i++) 
+        for (int i=0; i<values.length; i++) 
         {
-            colour.setChannels(testValues[i][0], testValues[i][1], testValues[i][2]);            
-            compareAttributes(colour, testValues[i], 3);
+            colour.setChannels(values[i][0], values[i][1], values[i][2]);            
+            compareAttributes(colour, values[i], 3);
         }       
     }
     /**
@@ -122,6 +121,21 @@
         checkDecode(4); // transparent colours
     }
     
+    private void encodeValues()
+    {
+        encodedValues = new byte[values.length][];
+        
+        for (int i=0; i<values.length; i++)
+        {
+            encodedValues[i] = new byte[values[i].length];
+            
+            for (int j=0; j<values[i].length; j++)
+            {
+                encodedValues[i][j] = (byte)values[i][j];
+            }
+        }
+    }
+    
     private void checkEncode(int count)
     {
         FSColor colour = null;
@@ -129,12 +143,12 @@
         
         coder.setContext(FSCoder.TransparentColors, (count == 4) ? 1:0);
         
-        for (int i=0; i<testValues.length; i++) 
+        for (int i=0; i<values.length; i++) 
         {
             if (count == 3)
-                colour = new FSColor(testValues[i][0], testValues[i][1], testValues[i][2]);
+                colour = new FSColor(values[i][0], values[i][1], values[i][2]);
             else
-                colour = new FSColor(testValues[i][0], testValues[i][1], testValues[i][2], testValues[i][3]);
+                colour = new FSColor(values[i][0], values[i][1], values[i][2], values[i][3]);
                 
             coder.setPointer(0);
             colour.encode(coder);
@@ -142,18 +156,18 @@
             assert ((colour.length(coder)) == count) : "Calculated length does not match expected.";
             assert ((coder.getPointer() >>> 3) == count) : "Calculated length does not match encoded length.";
             
-            compareData(coder.getData(), testData[i], count);
+            compareData(coder.getData(), encodedValues[i], count);
         }
     }
     private void checkDecode(int count)
     {
         FSCoder coder = new FSCoder(FSCoder.LITTLE_ENDIAN, count);
         
-        for (int i=0; i<testValues.length; i++) 
+        for (int i=0; i<values.length; i++) 
         {
-            coder.setData(FSCoder.LITTLE_ENDIAN, testData[i]);
+            coder.setData(FSCoder.LITTLE_ENDIAN, encodedValues[i]);
             
-            compareAttributes(new FSColor(coder), testValues[i], count);
+            compareAttributes(new FSColor(coder), values[i], count);
 
             assert ((coder.getPointer() >>> 3) == count) : "";
         }



From smackay at berlios.de  Sun Jun 25 19:16:21 2006
From: smackay at berlios.de (smackay at berlios.de)
Date: Sun, 25 Jun 2006 19:16:21 +0200
Subject: [Transform-svn] r171 - trunk/doc
Message-ID: <200606251716.k5PHGLZG019357@sheep.berlios.de>

Author: smackay
Date: 2006-06-25 19:16:19 +0200 (Sun, 25 Jun 2006)
New Revision: 171

Modified:
   trunk/doc/CHANGES.txt
Log:
Updated with latest changes.

Modified: trunk/doc/CHANGES.txt
===================================================================
--- trunk/doc/CHANGES.txt	2006-06-25 17:15:26 UTC (rev 170)
+++ trunk/doc/CHANGES.txt	2006-06-25 17:16:19 UTC (rev 171)
@@ -1,3 +1,13 @@
+2006-06-25 - smackay at flagstonesoftware.com
+
+    * Corrected bug in FSPlaceObject2.equals() that did include result from
+      comparing other attributes when comparing encoded actions.
+      
+    * The context variable, version is now publicly accessible - this should 
+      only be used for testing.
+      
+    * Updated FSColorTest and added more test data.
+      
 2006-06-20 - smackay at flagstonesoftware.com
 
     * Fixed bug in FSDefinedJPEGImage2 and FSDefinedJPEGImage3 where the 



From smackay at berlios.de  Mon Jun 26 20:03:02 2006
From: smackay at berlios.de (smackay at berlios.de)
Date: Mon, 26 Jun 2006 20:03:02 +0200
Subject: [Transform-svn] r172 - trunk/src/com/flagstone/transform/test
Message-ID: <200606261803.k5QI32S6028732@sheep.berlios.de>

Author: smackay
Date: 2006-06-26 20:02:51 +0200 (Mon, 26 Jun 2006)
New Revision: 172

Added:
   trunk/src/com/flagstone/transform/test/FSClassTest.java
Modified:
   trunk/src/com/flagstone/transform/test/FSColorTest.java
   trunk/src/com/flagstone/transform/test/FSSetBackgroundColorTest.java
Log:
1. Added class FSClassTest to test package for test shared between 
the  different test classes.
      
2. Completed the test class FSSetBackgroundColorTest.

Added: trunk/src/com/flagstone/transform/test/FSClassTest.java
===================================================================
--- trunk/src/com/flagstone/transform/test/FSClassTest.java	2006-06-25 17:16:19 UTC (rev 171)
+++ trunk/src/com/flagstone/transform/test/FSClassTest.java	2006-06-26 18:02:51 UTC (rev 172)
@@ -0,0 +1,126 @@
+/*
+ * FSSetBackgroundColorTest.java
+ * Transform
+ * 
+ * Copyright (c) 2001-2006 Flagstone Software Ltd. All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without modification, 
+ * are permitted provided that the following conditions are met:
+ *
+ *  * Redistributions of source code must retain the above copyright notice, this
+ *    list of conditions and the following disclaimer.
+ *  * Redistributions in binary form must reproduce the above copyright notice, 
+ *    this list of conditions and the following disclaimer in the documentation 
+ *    and/or other materials provided with the distribution.
+ *  * Neither the name of Flagstone Software Ltd. nor the names of its contributors 
+ *    may be used to endorse or promote products derived from this software 
+ *    without specific prior written permission.
+ *
+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND 
+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED 
+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. 
+ * IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, 
+ * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, 
+ * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, 
+ * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
+ * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE 
+ * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED 
+ * OF THE POSSIBILITY OF SUCH DAMAGE.
+ */
+package com.flagstone.transform.test;
+
+import com.flagstone.transform.*;
+
+public abstract class FSClassTest 
+{               
+    public FSClassTest()
+    {        
+    }
+    
+    protected void checkType(int expected, int actual)
+    {
+        assert expected == actual : "Types are not identical.";    
+    }
+
+    protected void checkIdentical(FSTransformObject expected, FSTransformObject actual)
+    {
+        assert expected == actual : "References are not to the same object.";    
+    }
+
+    protected void checkNotIdentical(FSTransformObject expected, FSTransformObject actual)
+    {
+        assert expected != actual : "References are to the same object.";    
+    }
+
+    protected void checkEqual(FSTransformObject expected, FSTransformObject actual)
+    {
+        assert expected != null : "First object is null.";    
+        assert actual != null : "Second object is null.";    
+
+        assert actual.equals(expected) : "Objects do not match.";    
+    }
+
+    protected void checkNotEqual(FSTransformObject expected, FSTransformObject actual)
+    {
+        assert expected != null : "First object is null.";    
+        assert actual != null : "Second object is null.";    
+
+        assert actual.equals(expected) == false : "Objects should not match.";    
+    }
+
+    protected void checkEncode(FSTransformObject obj, int[] bytes)
+    {
+        FSCoder coder = new FSCoder(FSCoder.LITTLE_ENDIAN, 0);
+        
+        checkEncode(coder, obj, bytes);
+    }
+    
+    protected void checkEncode(FSCoder coder, FSTransformObject obj, int[] bytes)
+    {
+        int length = obj.length(coder);
+        
+        if (obj instanceof FSMovieObject)
+            length += (length < 63) ? 2 : 6;
+        
+        coder.setPointer(0);
+        obj.encode(coder);
+        
+        assert (length == bytes.length) : "Calculated length does not match expected.";
+
+        compareData(coder.getData(), bytes);
+    }
+    
+    protected void checkDecode(FSCoder coder, int length)
+    {
+        int delta = (coder.getPointer() >>> 3) - length;
+        
+        if (delta < 0)
+            assert false : "Actual length is less than expected by "+(-delta)+" bytes.";
+        else if (delta > 0)
+            assert false : "Actual length is greater than expected by "+delta+" bytes.";
+    }
+    
+    protected void compareData(byte[] actual, int[] expected)
+    {
+        int delta = actual.length - expected.length;
+        
+        if (delta < 0)
+            assert false : "Actual length is less than expected by "+(-delta)+" bytes.";
+        else if (delta > 0)
+            assert false : "Actual length is greater than expected by "+delta+" bytes.";
+        
+        for (int i=0; i<expected.length; i++) {
+            assert(actual[i] == (byte)expected[i]) : "Encoded byte does not match expected value";
+        }
+    }
+
+    protected byte[] compact(int[] ints)
+    {
+        byte[] bytes = new byte[ints.length];
+        
+        for (int i=0; i<ints.length; i++)
+            bytes[i] = (byte)ints[i];
+        
+        return bytes;
+    }
+}

Modified: trunk/src/com/flagstone/transform/test/FSColorTest.java
===================================================================
--- trunk/src/com/flagstone/transform/test/FSColorTest.java	2006-06-25 17:16:19 UTC (rev 171)
+++ trunk/src/com/flagstone/transform/test/FSColorTest.java	2006-06-26 18:02:51 UTC (rev 172)
@@ -31,160 +31,272 @@
 
 import com.flagstone.transform.*;
 
-public class FSColorTest 
+public class FSColorTest extends FSClassTest
 {    
-    private int[][] values = new int[][] {
+    private static int[][] opaque = new int[][] {
+        {  0,   0,   0},
+        { 51,   0,   0},
+        { 51, 102,   0},
+        {  0, 102,   0},
+        {  0, 102, 153},
+        {  0,   0, 153},
+        { 51,   0, 153},
+        { 51, 102, 153},
+    };
+    
+    private static int[][] alpha = new int[][] {
+        { 51, 102, 153,   0},
+        { 51, 102, 153, 204},
+        { 51,   0, 153, 204},
+        { 51,   0, 153,   0},
+        {  0,   0, 153,   0},
+        {  0,   0, 153, 204},
+        {  0, 102, 153, 204},
+        {  0, 102, 153,   0},
+        {  0, 102,   0,   0},
+        {  0, 102,   0, 204},
+        { 51, 102,   0, 204},
+        { 51, 102,   0,   0},
+        { 51,   0,   0,   0},
+        { 51,   0,   0, 204},
+        {  0,   0,   0, 204},
         {  0,   0,   0,   0},
-        {  1,   2,   3,   4},
-        {255, 255, 255, 255},
     };
-                
-    private byte[][] encodedValues = null;
     
-    public FSColorTest()
+    private static FSColor[] colours = null;
+    private static FSColor[] coloursWithAlpha = null;
+    
+    public static FSColor[] colours()
     {
-        encodeValues();
+        if (colours == null)
+        {
+            colours = new FSColor[opaque.length];
+            
+            for (int i=0; i<opaque.length; i++) {
+                colours[i] = new FSColor(opaque[i][0], opaque[i][1], opaque[i][2]);
+            }       
+       }
+       return colours;
     }
-    /**
-     * @testng.test groups="color"
-     */
-    public void color()
+    
+    public static int[][] encodedColours()
     {
-        checkConstructors();
-        checkAccessors();
-        checkEncode();
-        checkDecode();
+        int[][] data = new int[opaque.length][];
+        
+        for (int i=0; i<opaque.length; i++)
+        {
+            data[i] = new int[opaque[i].length];
+            
+            for (int j=0; j<opaque[i].length; j++) {
+                data[i][j] = opaque[i][j];
+            }
+        }
+        return data;
     }
+    
+    public static FSColor[] coloursWithAlpha()
+    {
+        if (coloursWithAlpha == null)
+        {
+            coloursWithAlpha = new FSColor[alpha.length];
+            
+            for (int i=0; i<alpha.length; i++) 
+            {
+                coloursWithAlpha[i] = new FSColor(alpha[i][0], alpha[i][1], alpha[i][2], alpha[i][3]);
+            }       
+       }
+       return colours;
+    }
+    
     /**
-     * @testng.test groups="constructors"
+     * @testng.test groups="color, constructors"
      */
     public void checkConstructors()
     {
         FSColor colour = null;
         
-        for (int i=0; i<values.length; i++) 
+        for (int i=0; i<opaque.length; i++) 
         {
-            colour = new FSColor(values[i][0], values[i][1], values[i][2]);
-            compareAttributes(colour, values[i], 3);
-
-            colour = new FSColor(values[i][0], values[i][1], values[i][2], values[i][3]);
-            compareAttributes(colour, values[i], 4);
+            colour = new FSColor(opaque[i][0], opaque[i][1], opaque[i][2]);
+            
+            checkColours(colour, opaque[i]);
         }
+    }   
+    /**
+     * @testng.test groups="color, constructors"
+     */
+    public void checkConstructorsWithAlpha()
+    {
+        FSColor colour = null;
+        
+        for (int i=0; i<alpha.length; i++) 
+        {
+            colour = new FSColor(alpha[i][0], alpha[i][1], alpha[i][2], alpha[i][3]);
+            
+            checkColours(colour, alpha[i]);
+        }
     }
     /**
-     * @testng.test groups="accessors"
+     * @testng.test groups="color, constructors"
      */
+    public void checkCopyConstructors()
+    {
+        for (int i=0; i<opaque.length; i++) 
+        {
+            FSColor colour = new FSColor(opaque[i][0], opaque[i][1], opaque[i][2]);
+            
+            checkColours(new FSColor(colour), opaque[i]);
+        }
+   }    
+    /**
+     * @testng.test groups="color, constructors"
+     */
+    public void checkCopyConstructorsWithAlpha()
+    {
+        for (int i=0; i<alpha.length; i++) 
+        {
+            FSColor colour = new FSColor(alpha[i][0], alpha[i][1], alpha[i][2], alpha[i][3]);
+            
+            checkColours(new FSColor(colour), alpha[i]);
+        }
+    }    
+    /**
+     * @testng.test groups="color, accessors"
+     */
     public void checkAccessors()
     {
-        FSColor colour = new FSColor(-1, -1, -1, -1);
+        FSColor colour = new FSColor(-1, -1, -1);
         
-        for (int i=0; i<values.length; i++) 
+        for (int i=0; i<opaque.length; i++) 
         {
-            colour.setRed(values[i][0]);
-            colour.setGreen(values[i][1]);
-            colour.setBlue(values[i][2]);
-            colour.setAlpha(values[i][3]);
+            colour.setRed(opaque[i][0]);
+            colour.setGreen(opaque[i][1]);
+            colour.setBlue(opaque[i][2]);
             
-            compareAttributes(colour, values[i], 4);
+            checkColours(colour, opaque[i]);
         }
 
-        colour = new FSColor(-1, -1, -1, -1);
+        colour = new FSColor(-1, -1, -1);
         
-        for (int i=0; i<values.length; i++) 
+        for (int i=0; i<opaque.length; i++) 
         {
-            colour.setChannels(values[i][0], values[i][1], values[i][2], values[i][3]);            
-            compareAttributes(colour, values[i], 4);
+            colour.setChannels(opaque[i][0], opaque[i][1], opaque[i][2]);            
+            
+            checkColours(colour, opaque[i]);
         }
+    }
+    /**
+     * @testng.test groups="color, accessors"
+     */
+    public void checkAccessorsWithAlpha()
+    {
+        FSColor colour = new FSColor(-1, -1, -1, -1);
         
+        for (int i=0; i<alpha.length; i++) 
+        {
+            colour.setRed(alpha[i][0]);
+            colour.setGreen(alpha[i][1]);
+            colour.setBlue(alpha[i][2]);
+            colour.setAlpha(alpha[i][3]);
+            
+            checkColours(colour, alpha[i]);
+        }
+
         colour = new FSColor(-1, -1, -1, -1);
         
-        for (int i=0; i<values.length; i++) 
+        for (int i=0; i<alpha.length; i++) 
         {
-            colour.setChannels(values[i][0], values[i][1], values[i][2]);            
-            compareAttributes(colour, values[i], 3);
-        }       
+            colour.setChannels(alpha[i][0], alpha[i][1], alpha[i][2], alpha[i][3]);
+            
+            checkColours(colour, alpha[i]);
+        }
     }
     /**
-     * @testng.test groups="encode"
+     * @testng.test groups="color, utilities"
      */
-    public void checkEncode()
+    public void checkEquals()
     {
-        checkEncode(3); // opaque colours
-        checkEncode(4); // transparent colours
+       for (int i=0; i<opaque.length; i++)
+        {
+            int next = (i+1)%opaque.length;
+            
+            FSColor a = new FSColor(opaque[i][0], opaque[i][1], opaque[i][2]);
+            FSColor b = new FSColor(opaque[i][0], opaque[i][1], opaque[i][2]);
+            FSColor c = new FSColor(opaque[next][0], opaque[next][1], opaque[next][2]);
+            FSColor d = new FSColor(opaque[i][0], opaque[i][1], opaque[i][2], 255);
+            FSColor e = new FSColor(opaque[i][0], opaque[i][1], opaque[i][2], 128);
+            
+            checkEqual(a, b);
+            checkNotEqual(a, c);
+            checkEqual(a, d);
+            checkNotEqual(a, e);
+        }
     }
     /**
-     * @testng.test groups="decode"
+     * @testng.test groups="color, encode"
      */
-    public void checkDecode()
+    public void checkEncode()
     {
-        checkDecode(3); // opaque colours
-        checkDecode(4); // transparent colours
+        FSCoder coder = new FSCoder(FSCoder.LITTLE_ENDIAN, 0);
+             
+        for (int i=0; i<opaque.length; i++) 
+        {
+            FSColor colour = new FSColor(opaque[i][0], opaque[i][1], opaque[i][2]);
+            
+            checkEncode(coder, colour, opaque[i]);
+            checkColours(colour, opaque[i]);
+        }
     }
-    
-    private void encodeValues()
+    /**
+     * @testng.test groups="color, encode"
+     */
+    public void checkEncodeWithAlpha()
     {
-        encodedValues = new byte[values.length][];
-        
-        for (int i=0; i<values.length; i++)
+        FSCoder coder = new FSCoder(FSCoder.LITTLE_ENDIAN, 0);
+        coder.setContext(FSCoder.TransparentColors, 1);
+             
+        for (int i=0; i<alpha.length; i++) 
         {
-            encodedValues[i] = new byte[values[i].length];
+            FSColor colour = new FSColor(alpha[i][0], alpha[i][1], alpha[i][2], alpha[i][3]);
             
-            for (int j=0; j<values[i].length; j++)
-            {
-                encodedValues[i][j] = (byte)values[i][j];
-            }
+            checkEncode(coder, colour, alpha[i]);
+            checkColours(colour, alpha[i]);
         }
     }
-    
-    private void checkEncode(int count)
+    /**
+     * @testng.test groups="color, decode"
+     */
+    public void checkDecode()
     {
-        FSColor colour = null;
-        FSCoder coder = new FSCoder(FSCoder.LITTLE_ENDIAN, count);
-        
-        coder.setContext(FSCoder.TransparentColors, (count == 4) ? 1:0);
-        
-        for (int i=0; i<values.length; i++) 
+        for (int i=0; i<opaque.length; i++) 
         {
-            if (count == 3)
-                colour = new FSColor(values[i][0], values[i][1], values[i][2]);
-            else
-                colour = new FSColor(values[i][0], values[i][1], values[i][2], values[i][3]);
-                
-            coder.setPointer(0);
-            colour.encode(coder);
-            
-            assert ((colour.length(coder)) == count) : "Calculated length does not match expected.";
-            assert ((coder.getPointer() >>> 3) == count) : "Calculated length does not match encoded length.";
-            
-            compareData(coder.getData(), encodedValues[i], count);
+            FSCoder coder = new FSCoder(FSCoder.LITTLE_ENDIAN, compact(opaque[i]));            
+            checkColours(new FSColor(coder), opaque[i]);
+            checkDecode(coder, opaque[i].length);
         }
     }
-    private void checkDecode(int count)
+    /**
+     * @testng.test groups="color, decode"
+     */
+    public void checkDecodeWithAlpha()
     {
-        FSCoder coder = new FSCoder(FSCoder.LITTLE_ENDIAN, count);
-        
-        for (int i=0; i<values.length; i++) 
+        for (int i=0; i<opaque.length; i++) 
         {
-            coder.setData(FSCoder.LITTLE_ENDIAN, encodedValues[i]);
-            
-            compareAttributes(new FSColor(coder), values[i], count);
+            FSCoder coder = new FSCoder(FSCoder.LITTLE_ENDIAN, compact(alpha[i]));            
+            coder.setContext(FSCoder.TransparentColors, 1);
 
-            assert ((coder.getPointer() >>> 3) == count) : "";
+            checkColours(new FSColor(coder), alpha[i]);
+            checkDecode(coder, alpha[i].length);
         }
     }
-    private void compareAttributes(FSColor colour, int[] expected, int channelCount)
+    
+    private void checkColours(FSColor colour, int[] expected)
     {
         assert(colour.getRed() == expected[0]) : "Red channel does not match expected value";
         assert(colour.getGreen() == expected[1]) : "Green channel does not match expected value";
         assert(colour.getBlue() == expected[2]) : "Blue channel does not match expected value";
         
-        if (channelCount == 4)
+        if (expected.length == 4)
             assert(colour.getAlpha() == expected[3]) : "Alpha channel does not match expected value";
     }
-    private void compareData(byte[] values, byte[] expected, int count)
-    {
-        for (int i=0; i<count; i++) {
-            assert(values[i] == expected[i]) : "Encoded byte does not match expected value";
-        }
-    }
 }

Modified: trunk/src/com/flagstone/transform/test/FSSetBackgroundColorTest.java
===================================================================
--- trunk/src/com/flagstone/transform/test/FSSetBackgroundColorTest.java	2006-06-25 17:16:19 UTC (rev 171)
+++ trunk/src/com/flagstone/transform/test/FSSetBackgroundColorTest.java	2006-06-26 18:02:51 UTC (rev 172)
@@ -29,44 +29,129 @@
  */
 package com.flagstone.transform.test;
 
-public class FSSetBackgroundColorTest 
+import com.flagstone.transform.*;
+
+public class FSSetBackgroundColorTest extends FSClassTest
 {    
-    public FSSetBackgroundColorTest()
-    {        
+    private static FSColor[] colours = new FSColor[] {
+        new FSColor(  0,   0,   0),
+        new FSColor(255,   0,   0),
+        new FSColor(255, 255,   0),
+        new FSColor(  0, 255,   0),
+        new FSColor(  0, 255, 255),
+        new FSColor(  0,   0, 255),
+        new FSColor(255,   0, 255),
+        new FSColor(255, 255, 255),
+    };
+           
+    private static int[][] encodedObjects = new int[][] {
+        { 0x43, 0x02, 0x00, 0x00, 0x00 }, 
+        { 0x43, 0x02, 0xFF, 0x00, 0x00 }, 
+        { 0x43, 0x02, 0xFF, 0xFF, 0x00 }, 
+        { 0x43, 0x02, 0x00, 0xFF, 0x00 }, 
+        { 0x43, 0x02, 0x00, 0xFF, 0xFF }, 
+        { 0x43, 0x02, 0x00, 0x00, 0xFF }, 
+        { 0x43, 0x02, 0xFF, 0x00, 0xFF }, 
+        { 0x43, 0x02, 0xFF, 0xFF, 0xFF }, 
+    };
+    
+    /**
+     * @testng.test groups="setbackgroundcolor, constructors"
+     */
+    public void checkConstructors()
+    {
+        for (int i=0; i<colours.length; i++)
+        {
+            FSSetBackgroundColor background = new FSSetBackgroundColor(colours[i]);
+            
+            checkType(FSMovieObject.SetBackgroundColor, background.getType());
+            checkEqual(colours[i], background.getColor());
+        }
     }
     /**
-     * @testng.test groups="setbackgroundcolor"
-     *     dependsOnGroups="color"
+     * @testng.test groups="setbackgroundcolor, constructors"
      */
-    public void setBackgroundColor()
+    public void checkCopyConstructor()
     {
-        checkConstructors();
-        checkAccessors();
-        checkEncode();
-        checkDecode();
+        for (int i=0; i<colours.length; i++)
+        {
+            FSSetBackgroundColor original = new FSSetBackgroundColor(colours[i]);
+            FSSetBackgroundColor copy = new FSSetBackgroundColor(original);
+            
+            checkEqual(colours[i], copy.getColor());
+            checkNotIdentical(colours[i], copy.getColor());
+        }
     }
     /**
-     * @testng.test groups="constructors"
+     * @testng.test groups="setbackgroundcolor, constructors"
      */
-    public void checkConstructors()
+    public void checkContainsReference()
     {
+        FSColor colour = new FSColor(0, 0, 0);
+        FSSetBackgroundColor background = new FSSetBackgroundColor(colour);
+        
+        checkIdentical(colour, background.getColor());
     }
     /**
-     * @testng.test groups="accessors"
+     * @testng.test groups="setbackgroundcolor, constructors"
      */
+    public void checkClone()
+    {
+        FSColor colour = new FSColor(0, 0, 0);
+        FSSetBackgroundColor background = new FSSetBackgroundColor(colour);
+        FSSetBackgroundColor clone = (FSSetBackgroundColor)background.clone();
+        
+        checkEqual(background, clone);
+        checkNotIdentical(background, clone);
+    }
+    /**
+     * @testng.test groups="setbackgroundcolor, accessors"
+     */
     public void checkAccessors()
     {
+        FSSetBackgroundColor background = new FSSetBackgroundColor(new FSColor(-1, -1, -1));
+        
+        for (int i=0; i<colours.length; i++)
+        {
+            background.setColor(colours[i]);
+            checkEqual(colours[i], background.getColor());
+        }
     }
     /**
-     * @testng.test groups="encode"
+     * @testng.test groups="setbackgroundcolor, utilities"
      */
+    public void checkEquals()
+    {
+        FSSetBackgroundColor background = new FSSetBackgroundColor(new FSColor(-1, -1, -1));
+        
+        for (int i=0; i<colours.length; i++)
+        {
+            background.setColor(colours[i]);
+            checkEqual(colours[i], background.getColor());
+        }
+    }
+    /**
+     * @testng.test groups="setbackgroundcolor, encode"
+     */
     public void checkEncode()
     {
+        for (int i=0; i<encodedObjects.length; i++) {
+            checkEncode(new FSSetBackgroundColor(colours[i]), encodedObjects[i]);
+        }
     }
     /**
-     * @testng.test groups="decode"
+     * @testng.test groups="setbackgroundcolor, decode"
      */
     public void checkDecode()
-    {
+    {       
+        for (int i=0; i<encodedObjects.length; i++) 
+        {
+            FSCoder coder = new FSCoder(FSCoder.LITTLE_ENDIAN, compact(encodedObjects[i]));            
+            FSSetBackgroundColor background = new FSSetBackgroundColor(coder);
+
+            checkDecode(coder, encodedObjects[i].length);
+            checkType(FSMovieObject.SetBackgroundColor, background.getType());
+            checkEqual(colours[i], background.getColor());
+        }
     }
 }



From smackay at berlios.de  Mon Jun 26 20:12:02 2006
From: smackay at berlios.de (smackay at berlios.de)
Date: Mon, 26 Jun 2006 20:12:02 +0200
Subject: [Transform-svn] r173 - trunk/test/suites
Message-ID: <200606261812.k5QIC2b7032361@sheep.berlios.de>

Author: smackay
Date: 2006-06-26 20:11:57 +0200 (Mon, 26 Jun 2006)
New Revision: 173

Added:
   trunk/test/suites/FSColor.xml
Log:
Added test suite for FSColor

Added: trunk/test/suites/FSColor.xml
===================================================================
--- trunk/test/suites/FSColor.xml	2006-06-26 18:02:51 UTC (rev 172)
+++ trunk/test/suites/FSColor.xml	2006-06-26 18:11:57 UTC (rev 173)
@@ -0,0 +1,12 @@
+<!DOCTYPE suite SYSTEM "http://beust.com/testng/testng-1.0.dtd" >
+  
+<suite name="FSColor">
+
+	<test name="Unit Test">
+    	<classes>
+    		<class name="com.flagstone.transform.test.FSColorTest"/>
+    	</classes>
+  	</test>
+  	
+</suite>
+



From smackay at berlios.de  Mon Jun 26 20:12:34 2006
From: smackay at berlios.de (smackay at berlios.de)
Date: Mon, 26 Jun 2006 20:12:34 +0200
Subject: [Transform-svn] r174 - trunk/test/suites
Message-ID: <200606261812.k5QICY8W032642@sheep.berlios.de>

Author: smackay
Date: 2006-06-26 20:12:31 +0200 (Mon, 26 Jun 2006)
New Revision: 174

Modified:
   trunk/test/suites/FSSetBackgroundColor.xml
Log:
Simplified test suites specification to remove groups and simply 
run all the tests for a given class.

Modified: trunk/test/suites/FSSetBackgroundColor.xml
===================================================================
--- trunk/test/suites/FSSetBackgroundColor.xml	2006-06-26 18:11:57 UTC (rev 173)
+++ trunk/test/suites/FSSetBackgroundColor.xml	2006-06-26 18:12:31 UTC (rev 174)
@@ -3,15 +3,6 @@
 <suite name="FSSetBackgroundColor">
 
 	<test name="Unit Test">
-    	<groups>
-        	<define name="FSSetBackgroundColor">
-        		<include name="color"/>
-        		<include name="setbackgroundcolor"/>
-        	</define>
-    		<run>
-    			<include name="FSSetBackgroundColor"/>
-    		</run>
-    	</groups>
     	<classes>
     		<class name="com.flagstone.transform.test.FSColorTest"/>
     		<class name="com.flagstone.transform.test.FSSetBackgroundColorTest"/>



From smackay at berlios.de  Mon Jun 26 21:40:20 2006
From: smackay at berlios.de (smackay at berlios.de)
Date: Mon, 26 Jun 2006 21:40:20 +0200
Subject: [Transform-svn] r175 - trunk/src/com/flagstone/transform/test
Message-ID: <200606261940.k5QJeKpq009138@sheep.berlios.de>

Author: smackay
Date: 2006-06-26 21:40:14 +0200 (Mon, 26 Jun 2006)
New Revision: 175

Added:
   trunk/src/com/flagstone/transform/test/FSProtectTest.java
   trunk/src/com/flagstone/transform/test/FSShowFrameTest.java
Modified:
   trunk/src/com/flagstone/transform/test/FSClassTest.java
Log:
Added tests for FSShowFrame and FSProtect.

Modified: trunk/src/com/flagstone/transform/test/FSClassTest.java
===================================================================
--- trunk/src/com/flagstone/transform/test/FSClassTest.java	2006-06-26 18:12:31 UTC (rev 174)
+++ trunk/src/com/flagstone/transform/test/FSClassTest.java	2006-06-26 19:40:14 UTC (rev 175)
@@ -42,28 +42,30 @@
         assert expected == actual : "Types are not identical.";    
     }
 
-    protected void checkIdentical(FSTransformObject expected, FSTransformObject actual)
+    protected void checkIdentical(Object expected, Object actual)
     {
         assert expected == actual : "References are not to the same object.";    
     }
 
-    protected void checkNotIdentical(FSTransformObject expected, FSTransformObject actual)
+    protected void checkNotIdentical(Object expected, Object actual)
     {
-        assert expected != actual : "References are to the same object.";    
+        if (expected != null && actual != null)
+            assert expected != actual : "References are to the same object.";    
     }
 
-    protected void checkEqual(FSTransformObject expected, FSTransformObject actual)
+    protected void checkEqual(Object expected, Object actual)
     {
-        assert expected != null : "First object is null.";    
-        assert actual != null : "Second object is null.";    
-
-        assert actual.equals(expected) : "Objects do not match.";    
+        if (expected == null || actual == null)
+            assert actual == expected : "Objects do not match.";    
+        
+        if (expected != null && actual != null)
+            assert actual.equals(expected) : "Objects do not match.";    
     }
 
-    protected void checkNotEqual(FSTransformObject expected, FSTransformObject actual)
+    protected void checkNotEqual(Object expected, Object actual)
     {
-        assert expected != null : "First object is null.";    
-        assert actual != null : "Second object is null.";    
+        if (expected == null || actual == null)
+            assert actual != expected : "Objects should not match.";    
 
         assert actual.equals(expected) == false : "Objects should not match.";    
     }

Added: trunk/src/com/flagstone/transform/test/FSProtectTest.java
===================================================================
--- trunk/src/com/flagstone/transform/test/FSProtectTest.java	2006-06-26 18:12:31 UTC (rev 174)
+++ trunk/src/com/flagstone/transform/test/FSProtectTest.java	2006-06-26 19:40:14 UTC (rev 175)
@@ -0,0 +1,154 @@
+/*
+ * FSProtectTest.java
+ * Transform
+ * 
+ * Copyright (c) 2001-2006 Flagstone Software Ltd. All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without modification, 
+ * are permitted provided that the following conditions are met:
+ *
+ *  * Redistributions of source code must retain the above copyright notice, this
+ *    list of conditions and the following disclaimer.
+ *  * Redistributions in binary form must reproduce the above copyright notice, 
+ *    this list of conditions and the following disclaimer in the documentation 
+ *    and/or other materials provided with the distribution.
+ *  * Neither the name of Flagstone Software Ltd. nor the names of its contributors 
+ *    may be used to endorse or promote products derived from this software 
+ *    without specific prior written permission.
+ *
+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND 
+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED 
+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. 
+ * IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, 
+ * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, 
+ * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, 
+ * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
+ * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE 
+ * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED 
+ * OF THE POSSIBILITY OF SUCH DAMAGE.
+ */
+package com.flagstone.transform.test;
+
+import com.flagstone.transform.*;
+
+public class FSProtectTest extends FSClassTest
+{    
+    private static String[] passwords = new String[] {
+        null,
+        "",
+        "abcd",
+        "1234 5678",
+    };
+           
+    private static int[][] encodedObjects = new int[][] {
+        { 0x00, 0x06 }, 
+        { 0x00, 0x06 }, 
+        { 0x07, 0x06, 0x00, 0x00, 0x61, 0x62, 0x63, 0x64, 0x00 }, 
+        { 0x0B, 0x06, 0x00, 0x00, 0x31, 0x32, 0x33, 0x34, 0x20, 0x35, 0x36, 0x37, 0x38 }, 
+    };
+    
+    /**
+     * @testng.test groups="setbackgroundcolor, constructors"
+     */
+    public void checkConstructors()
+    {
+        for (int i=0; i<passwords.length; i++)
+        {
+            FSProtect background = new FSProtect(passwords[i]);
+            
+            checkType(FSMovieObject.Protect, background.getType());
+            checkEqual(passwords[i], background.getPassword());
+        }
+    }
+    /**
+     * @testng.test groups="setbackgroundcolor, constructors"
+     */
+    public void checkCopyConstructor()
+    {
+        for (int i=0; i<passwords.length; i++)
+        {
+            FSProtect original = new FSProtect(passwords[i]);
+            FSProtect copy = new FSProtect(original);
+            
+            checkEqual(passwords[i], copy.getPassword());
+            checkNotIdentical(passwords[i], copy.getPassword());
+        }
+    }
+    /**
+     * @testng.test groups="setbackgroundcolor, constructors"
+     */
+    public void checkClone()
+    {
+        FSProtect original = new FSProtect("1234");
+        FSProtect clone = (FSProtect)original.clone();
+        
+        checkEqual(original, clone);
+        checkNotIdentical(original, clone);
+    }
+    /**
+     * @testng.test groups="setbackgroundcolor, accessors"
+     */
+    public void checkAccessors()
+    {
+        FSProtect original = new FSProtect("1234");
+        
+        for (int i=0; i<passwords.length; i++)
+        {
+            original.setPassword(passwords[i]);
+            checkEqual(passwords[i], original.getPassword());
+        }
+    }
+    /**
+     * @testng.test groups="setbackgroundcolor, utilities"
+     */
+    public void checkEquals()
+    {
+        FSProtect obj = new FSProtect("1234");
+        
+        for (int i=0; i<passwords.length; i++)
+        {
+            obj.setPassword(passwords[i]);
+            checkEqual(passwords[i], obj.getPassword());
+        }
+    }
+    /**
+     * @testng.test groups="setbackgroundcolor, encode"
+     */
+    public void checkEncode()
+    {
+        FSCoder coder = new FSCoder(FSCoder.LITTLE_ENDIAN, 0);            
+        coder.setContext(FSCoder.Version, 5);
+
+        for (int i=0; i<encodedObjects.length; i++) {
+            checkEncode(coder, new FSProtect(passwords[i]), encodedObjects[i]);
+        }
+    }
+    /**
+     * @testng.test groups="setbackgroundcolor, decode"
+     */
+    public void checkDecode()
+    {       
+        for (int i=0; i<encodedObjects.length; i++) 
+        {
+            FSCoder coder = new FSCoder(FSCoder.LITTLE_ENDIAN, compact(encodedObjects[i]));            
+            coder.setContext(FSCoder.Version, 5);
+
+            /*
+             * If a password is an empty string then the object is encoded as
+             * if the password was null. Therefore if the expected value is an
+             * empty string then it must be replaced by null for the test to 
+             * pass.
+             */
+            String expectedValue = passwords[i];
+            
+            if (expectedValue != null && expectedValue.length() == 0)
+                expectedValue = null;
+
+            FSProtect obj = new FSProtect(coder);
+            
+            checkDecode(coder, encodedObjects[i].length);
+            checkType(FSMovieObject.Protect, obj.getType());
+            checkEqual(expectedValue, obj.getPassword());
+        }
+    }
+}

Added: trunk/src/com/flagstone/transform/test/FSShowFrameTest.java
===================================================================
--- trunk/src/com/flagstone/transform/test/FSShowFrameTest.java	2006-06-26 18:12:31 UTC (rev 174)
+++ trunk/src/com/flagstone/transform/test/FSShowFrameTest.java	2006-06-26 19:40:14 UTC (rev 175)
@@ -0,0 +1,104 @@
+/*
+ * FSSetBackgroundColorTest.java
+ * Transform
+ * 
+ * Copyright (c) 2001-2006 Flagstone Software Ltd. All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without modification, 
+ * are permitted provided that the following conditions are met:
+ *
+ *  * Redistributions of source code must retain the above copyright notice, this
+ *    list of conditions and the following disclaimer.
+ *  * Redistributions in binary form must reproduce the above copyright notice, 
+ *    this list of conditions and the following disclaimer in the documentation 
+ *    and/or other materials provided with the distribution.
+ *  * Neither the name of Flagstone Software Ltd. nor the names of its contributors 
+ *    may be used to endorse or promote products derived from this software 
+ *    without specific prior written permission.
+ *
+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND 
+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED 
+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. 
+ * IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, 
+ * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, 
+ * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, 
+ * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
+ * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE 
+ * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED 
+ * OF THE POSSIBILITY OF SUCH DAMAGE.
+ */
+package com.flagstone.transform.test;
+
+import com.flagstone.transform.*;
+
+public class FSShowFrameTest extends FSClassTest
+{    
+    private static int[][] encodedObjects = new int[][] {
+        { 0x40, 0x00 }, 
+    };
+    
+    /**
+     * @testng.test groups="showframe, constructors"
+     */
+    public void checkConstructors()
+    {
+        FSShowFrame obj = new FSShowFrame();
+        
+        checkType(FSMovieObject.ShowFrame, obj.getType());
+    }
+    /**
+     * @testng.test groups="showframe, constructors"
+     */
+    public void checkCopyConstructor()
+    {
+        FSShowFrame original = new FSShowFrame();
+        FSShowFrame copy = new FSShowFrame(original);
+        
+        checkEqual(original, copy);
+        checkNotIdentical(original, copy);
+    }
+    /**
+     * @testng.test groups="showframe, constructors"
+     */
+    public void checkClone()
+    {
+        FSShowFrame original = new FSShowFrame();
+        FSShowFrame clone = (FSShowFrame)original.clone();
+        
+        checkEqual(original, clone);
+        checkNotIdentical(original, clone);
+    }
+    /**
+     * @testng.test groups="showframe, utilities"
+     */
+    public void checkEquals()
+    {
+        FSShowFrame a = new FSShowFrame();
+        FSShowFrame b = new FSShowFrame();
+        
+        checkEqual(a, b);
+    }
+    /**
+     * @testng.test groups="showframe, encode"
+     */
+    public void checkEncode()
+    {
+        for (int i=0; i<encodedObjects.length; i++) {
+            checkEncode(new FSShowFrame(), encodedObjects[i]);
+        }
+    }
+    /**
+     * @testng.test groups="showframe, decode"
+     */
+    public void checkDecode()
+    {       
+        for (int i=0; i<encodedObjects.length; i++) 
+        {
+            FSCoder coder = new FSCoder(FSCoder.LITTLE_ENDIAN, compact(encodedObjects[i]));            
+            FSShowFrame obj = new FSShowFrame(coder);
+
+            checkDecode(coder, encodedObjects[i].length);
+            checkType(FSMovieObject.ShowFrame, obj.getType());
+        }
+    }
+}



From smackay at berlios.de  Mon Jun 26 21:40:40 2006
From: smackay at berlios.de (smackay at berlios.de)
Date: Mon, 26 Jun 2006 21:40:40 +0200
Subject: [Transform-svn] r176 - trunk/test/suites
Message-ID: <200606261940.k5QJeePY009571@sheep.berlios.de>

Author: smackay
Date: 2006-06-26 21:40:31 +0200 (Mon, 26 Jun 2006)
New Revision: 176

Added:
   trunk/test/suites/FSProtect.xml
   trunk/test/suites/FSShowFrame.xml
Log:
Added tests for FSShowFrame and FSProtect.

Added: trunk/test/suites/FSProtect.xml
===================================================================
--- trunk/test/suites/FSProtect.xml	2006-06-26 19:40:14 UTC (rev 175)
+++ trunk/test/suites/FSProtect.xml	2006-06-26 19:40:31 UTC (rev 176)
@@ -0,0 +1,12 @@
+<!DOCTYPE suite SYSTEM "http://beust.com/testng/testng-1.0.dtd" >
+  
+<suite name="FSShowFrame">
+
+	<test name="Unit Test">
+    	<classes>
+    		<class name="com.flagstone.transform.test.FSProtectTest"/>
+    	</classes>
+  	</test>
+  	
+</suite>
+

Added: trunk/test/suites/FSShowFrame.xml
===================================================================
--- trunk/test/suites/FSShowFrame.xml	2006-06-26 19:40:14 UTC (rev 175)
+++ trunk/test/suites/FSShowFrame.xml	2006-06-26 19:40:31 UTC (rev 176)
@@ -0,0 +1,12 @@
+<!DOCTYPE suite SYSTEM "http://beust.com/testng/testng-1.0.dtd" >
+  
+<suite name="FSShowFrame">
+
+	<test name="Unit Test">
+    	<classes>
+    		<class name="com.flagstone.transform.test.FSShowFrameTest"/>
+    	</classes>
+  	</test>
+  	
+</suite>
+



From smackay at berlios.de  Mon Jun 26 21:42:27 2006
From: smackay at berlios.de (smackay at berlios.de)
Date: Mon, 26 Jun 2006 21:42:27 +0200
Subject: [Transform-svn] r177 - trunk/src/com/flagstone/transform
Message-ID: <200606261942.k5QJgRU4012103@sheep.berlios.de>

Author: smackay
Date: 2006-06-26 21:42:24 +0200 (Mon, 26 Jun 2006)
New Revision: 177

Modified:
   trunk/src/com/flagstone/transform/FSCoder.java
Log:
Fixed a bug where the buffer was not resized correctly if an array of 
bytes was written that was larger than half the current buffer size.

Modified: trunk/src/com/flagstone/transform/FSCoder.java
===================================================================
--- trunk/src/com/flagstone/transform/FSCoder.java	2006-06-26 19:40:31 UTC (rev 176)
+++ trunk/src/com/flagstone/transform/FSCoder.java	2006-06-26 19:42:24 UTC (rev 177)
@@ -683,7 +683,7 @@
         int bytesWritten = 0;
         
         if (ptr+(bytes.length << 3) > end)
-            addCapacity(data.length/2);
+            addCapacity(data.length/2+bytes.length);
         
         if (bytes == null || bytes.length == 0)
             return bytesWritten;



From smackay at berlios.de  Tue Jun 27 12:32:08 2006
From: smackay at berlios.de (smackay at berlios.de)
Date: Tue, 27 Jun 2006 12:32:08 +0200
Subject: [Transform-svn] r178 - trunk/src/com/flagstone/transform/test
Message-ID: <200606271032.k5RAW8Yp012167@sheep.berlios.de>

Author: smackay
Date: 2006-06-27 12:32:03 +0200 (Tue, 27 Jun 2006)
New Revision: 178

Modified:
   trunk/src/com/flagstone/transform/test/FSClassTest.java
   trunk/src/com/flagstone/transform/test/FSProtectTest.java
   trunk/src/com/flagstone/transform/test/FSSetBackgroundColorTest.java
Log:
Updated methods to compare objects.

Modified: trunk/src/com/flagstone/transform/test/FSClassTest.java
===================================================================
--- trunk/src/com/flagstone/transform/test/FSClassTest.java	2006-06-26 19:42:24 UTC (rev 177)
+++ trunk/src/com/flagstone/transform/test/FSClassTest.java	2006-06-27 10:32:03 UTC (rev 178)
@@ -49,30 +49,30 @@
 
     protected void checkNotIdentical(Object expected, Object actual)
     {
-        if (expected != null && actual != null)
-            assert expected != actual : "References are to the same object.";    
+        assert expected != actual : "References are to the same object.";    
     }
 
     protected void checkEqual(Object expected, Object actual)
     {
-        if (expected == null || actual == null)
-            assert actual == expected : "Objects do not match.";    
-        
-        if (expected != null && actual != null)
+        if (expected == null && actual != null)
+            assert false : "Objects do not match.";    
+        else if (expected != null && actual == null)
+            assert false : "Objects do not match.";            
+        else if (expected != null && actual != null)
             assert actual.equals(expected) : "Objects do not match.";    
     }
 
     protected void checkNotEqual(Object expected, Object actual)
     {
-        if (expected == null || actual == null)
-            assert actual != expected : "Objects should not match.";    
-
-        assert actual.equals(expected) == false : "Objects should not match.";    
+        if (expected == null && actual == null)
+            assert false : "Objects should not match.";    
+        else if (expected != null && actual != null)
+            assert actual.equals(expected) == false : "Objects should not match.";    
     }
 
     protected void checkEncode(FSTransformObject obj, int[] bytes)
     {
-        FSCoder coder = new FSCoder(FSCoder.LITTLE_ENDIAN, 0);
+        FSCoder coder = new FSCoder(FSCoder.LITTLE_ENDIAN, bytes.length);
         
         checkEncode(coder, obj, bytes);
     }

Modified: trunk/src/com/flagstone/transform/test/FSProtectTest.java
===================================================================
--- trunk/src/com/flagstone/transform/test/FSProtectTest.java	2006-06-26 19:42:24 UTC (rev 177)
+++ trunk/src/com/flagstone/transform/test/FSProtectTest.java	2006-06-27 10:32:03 UTC (rev 178)
@@ -36,15 +36,17 @@
     private static String[] passwords = new String[] {
         null,
         "",
-        "abcd",
-        "1234 5678",
+        "5F4DCC3B5AA765D61D8327DEB882CF99", // "password"
     };
            
     private static int[][] encodedObjects = new int[][] {
-        { 0x00, 0x06 }, 
-        { 0x00, 0x06 }, 
-        { 0x07, 0x06, 0x00, 0x00, 0x61, 0x62, 0x63, 0x64, 0x00 }, 
-        { 0x0B, 0x06, 0x00, 0x00, 0x31, 0x32, 0x33, 0x34, 0x20, 0x35, 0x36, 0x37, 0x38 }, 
+        { 0x00, 0x06 },         
+        { 0x00, 0x06 },         
+        { 0x23, 0x06, 0x00, 0x00, 
+          0x35, 0x46, 0x34, 0x44, 0x43, 0x43, 0x33, 0x42, 
+          0x35, 0x41, 0x41, 0x37, 0x36, 0x35, 0x44, 0x36, 
+          0x31, 0x44, 0x38, 0x33, 0x32, 0x37, 0x44, 0x45, 
+          0x42, 0x38, 0x38, 0x32, 0x43, 0x46, 0x39, 0x39, 0x00}, 
     };
     
     /**
@@ -79,18 +81,21 @@
      */
     public void checkClone()
     {
-        FSProtect original = new FSProtect("1234");
-        FSProtect clone = (FSProtect)original.clone();
-        
-        checkEqual(original, clone);
-        checkNotIdentical(original, clone);
+        for (int i=0; i<passwords.length; i++)
+        {
+            FSProtect original = new FSProtect(passwords[i]);
+            FSProtect clone = (FSProtect)original.clone();
+            
+            checkEqual(original, clone);
+            checkNotIdentical(original, clone);
+        }
     }
     /**
      * @testng.test groups="setbackgroundcolor, accessors"
      */
     public void checkAccessors()
     {
-        FSProtect original = new FSProtect("1234");
+        FSProtect original = new FSProtect("");
         
         for (int i=0; i<passwords.length; i++)
         {
@@ -103,12 +108,12 @@
      */
     public void checkEquals()
     {
-        FSProtect obj = new FSProtect("1234");
-        
         for (int i=0; i<passwords.length; i++)
         {
-            obj.setPassword(passwords[i]);
-            checkEqual(passwords[i], obj.getPassword());
+            FSProtect a = new FSProtect(passwords[i]);
+            FSProtect b = new FSProtect(passwords[i]);
+            
+            checkEqual(a, b);
         }
     }
     /**

Modified: trunk/src/com/flagstone/transform/test/FSSetBackgroundColorTest.java
===================================================================
--- trunk/src/com/flagstone/transform/test/FSSetBackgroundColorTest.java	2006-06-26 19:42:24 UTC (rev 177)
+++ trunk/src/com/flagstone/transform/test/FSSetBackgroundColorTest.java	2006-06-27 10:32:03 UTC (rev 178)
@@ -122,12 +122,12 @@
      */
     public void checkEquals()
     {
-        FSSetBackgroundColor background = new FSSetBackgroundColor(new FSColor(-1, -1, -1));
-        
         for (int i=0; i<colours.length; i++)
         {
-            background.setColor(colours[i]);
-            checkEqual(colours[i], background.getColor());
+            FSSetBackgroundColor a = new FSSetBackgroundColor(colours[i]);
+            FSSetBackgroundColor b = new FSSetBackgroundColor(colours[i]);
+            
+            checkEqual(a, b);
         }
     }
     /**



From smackay at berlios.de  Tue Jun 27 12:32:49 2006
From: smackay at berlios.de (smackay at berlios.de)
Date: Tue, 27 Jun 2006 12:32:49 +0200
Subject: [Transform-svn] r179 - trunk/doc
Message-ID: <200606271032.k5RAWn7X012432@sheep.berlios.de>

Author: smackay
Date: 2006-06-27 12:32:36 +0200 (Tue, 27 Jun 2006)
New Revision: 179

Modified:
   trunk/doc/CHANGES.txt
Log:
Updated with latest changes.

Modified: trunk/doc/CHANGES.txt
===================================================================
--- trunk/doc/CHANGES.txt	2006-06-27 10:32:03 UTC (rev 178)
+++ trunk/doc/CHANGES.txt	2006-06-27 10:32:36 UTC (rev 179)
@@ -1,3 +1,18 @@
+2006-06-26 - smackay at flagstonesoftware.com
+
+    * Added class FSClassTest to test package for test shared between the 
+      different test classes.
+      
+    * Completed the test class FSSetBackgroundColorTest.
+    
+    * Added tests for FSColor, FSShowFrame and FSProtect.
+    
+    * Simplified test suites specification to remove groups and simply run 
+      all the tests for a given class.
+      
+    * Fixed a bug in FSCoder where the buffer was not resized correctly if 
+      an array of bytes larger than half the current buffer size was written.
+
 2006-06-25 - smackay at flagstonesoftware.com
 
     * Corrected bug in FSPlaceObject2.equals() that did include result from



From smackay at berlios.de  Tue Jun 27 12:34:04 2006
From: smackay at berlios.de (smackay at berlios.de)
Date: Tue, 27 Jun 2006 12:34:04 +0200
Subject: [Transform-svn] r180 - trunk/src/com/flagstone/transform
Message-ID: <200606271034.k5RAY4xO012728@sheep.berlios.de>

Author: smackay
Date: 2006-06-27 12:34:01 +0200 (Tue, 27 Jun 2006)
New Revision: 180

Modified:
   trunk/src/com/flagstone/transform/FSProtect.java
Log:
Fixed bug in copy constructor where passsword would be set to null.

Modified: trunk/src/com/flagstone/transform/FSProtect.java
===================================================================
--- trunk/src/com/flagstone/transform/FSProtect.java	2006-06-27 10:32:36 UTC (rev 179)
+++ trunk/src/com/flagstone/transform/FSProtect.java	2006-06-27 10:34:01 UTC (rev 180)
@@ -95,7 +95,11 @@
     public FSProtect(FSProtect obj)
     {
         super(obj);
-        password = new String(obj.password);
+        
+        if (obj.password != null)
+            password = new String(obj.password);
+        else
+            password = obj.password;
     }    
 
     /** Gets the MD5 encrypted password.



From smackay at berlios.de  Wed Jun 28 17:33:36 2006
From: smackay at berlios.de (smackay at berlios.de)
Date: Wed, 28 Jun 2006 17:33:36 +0200
Subject: [Transform-svn] r181 - trunk/src/com/flagstone/transform
Message-ID: <200606281533.k5SFXa3C024842@sheep.berlios.de>

Author: smackay
Date: 2006-06-28 17:33:24 +0200 (Wed, 28 Jun 2006)
New Revision: 181

Modified:
   trunk/src/com/flagstone/transform/FSButtonSound.java
Log:
Corrected a bug where the FSSound objects for the RollOver and 
RollOut button events were swapped.

Modified: trunk/src/com/flagstone/transform/FSButtonSound.java
===================================================================
--- trunk/src/com/flagstone/transform/FSButtonSound.java	2006-06-27 10:34:01 UTC (rev 180)
+++ trunk/src/com/flagstone/transform/FSButtonSound.java	2006-06-28 15:33:24 UTC (rev 181)
@@ -36,8 +36,8 @@
 <p>A sound is played for only a subset of the events that a button responds to:</p>
 
 <table>
+<tr><td>rollOut</td><td>The cursor exits the active area of the button.</td></tr> 
 <tr><td>rollOver</td><td>The cursor enters the active area of the button.</td></tr> 
-<tr><td>rollOut</td><td>The cursor exits the active area of the button.</td></tr> 
 <tr><td>press</td><td>The mouse button is clicked and the cursor is inside the active area of the button.</td></tr> 
 <tr><td>release</td><td>The mouse button is released while the cursor is inside the active area of the button.</td></tr>
 </table>
@@ -57,12 +57,12 @@
 </tr>
 
 <tr>
-<td><a name="FSButtonSound_2">sound[rollOver]</a></td>
+<td><a name="FSButtonSound_3">sound[rollOut]</a></td>
 <td>An FSSound object that describes how the sound will be played for a rollOver event.</td>
 </tr>
 
 <tr>
-<td><a name="FSButtonSound_3">sound[rollOut]</a></td>
+<td><a name="FSButtonSound_2">sound[rollOver]</a></td>
 <td>An FSSound object that describes how the sound will be played for a rollOver event.</td>
 </tr>
 
@@ -147,9 +147,9 @@
     {
         FSSound aSound = null;
         
-        if (eventCode == FSButtonEvent.RollOver)
+        if (eventCode == FSButtonEvent.RollOut)
             aSound = sound[0];
-        else if (eventCode == FSButtonEvent.RollOut)
+        else if (eventCode == FSButtonEvent.RollOver)
             aSound = sound[1];
         else if (eventCode == FSButtonEvent.Press)
             aSound = sound[2];
@@ -175,9 +175,9 @@
         */
     public void setSoundForEvent(int eventCode, FSSound aSound)
     {
-        if (eventCode == FSButtonEvent.RollOver)
+        if (eventCode == FSButtonEvent.RollOut)
             sound[0] = aSound;
-        else if (eventCode == FSButtonEvent.RollOut)
+        else if (eventCode == FSButtonEvent.RollOver)
             sound[1] = aSound;
         else if (eventCode == FSButtonEvent.Press)
             sound[2] = aSound;



From smackay at berlios.de  Thu Jun 29 09:46:58 2006
From: smackay at berlios.de (smackay at berlios.de)
Date: Thu, 29 Jun 2006 09:46:58 +0200
Subject: [Transform-svn] r182 - in trunk/doc: . web
Message-ID: <200606290746.k5T7kwVa019629@sheep.berlios.de>

Author: smackay
Date: 2006-06-29 09:46:48 +0200 (Thu, 29 Jun 2006)
New Revision: 182

Added:
   trunk/doc/web/
   trunk/doc/web/index.html
   trunk/doc/web/issues.html
   trunk/doc/web/roadmap.html
   trunk/doc/web/template.html
   trunk/doc/web/whatsnew.html
Log:
Added files from Flagstone web site project.

Added: trunk/doc/web/index.html
===================================================================
--- trunk/doc/web/index.html	2006-06-28 15:33:24 UTC (rev 181)
+++ trunk/doc/web/index.html	2006-06-29 07:46:48 UTC (rev 182)
@@ -0,0 +1,218 @@
+<html>
<head>
<meta http-equiv=content-type content="text/html;  charset=ISO-8859-1">
<title>Flagstone Software :: Transform SWF Overview</title>
<link rel="stylesheet" type="text/css" href="/flagstone.css">
<script language="JavaScript" src="/js/imageload.js"></script>
<script language="JavaScript" src="/js/imageswap.js"></script>
</head>

<body>
<script type='text/javascript'>function Go(){return}</script>
<script type="text/javascript" src="/js/menu_var.js"></script>
<script type="text/javascript" src="/js/menu_com.js"></script>
<noscript>Your browser does not support script</noscript>

<div class="page">

<div class="header">
<img src="/images/flagstone_header.gif" alt="Flagstone Software" width=760 height=77>
<table cellpadding="0" cellspacing="0" border="0" class="sitemenu">
<tr>
<td width=150 bgcolor="#9A1F31"><a href="/index.html" onmouseover="imageSwap('home', 'homeOn');" onmouseout="imageSwap('home', 'homeOff');"><img src="/images/home_off.gif" alt="[Home]" width=!
 77 height=29 border=0 name="home"></a></td>
<td width=29><img src="/images/diagonal_divider.gif" alt="" width=29 height=29></td>
<td bgcolor="#C43F52"><div id='MenuPos' style='position:left; width:440; height:27;'><img src='/images/spacer.gif' width='440' height='27'></div></td>
<td bgcolor="#C43F52"><img src='/images/spacer.gif' width='141' height='27'></td>
</tr>
</table>
</div>

<div class="content">
+
+<h1>Transform SWF</h1>
+
+<div class="sidenav">
+<img src="/images/javanet_button_90.gif"><br />
+<img src="/images/spacer" width="1" height="5"><br />
+<a href="http://developer.berlios.de" title="BerliOS Developer"><img src="http://developer.berlios.de/bslogo.php?group_id=5974" width="93px" height="24px" border="0" alt="BerliOS Developer Logo"></a><br />
+<img src="/images/spacer" width="1" height="5"><br />
+<a href="whatsnew.html">What's New</a><br />
+<a href="roadmap.html">Road Map</a><br />
+<a href="issues.html">Issues &amp; Bugs</a><br />
+<a href="/examples.html#transform">Example Code</a><br />
+</div>
+
+<P>The Transform SWF framework is a collection of classes for each of the tags 
+and data structures that make up the Flash (SWF) File Format Specification from 
+Macromedia. The classes provide a completely object-based API for parsing, 
+manipulating and generating Flash files. This allows Java based applications 
+to dynamically generate and update files that represent animations and documents 
+which can be easily distributed and displayed on any platform that supports a 
+graphical web browser.</P>
+
+<p>In addition to the classes supporting the core API several classes provide a 
+higher level interface to reduce the level of effort required to implement 
+applications. These simplify the integration of sound and images into Flash file 
+while text can be displayed using external font files allowing presentations to 
+be localized for any spoken language.</P>
+
+<h2>Features</h2>
+
+<ul>
+<li>Fully supports the latest version of Flash - MX 2004.</li>
+<li>Object-based API is easily expanded to support future Flash versions.</li>
+<li>Generate files for any version of Flash.</li>
+<li>Parse existing Flash files to deliver customised presentations.</li>
+<li>Generate images using JPEG, PNG and BMP files.</li>
+<li>Generate event and soundtracks from WAV and MP3 files.</li>
+<li>Display text from AWT, OpenType or TrueType font definitions.</li>
+<li>Comprehensive 2-D drawing API to create shapes from arbitrary complex paths.</li>
+<li>Java 2 Standard Edition code easily integrates with web application servers.</li> 
+<li>Frameworks are available with <strong>Open Source</strong> licensing.</li>
+</ul>
+
+<div class="underline"></div>
+
+<h2>Core API Examples</h2>
+
+<p>Flash files can be built from scratch by simply constructing instances 
+of objects that represent the respective Flash data structure and adding 
+them to an FSMovie object in the order they will be executed by the 
+Flash player.</p>
+
+<pre>
+	FSMovie movie = new FSMovie();
+	
+	movie.setFrameSize(new FSBounds(0, 0, 400, 400));
+	movie.setFrameRate(1.0);
+	
+	movie.add(new FSSetBackgroundColor(FSColor.lightblue()));
+	movie.add(new FSDefineShape(shapeId, ....));
+	movie.add(new FSPlaceObject2(shapeId, layer, x, y));
+	movie.add(new FSShowFrame());
+</pre>
+
+<p>Complex animations are created in exactly the same way: defining the objects
+to be displayed then adding, updating or removing them from the display list.</p>
+
+<p>The movie is then encoded to transform the objects into the binary 
+representation that will be decoded and executed by the Flash Player:</p>
+
+<pre>
+	try {
+	    movie.encodeToFile(filename);
+	}
+	catch (Exception e) {
+	    ... Process Exception ...
+	}
+</pre>
+
+<p>Transform SWF can also be used to parse existing Flash files and create 
+objects for each of the data structures decoded from the file.
+
+<pre>
+	try {
+	    FSMovie movie = new FSMovie(filename);
+	}
+	catch (Exception e) {
+	    ... Process Exception ...
+	}
+</pre>
+
+<p>The objects may be inspected and their attributes changed accordingly 
+allowing Flash files to be used as templates to deliver customised 
+presentations.</p>
+
+<p>More detailed <a href="/examples.html">examples</a> are available to get you 
+started with the Transform SWF framework and how to use the concepts supported 
+in Flash.</P>
+
+<h2>High Level Examples</h2>
+
+<p>The classes in the framework are designed to make it easy to load images, 
+ sounds and fonts stored in files and generate the objects required to 
+ display them in a movie.</p>
+
+<pre>
+    FSImageConstructor generator = new FSImageConstructor("image.png");
+    /*
+     * Generate the object containing the shape definition.
+     */  
+    FSDefineObject image = generator.defineImage(imageId);
+    /*
+     * All images are displayed as a bitmap fill inside a shape.
+     */
+    FSDefineShape3 shape = generator.defineEnclosingShape(shapeId, imageId, 
+        -xOrigin, -yOrigin, new FSSolidLine(borderWidth, borderColor));
+    /* 
+     * Add all the objects together to display the image.
+     */
+    movie.add(image);
+    movie.add(shape);
+    movie.add(new FSPlaceObject2(shapeId, layer, x, y));
+    movie.add(new FSShowFrame());
+</pre>
+
+<p>Sounds can be played in response to events, such as a button being clicked:</P>
+
+<pre>
+    FSSoundConstructor generator = new FSSoundConstructor("beep.wav");
+    /*
+     * Add the sound definition and start playing it immediately.
+     */
+    movie.add(generator.defineSound(soundId));
+    movie.add(new FSStartSound(new FSSound(soundId, FSSound.Start)));
+</pre>
+
+<P>The FSSoundConstructor class can also be used to stream sounds 
+allowing a sound track to be easily added to a movie:</P>
+
+<pre>
+    FSSoundConstructor generator = new FSSoundConstructor("soundtrack.mp3");
+    /* 
+     * Generate the header that describes the streaming sound.
+     */
+    movie.add(generator.streamHeader(samplesPerBlock));
+    /* 
+     * Play a block of sound for each frame shown.
+     */
+    for (int i=0; i&lt;numberOfBlocks; i++)
+    {
+        movie.add(generator.streamBlock(i, samplesPerBlock));
+        movie.add(new FSShowFrame());
+    }
+</pre>
+
+<p>Displaying text is greatly simplified using the FSTextConstructor.
+The class may be used to generate simple strings using TrueType, Flash
+or AWT font files. Support for blocks of text and also Unicode strings is included.</p>
+
+<pre>
+    FSTextConstructor generator = new FSTextConstructor(fontId, "Arial.ttf");
+    
+    String message = "Display this string.";
+    
+    FSDefineText2 text = generator.defineText(textId, message, size, color);    
+    FSDefineFont2 font = generator.defineFont();
+    
+    movie.add(font);
+    movie.add(text);
+    movie.add(new FSPlaceObject2(textId, layer, x , y));
+    movie.add(new FSShowFrame());
+</pre>
+
+<p>The FSShapeConstructor class adds a powerful tool for drawing 
+arbitrary paths and complex shapes. A full range of drawing commands
+is supported including quadratic and Bezier curves. The class also
+supports commands for drawing simple geometric shapes.</p>
+
+<pre>
+    FSShapeConstructor path = new FSShapeConstructor();
+    /* 
+     * The line and fill styles used to render the shapes should be 
+     * specified before drawing starts.
+     */
+    path.add(new FSSolidLine(borderWidth, borderColor));
+    path.add(new FSSolidFill(fillColor));
+    /* 
+     * Draw a rectangle with the origin at the centre of the shape.
+     */
+    newPath();
+    setStyle(0, 0);
+    move(xOrigin-width/2, yOrigin-height/2);
+    rline(width, 0);
+    rline(0, height);
+    rline(-width, 0);
+    rline(0, -height);
+    closePath();
+
+    movie.add(path.defineShape(identifier));
+</pre>
+
+<P>The simplified examples shown are to illustrate how each of the classes 
+in the framework are used. Detailed, working code is included 
+on the <a href="/examples.html">Examples</a> page.</p>
+
+<div class="underline"></div>
+
+<h2>Licensing</h2>
+
+<p>Transform SWF framework is covered by the 
+<a href="/licences/bsd.html">Berkeley Software Distribution (BSD)</a> 
+license. This allows you to release applications that use the framework 
+in source or binary form. The only restriction when developing Open 
+Source or commercial applications is that you acknowledge that Flagstone 
+Software Ltd. retains the copyright to the code.</p>
+</div>
+
<div class="footer">
Copyright 2001-2006, Flagstone Software. All rights reserved. 
Please read our <a href="/privacy.html">Privacy Policy</a> and 
<a href="/legal.html">Legal Notices</a>.
</div>
</div>

</body>
</html>
\ No newline at end of file

Added: trunk/doc/web/issues.html
===================================================================
--- trunk/doc/web/issues.html	2006-06-28 15:33:24 UTC (rev 181)
+++ trunk/doc/web/issues.html	2006-06-29 07:46:48 UTC (rev 182)
@@ -0,0 +1,411 @@
+<html>
+<head>
+<meta http-equiv=content-type content="text/html;  charset=ISO-8859-1">
+<title>Flagstone Software :: Issues &amp; Bugs in Transform SWF</title>
+<link rel="stylesheet" type="text/css" href="/flagstone.css">
+<script language="JavaScript" src="/js/imageload.js"></script>
+<script language="JavaScript" src="/js/imageswap.js"></script>
+</head>
+
+<body>
+<script type='text/javascript'>function Go(){return}</script>
+<script type="text/javascript" src="/js/menu_var.js"></script>
+<script type="text/javascript" src="/js/menu_com.js"></script>
+<noscript>Your browser does not support script</noscript>
+
+<div class="page">
+
+<div class="header">
+<img src="/images/flagstone_header.gif" alt="Flagstone Software" width=760 height=77>
+<table cellpadding="0" cellspacing="0" border="0" class="sitemenu">
+<tr>
+<td width=150 bgcolor="#9A1F31"><a href="/index.html" onmouseover="imageSwap('home', 'homeOn');" onmouseout="imageSwap('home', 'homeOff');"><img src="/images/home_off.gif" alt="[Home]" width=77 height=29 border=0 name="home"></a></td>
+<td width=29><img src="/images/diagonal_divider.gif" alt="" width=29 height=29></td>
+<td bgcolor="#C43F52"><div id='MenuPos' style='position:left; width:440; height:27;'><img src='/images/spacer.gif' width='440' height='27'></div></td>
+<td bgcolor="#C43F52"><img src='/images/spacer.gif' width='141' height='27'></td>
+</tr>
+</table>
+</div>
+
+<div class="content">
+
+<H1>Transform SWF: Known Issues &amp; Bugs</H1>
+<P>Version: 2.1.2<BR/>Updated: 28th June 2006</P>
+
+<TABLE width="100%">
+
+<THEAD>
+<TR>
+<TH>Current Issue</TH>
+<TH>Status</TH>
+<TH>Fix Due</TH>
+</TR>
+</THEAD>
+
+<TBODY>
+
+<TR>
+<TD>1. FSTextConstructor does not decode complex glyphs from OpenType fonts.</TD>
+<TD>Open</TD>
+<TD>Open</TD>
+</TR>
+
+<TR>
+<TD>2. TextDump Tool does not decode NewFunction and NewFunction2 actions correctly.</TD>
+<TD>Open</TD>
+<TD>2.1.3</TD>
+</TR>
+
+<TR>
+<TD>3. FSDefineJPEG2 and FSDefineJPEG3 do not allow null encoding tables.</TD>
+<TD>Open</TD>
+<TD>2.1.3</TD>
+</TR>
+
+<TR>
+<TD>4. FSCoder throws exception when adding bytes longer than the current buffer size.</TD>
+<TD>Open</TD>
+<TD>2.1.3</TD>
+</TR>
+
+<TR>
+<TD>5. FSButtonSound RollOver and RollOut sounds are swapped.</TD>
+<TD>Open</TD>
+<TD>2.1.3</TD>
+</TR>
+
+<TR>
+<TD>6. The equals() method on FSPlaceObject2 objects with encoded clip event is not accurate.</TD>
+<TD>Open</TD>
+<TD>2.1.3</TD>
+</TR>
+
+<TR>
+<TD>7. The copy constructor on FSProtect can cause a NullPointerException.</TD>
+<TD>Open</TD>
+<TD>2.1.3</TD>
+</TR>
+
+</TBODY>
+</TABLE>
+
+<TABLE width="100%">
+
+<THEAD>
+<TR>
+<TH>Recently Fixed</TH>
+<TH>Status</TH>
+<TH>Release</TH>
+</TR>
+</THEAD>
+
+<TBODY>
+
+<TR>
+<TD>1. FSTextConstructor does not sort font codes.</TD>
+<TD>Fixed</TD>
+<TD>2.1</TD>
+</TR>
+
+<TR>
+<TD>2. FSSoundConstructor goes into infinite loop when decoding MP3 files.</TD>
+<TD>Fixed</TD>
+<TD>2.1.1</TD>
+</TR>
+
+</TBODY>
+</TABLE>
+
+<br/>
+
+<h2>Current Issues</h2>
+
+<H3>1. FSTextConstructor does not decode complex glyphs from OpenType fonts.</H3>
+
+<P>The OpenType format for defining fonts allows new glyphs to be defined by 
+combining existing glyphs to form complex shapes. The FSTextConstructor class 
+in the current release of Transform Utilities does not currently decode complex 
+glyphs. Instead the missing character is substituted which will display a space 
+or empty box. This is currently only a major problem for eastern languages. 
+Western character sets will be displayed correctly - only rarely used symbols 
+will most likely be affected.</P>
+
+<H4>Root Cause</H4>
+
+<P>The FSTextConstructor code is not implemented to handle complex glyphs.</P>
+
+<H4>Workaround?</H4>
+
+<P>For standard ASCII characters the glyphs are displayed correctly. However for 
+characters with accents are not displayed correctly. The solution is to use 
+generate fonts using Java's AWT font objects &ndash; though decoding these fonts 
+takes significantly more time.</P>
+
+<H4>When will it be fixed?</H4>
+
+<P>Although Java AWT fonts are also based on font definitions from OpenType 
+files the advantages of being able to decode the font directly from the OpenType 
+file is one of performance. The OpenType font definition is complex and if the
+specification can be deciphered then support for complete glyphs will be added 
+to the current code base. No date for implementation is available at the moment.
+</P>
+
+<P>In the long term creating a font library using Flash files is the preferred 
+solution. &ldquo;Compiling&rdquo; font definitions into a library of Flash files 
+provides the fastest possible option for creating font objects since there is no
+conversion between the way the font is encoded. This option is planned for 
+release in the next version of Transform Utilities.</P>
+
+<div class="hr"><hr/></div>
+
+<H3>2. TextDump Tool does not decode NewFunction and NewFunction2 actions correctly.</H3>
+
+<P>In Transform the actions NewFunction and NewFunction2 contain arrays of the 
+actions that make up the function definition. This is different from the 
+official definition from Macromedia where instead the NewFunction and 
+NewFunction2 actions contain a field giving the number of bytes following that 
+make up the function definition.</P>
+
+<P>The bug in TextDump decodes the actions as if they were part of the 
+NewFunction[2] action but then jumps to the instruction immediately after and 
+decodes the function body actions all over again. The result is that the 
+function actions appear twice once as part of the NewFunction[2] action then 
+again as a set of actions immediately following on from the NewFunction[2] 
+action.</P>
+
+<H4>Root Cause</H4>
+
+<P>The root cause is a logic error in the code. The offset to the actions 
+following the body of the function is not calculated correctly.</P>
+
+<H4>Workaround?</H4>
+
+<P>There is no current workaround.</P>
+
+<H4>When will it be fixed?</H4>
+
+<P>The fix is already in the repository. It will be formally fixed when version 
+2.1.3 is released at the end of June.</P>
+
+<div class="hr"><hr/></div>
+
+<H3>3. FSDefineJPEG2 and FSDefineJPEG3 do not allow null encoding tables.</H3>
+
+<P>The documentation for the FSDefineJPEG2 and FSDefineJPEG3 classes state that 
+the encoding table may be set to null and the image will be displayed correctly. 
+However any object with a null encoding table will throw a NullPointerException 
+when it is encoded.</P>
+
+<H4>Root Cause</H4>
+
+<P>The root cause is that null passed to the setEncodingTable(byte[]) method is 
+not checked for null arguments &ndash; the null should be replaced with an empty
+encoding table: a 4 byte sequence containing a StartOfImage (SOI) and EndOfImage
+(EOI) marker, FF, D8, FF, D9.</P>
+
+<H4>Workaround?</H4>
+
+<P>The workaround is to pass the empty table to the constructor or 
+setEncodingTable() method:</P>
+
+<PRE>
+    movie.add(new FSDefineJPEGImage3(movie.newIdentifier(), bytes, 
+        new byte[]{(byte)0xFF,(byte)0xD8,(byte)0xFF,(byte)0xD9}, 
+        compressedAlpha));
+</PRE>
+        
+<H4>When will it be fixed?</H4>
+
+<P>The fix is already in the repository. It will be formally fixed when version 
+2.1.3 is released at the end of June.</P>
+
+<div class="hr"><hr/></div>
+
+<H3>4. FSCoder throws exception when adding bytes longer than the current buffer size.</H3>
+
+<P>When writing a string or binary data that is longer than half the current 
+size of the internal buffer in the FSCoder object then an 
+ArrayIndexOutOfBoundsException will be thrown.</P>
+
+<H4>Root Cause</H4>
+
+<P>When writing data to the internal buffer if the data would overflow then the 
+buffer is resized. The size of the increase is half the current buffer size. 
+This is incorrect the amount of capacity to add should actually be half the 
+current buffer size + the size of the data being currently written. If the data
+being written is greater than half the current buffer size the new buffer size 
+is still not large enough to write all of the data and hence the exception is 
+thrown.</P>
+
+<H4>Workaround?</H4>
+
+<P>The workaround is to calculate in advance the correct size of the buffer so 
+it does not need to be resized. Alternatively a call to the method addCapacity()
+to increase the buffer by the required capacity before writing large mounts of 
+data.</P>
+
+<PRE>
+    coder.addCapacity(data.length);
+    coder.writeBytes(data);
+</PRE>
+
+<H4>When will it be fixed?</H4>
+
+<P>The fix is already in the repository. It will be formally fixed when version 
+2.1.3 is released at the end of June.</P>
+
+<div class="hr"><hr/></div>
+
+<H3>5. FSButtonSound RollOver and RollOut sounds are swapped.</H3>
+
+<P>The FSButtonSound class takes 4 FSSound objects which define the sounds
+that will be played when the mouse movie a) Out of the button's active area,
+b) into the button's active area, c) when the button is clicked and d) when the
+button is released. The documentation for the class and the code are incorrect.
+The order of the mouse moving out and over are reversed so if a button is 
+created and a sound defined when the mouse moves over the button the sound is 
+actually played when the mouse moves out of the button's active area.</P>
+
+<H4>Root Cause</H4>
+
+<P>Incompetence ;).</P>
+
+<H4>Workaround?</H4>
+
+<P>The workaround is to swap the events passed to the methods:</P>
+<pre>
+    public FSSound getSoundForEvent(int eventCode)
+    public FSSound setSoundForEvent(int eventCode, FSSound aSound)
+</pre>
+
+<p>Swap the event codes when assigning a sound for a particular button event. 
+For example:</p>
+
+<PRE>
+    FSButtonSound buttonSound = new FSButtonSound(secondButton.getIdentifier(), 
+            FSButtonEvent.RollOut, new FSSound(sound.getIdentifier(), 0));    
+</PRE>
+
+<p>when setting the sound that will be played when the mouse moves over the 
+button. And:</p>
+
+<pre>
+    FSButtonSound buttonSound1 = new FSButtonSound(firstButton.getIdentifier(), 
+            FSButtonEvent.RollOver, new FSSound(sound.getIdentifier(), 0));    
+</PRE>
+
+<p>when setting the sound that will be played when the mouse moves out of the 
+active area of the button.</p>
+
+<H4>When will it be fixed?</H4>
+
+<P>The fix is already in the repository. It will be formally fixed when version 
+2.1.3 is released at the end of June.</P>
+
+<div class="hr"><hr/></div>
+
+<H3>6. The equals method on FSPlaceObject2 objects with encoded clip event is not accurate.</H3>
+
+<P>When a comparison is performed on two FSPlaceObject2 objects with encoded 
+clip events using the equals() method the result is only based on the 
+comparison of the encoded clip event objects.</P>
+
+<H4>Root Cause</H4>
+
+<P>The comparison of the encoded clip events is performed last and the result 
+from comparing the other attributes is not taken into account.</P>
+
+<H4>Workaround?</H4>
+
+<P>There is no workaround.</P>
+
+<H4>When will it be fixed?</H4>
+
+<P>The fix is already in the repository. It will be formally fixed when version 
+2.1.3 is released at the end of June.</P>
+
+<div class="hr"><hr/></div>
+
+<H3>7. The copy constructor on FSProtect can cause a NullPointerException.</H3>
+
+<P>When the copy constructor, FSProtect(FSProtect obj) is used and the object 
+being copied contains a null password (used for Flash 4 files) then a 
+NullPointerException will be thrown.</P>
+
+<H4>Root Cause</H4>
+
+<P>The cause is a failure in the method to test the password attribute for null.
+The code assumes the object contains a valid String.</P>
+
+<p>Use of the FSProtect class is not recommended as it is trivial to remove from
+a file and so offers no protection. As a result this bug should never be 
+encounted.</p>
+
+<H4>Workaround?</H4>
+
+<P>The workaround is to test the password string on the object to be copied and
+if null set it to the empty string. The object can safely be copied. The string
+will not be included when the object is encoded.</P>
+
+<pre>
+	if (obj.getPassword() == null)
+	   obj.setPassword("");
+	   
+	FSProtect copy = new FSProtect(obj);
+</pre>
+
+<H4>When will it be fixed?</H4>
+
+<P>The fix is already in the repository. It will be formally fixed when version 
+2.1.3 is released at the end of June.</P>
+
+<br/>
+
+<H2>Recently Fixed</H2>
+
+<H3>1. TextConstructor now sorts font codes.</H3>
+
+<P>With the release of Transform SWF 2.1 the FSTextConstructor class now 
+generated characters codes sorted correctly in ascending order.</P>
+
+<P>The willDisplay(char[]) method was added to FSTextConstructor to allow the 
+characters that will be used to be declared before any text or font objects are 
+generated. The new FSCharacterTable provides predefined character sets to make 
+it easy to use the new method:</P>
+
+<PRE>
+    FSTextConstructor generator = new FSTextConstructor(...);
+    
+    char[] chars = FSCharacterTable.characterSet(FSCharacterTable.iso_8859_1);
+
+    generator.willDisplay(chars);
+    font.defineText(string, fontSize, fontColor);
+</PRE>
+
+<div class="hr"><hr/></div>
+
+<H3>2. FSSoundConstructor goes into infinite loop when decoding MP3 files.</H3>
+
+<P>With the release of Transform 2.1.1 the infinite loop problem caused by meta 
+data at the end of an MP3 being incorrectly interpreted is now fixed.</P>
+
+<H4>Root Cause</H4>
+
+<P>MP3 files with ID3 version 1 meta data was defeating the findBits method 
+which was searching for the start of frame marker (0x7FF). In combination with 
+a bug in FSCoder which prevent buffer overflows when reading the data, the 
+search would get stuck at the end of the buffer with no way of terminating.</P>
+
+<P>The FSSoundConstructor is now able to deal with the different ID3 versions.</P>
+
+</div>
+<div class="footer">
+Copyright 2001-2006, Flagstone Software. All rights reserved. 
+Please read our <a href="/privacy.html">Privacy Policy</a> and 
+<a href="/legal.html">Legal Notices</a>.
+</div>
+</div>
+
+</body>
+</html>
+

Added: trunk/doc/web/roadmap.html
===================================================================
--- trunk/doc/web/roadmap.html	2006-06-28 15:33:24 UTC (rev 181)
+++ trunk/doc/web/roadmap.html	2006-06-29 07:46:48 UTC (rev 182)
@@ -0,0 +1,289 @@
+<html>
<head>
<meta http-equiv=content-type content="text/html;  charset=ISO-8859-1">
<title>Flagstone Software :: Road Map for Transform SWF</title>
<link rel="stylesheet" type="text/css" href="/flagstone.css">
<script language="JavaScript" src="/js/imageload.js"></script>
<script language="JavaScript" src="/js/imageswap.js"></script>
</head>

<body>
<script type='text/javascript'>function Go(){return}</script>
<script type="text/javascript" src="/js/menu_var.js"></script>
<script type="text/javascript" src="/js/menu_com.js"></script>
<noscript>Your browser does not support script</noscript>

<div class="page">

<div class="header">
<img src="/images/flagstone_header.gif" alt="Flagstone Software" width=760 height=77>
<table cellpadding="0" cellspacing="0" border="0" class="sitemenu">
<tr>
<td width=150 bgcolor="#9A1F31"><a href="/index.html" onmouseover="imageSwap('home', 'homeOn');" onmouseout="imageSwap('home', 'homeOff');"><img src="/images/home_off.gif" alt="[Home]" wi!
 dth=77 height=29 border=0 name="home"></a></td>
<td width=29><img src="/images/diagonal_divider.gif" alt="" width=29 height=29></td>
<td bgcolor="#C43F52"><div id='MenuPos' style='position:left; width:440; height:27;'><img src='/images/spacer.gif' width='440' height='27'></div></td>
<td bgcolor="#C43F52"><img src='/images/spacer.gif' width='141' height='27'></td>
</tr>
</table>
</div>

<div class="content">
+
+<h1>Road Map for Transform SWF</h1>
+
+<p><b>Last Updated: </b>4th March 2006</p>
+
+<p> Here is the proposed sets of changes to the existing release and plans for 
+features that will be included in the next major release of Transform. As always, 
+plans are subject to change. Any suggestions, good ideas or complaints are 
+welcome.</p>
+
+<h2>Planned Changes for Transform 2.1 (Released 7th March 2006)</h2>
+
+<ol>
+<li>Deprecate the MovieListener interface and classes.</li>
+<li>Integrate Transform Utilties classes to create a unified release.</li>
+<li>A new class, FSCoderException will report errors when encoding and decoding files.</li>
+<li>Lazy decoding of arrays.</li>
+<li>Create canonical versions of simple objects.</li>
+</ol>
+   
+<h3>Deprecate the Movie Listener interface and classes.</h3>
+<p>The FSMovieListener interface was originally used to support Describe. When a 
+movie was parsed the values decoded were reported to a FSMovieListener. This 
+allowed Describe to build a tree of objects so the contents of a Flash file 
+could be browsed.</p>
+
+<p>The interface also allowed errors to be reported so a file could be decoded 
+even if part of it was corrupted - some third-party tools are known to contain 
+bugs that generate errors. The Flash Player is robust when encountering this 
+type of error so the Movie Listener interface was an attempt to introduce 
+robustness into Transform.</p>
+
+<p>In practice the value of the interface was limited. Files containing errors 
+which would cause errors were relatively unusual and when an error was detected 
+it was not obvious that recovering form the error was useful.</p>
+
+<p>The Movie Listener interface will be deprecated for version 2.1 then removed 
+in version 2.2. The classes affected are FSCoder, FSMovie, FSMovieListener and 
+FSMovieEvent.</p>
+
+<h3>Integrate Transform Utilities classes to create a unified release.</h3>
+
+<p>For Transform 2.1 the Transform Utilities classes will be included into 
+releases of the Transform framework. Previous editions of the roadmap proposed
+merging the packages together however the benefits do not justify the changes
+to existing code - though only import statements would be affected.</p>
+
+<h3>A new class, FSCoderException will report errors when encoding and decoding files.</h3>
+
+<p>If an error occurs when encoding or decoding a movie then an IOException is 
+reported (in methods where MovieListener is not used). A new exception class 
+FSCoderException will be used to report the object and location in the file 
+that causes the error. This will give the benefits that the MovieListener
+interface provided by accurately reporting the location in a file so that the 
+error can be debugged. The exception will be a subclass of IOException so no API
+changes are required.</P>
+
+<h3>Lazy decoding of arrays.</h3>
+
+<p>When using a Flash file as a template the changes are at a high level, for 
+example replacing images, sounds, shapes and text. As a result decoding the 
+small-grain objects in a file is a waste of resources. Examples of small grain 
+objects are:
+
+<ul>
+<li>Actions</li>
+<li>Line and fill styles</li>
+<li>Shape elements: FSLine, FSCurve and FSShapeStyle</li>
+<li>Sound envelopes</li>
+<li>Gradient Fills</li>
+<li>Text Characters</li>
+</ul>
+</p>
+
+<p>Arrays containing small-grained objects will be lazily decoded when an 
+accessor method is used for the first time to access the array. The decoding 
+process will be completely hidden and the use of some of the new collection 
+classes, see below should simplify the process.</p>
+
+<p>Originally this idea was planned for Transform 3.0 however in a quiet moment
+I tried it for actions and shapes (in shape definitions and fonts). The 
+performance gains are enormous. Benchmarked on a suite of nearly 400 "real-world"
+Flash files the speed of decoding a file was between 0 and 420 times faster!!! 
+The larger the file the more impressive the figure. The average improvement was 
+still 15 times.</p>
+
+<P>So lazy decoding of actions and shapes are in for release 2.1. Lazy decoding
+of line and fill styles, gradients and text are probably not worth it given 
+that the number of objects involved is small - it might not be worthwhile even
+for version 3.0.</p>
+
+<h3>Create canonical versions of simple objects.</h3>
+
+<p>Another optimisation that should speed up the process of decoding Flash files 
+is to replace constant objects with canonical versions. Byte-code actions, 
+created using the FSAction class are the obvious example. Rather than creating 
+repeated copies of objects representing simple operations such as additions, 
+class methods such as FSAction.Add() will return a reference to a constant 
+singleton.</p>
+
+<p>This update is trivial in comparison to lazy decoding of actions but it 
+should make a difference if only in Translate which deals with nothing but
+actions, particularly if the compiler is being used on a server to compile 
+large numbers of scripts.</p>
+
+<h2>Proposed Changes for Transform 3.0</h2>
+<p>Over the past year I have been involved in projects that used existing Flash 
+files as a template. Transform was used to decode the file then update or 
+replace objects to create a customised version.</p>
+
+<p>The changes proposed for Transform 3.0 will update the code to include all 
+the lessons learned from this work and also generally clean up the code base - 
+fixing mistakes, dumb decisions and generally making the framework easier to 
+use.</p>
+
+<p>Architecturally the changes should be minor - the same philosophy of 
+providing a low-level API which exposes all the data structures in a Flash file 
+as objects will be maintained. Files will still be generated and parsed in the 
+same way. Most of the changes will essentially be cosmetic - fixing code that 
+simply bad or poorly implemented. As a result migrating code from Transform 2 
+to Transform 3 should be very simple and extensive rewrites will not be 
+necessary.</p>
+
+<p>The current list of changes are:
+
+<ul>
+<li>Flatten class hierarchy and use interfaces to identify object types.</li>
+<li>Enforce encapsulation and add support for references.</li>
+<li>Simplify constructors and add factory methods.</li>
+<li>More use of Java 'native' classes.</li>
+<li>Changes to existing classes.
+<ul>
+<li>Rename FSGradient to FSGradientColor.</li>
+<li>Rename FSEnvelope to FSSoundLevel.</li>
+<li>Rename FSShapeStyle to FSStyle.</li>
+<li>Rename FSUnknownObject to FSBinaryObject.</li>
+</ul>
+</li>
+<li>New Classes
+<ul>
+<li>FSFrame - similar to the Frame class on the Useful Code page.</li>
+<li>FSLayer - a collection class for Frames.</li>
+<li>FSScript - a wrapper for encoded actions generated by Translate.</li>
+<li>FSEnvelope - a collection class for FSSoundLevels.</li>
+<li>FSGradient - a collection class for FSGradientColors.</li>
+<li>FSGlyph - a collection class for font information.</li>
+</ul>
+</li>
+</ul>
+      
+<h3>Flatten class hierarchy and use interfaces to identify object types.</h3>
+
+<p>In short the current class hierarchy: FSTransformObject -> FSMovieObject -> 
+FSDefineObject adds very little to the project. Code reuse is minimal and the 
+overhead slows down the encoding and decoding of files.</p>
+
+<p>To fix this the hierarchy will be flattened to a single level. For code that 
+need to identify where an object was a definition or a display list command Java 
+interfaces will be used to effectively create types of object. For example 
+rather than inheriting from FSTransformObject objects will implement the 
+FSTransformable interface which defines where an object knows how to encode and 
+decode itself from binary data.</p>
+
+<p>Examples of the interfaces that will be defined include:
+
+<pre>
+public interface Transformable
+{
+    public int decode(FSCoder coder);
+    public void precode(FSCoder coder);
+    public int encode(FSCoder coder);
+}
+
+public interface MovieObject
+{
+    public int getType();
+    public boolean isDefinition();
+    public boolean isShape();
+    public boolean isImage();
+    public boolean isSound();
+    public boolean isFont();
+    public boolean isText();
+}
+public interface DefinitionObject
+{
+    public int getIdentifier();
+    public void setIdentifier(int identifier);
+}
+</pre>
+</P>
+
+<p>The methods, of course, is all subject to change should a better idea come 
+to light.</p>
+
+<h3>Enforce encapsulation and add support for references.</h3>
+
+<p>Flash files are simply large data structures. An object in Transform is 
+simply a data structure that knows how to encode and decode itself. As a result 
+a deliberate decision was taken to break encapsulation and support accessor 
+methods that simply used references rather than copies. This avoided the 
+overhead of creating trees of objects whenever the objects in a Flash file were 
+traversed. Enforcing encapsulation would have required creating several trees 
+of objects as the graph was traversed to change for example a small-grained 
+object such as a shape's colour.</p>
+
+<p>The move to use lazily decoded arrays potentially requires encapsulation to 
+be enforced since it would make it explicitly clear when an array of objects 
+was modified and required encoding when a files was saved.</p>
+
+<p>For the 3.0 release the default policy will most likely be that normal 
+get/set accessor methods create copies of objects. Methods will be added to 
+return references so that excessive copying when traversing the object tree is 
+avoided.</p>
+
+<h3>Simplify constructors and add factory methods.</h3>
+
+<p>Constructors for simple objects such as shape definitions and some display 
+list commands are easy to use. However for multipurpose objects which have 
+optional attributes including constructors for every option is tedious and 
+confusing, FSPlaceObject2 is the obvious culprit.</p>
+
+<p>For Transform 3.0 it is proposed to include a fixed, basic set of 
+constructors then add factory methods to generate objects with specific set of 
+attributes. The current basic set of constructors includes:</p>
+
+<pre>
+   FSObject()                 /* create with default values */
+   FSObject(values...)        /* create with a specific set of values */
+   FSObject(FSCoder coder)    /* initialise from binary encoded data */
+   FSObject(FSObject object)  /* copy constructor */
+</pre>
+
+<p>The copy constructor will be used to replace the clone() method, largely for 
+aesthetic reasons.</p>
+
+<h3>More use of Java 'native' classes.</h3>
+
+<p>The FSMovie class is the obvious example of how classes in Transform fail to 
+make use of Java classes. Rather than using File objects the names of Flash 
+files are presented using Strings - which are used internally to create File 
+objects. This situation arose as I wanted to keep the API for the Java and C++ 
+versions as close as possible to minimise the effort of maintaining the code - 
+a poor decision. So Transform 3.0 will make better use of Java objects to provide 
+a more 'natural' API.</p>
+
+<h3>Changes to existing classes.</h3>
+
+<p>With a new version comes a chance to clean up and ugliness. The following 
+classes will be renamed to make their role clearer and hopefully more intuitive:</p>
+
+<ul>
+<li>Rename FSGradient to FSGradientColor to support the new FSGradient collection class for FSGradientColours - specifying how the colour of a shape changes across the Gradient Square.</li>
+<li>Rename FSEnvelope to FSSoundLevel to support the new FSEnvelope collection class for a FSSoundLevels which describes the waveform applied to a sound.</li>
+<li>Rename FSShapeStyle to FSStyle - easier to type.</li>
+<li>Rename FSUnknownObject to FSBinaryObject - binary objects can be used explicitly by Transform Utilities classes to generate encoded version of objects.</li>
+</ul>
+ 
+<h3>New Classes</h3>
+
+<p>The new classes that will be added in Transform 3.0 are designed to support 
+lazy decoding of arrays of small-grained objects.  FSScript, FSEnvelope, 
+FSGradient are  simple collection classes.</p>
+
+<p>FSGlyph is more complicated as it will support all the information that 
+describes a font glyph: shape, advance, character code and bounding box. This 
+will simply the use of the FSTextConstructor class in Tranform Utilities and 
+handling of the FSDefineFont2 class in Transform.</p>
+
+<p>The two most interesting new classes are FSFrame and FSLayer. FSFrame is an 
+upgraded version of the Frame class currently available on the Useful Code page. 
+Adding a frame number attribute increases the potential uses of Transform 
+enormously:</p>
+
+<ul>
+<li>Adding code to Transform to support animation of objects now becomes much 
+easier: simply create two frames defining the start and final positions of an 
+object then pass then to a method (yet to be defined) to interpolate the 
+object's position as the animation is played frame-by-frame.</li>
+<li>When combined with the Layer object it simplifies creating animations. 
+Separate layers for each object to be animated can be created. Including the 
+number in each frame object allows a collection of Layers to be easily 
+flattened to create the final animation. Currently all the objects must be 
+created and positioned for successive frames - this makes creating of complex 
+animations with Transform next to impossible without careful coding.</li>
+</ul>
+
+    
+      </div>
<div class="footer">
Copyright 2001-2005, Flagstone Software. All rights reserved. 
Please read our <a href="/privacy.html">Privacy Policy</a> and 
<a href="/legal.html">Legal Notices</a>.
</div>
</div>

</body>
</html>
\ No newline at end of file

Added: trunk/doc/web/template.html
===================================================================
--- trunk/doc/web/template.html	2006-06-28 15:33:24 UTC (rev 181)
+++ trunk/doc/web/template.html	2006-06-29 07:46:48 UTC (rev 182)
@@ -0,0 +1 @@
+<html>
<head>
<meta http-equiv=content-type content="text/html;  charset=ISO-8859-1">
<title>Flagstone Software :: {{$title}}</title>
<link rel="stylesheet" type="text/css" href="/flagstone.css">
<script language="JavaScript" src="/js/imageload.js"></script>
<script language="JavaScript" src="/js/imageswap.js"></script>
</head>

<body>
<script type='text/javascript'>function Go(){return}</script>
<script type="text/javascript" src="/js/menu_var.js"></script>
<script type="text/javascript" src="/js/menu_com.js"></script>
<noscript>Your browser does not support script</noscript>

<div class="page">

<div class="header">
<img src="/images/flagstone_header.gif" alt="Flagstone Software" width=760 height=77>
<table cellpadding="0" cellspacing="0" border="0" class="sitemenu">
<tr>
<td width=150 bgcolor="#9A1F31"><a href="/index.html" onmouseover="imageSwap('home', 'homeOn');" onmouseout="imageSwap('home', 'homeOff');"><img src="/images/home_off.gif" alt="[Home]" width=77 height=29!
  border=0 name="home"></a></td>
<td width=29><img src="/images/diagonal_divider.gif" alt="" width=29 height=29></td>
<td bgcolor="#C43F52"><div id='MenuPos' style='position:left; width:440; height:27;'><img src='/images/spacer.gif' width='440' height='27'></div></td>
<td bgcolor="#C43F52"><img src='/images/spacer.gif' width='141' height='27'></td>
</tr>
</table>
</div>

<div class="content">{{$pageContents}}</div>
<div class="footer">
Copyright 2001-2005, Flagstone Software. All rights reserved. 
Please read our <a href="/privacy.html">Privacy Policy</a> and 
<a href="/legal.html">Legal Notices</a>.
</div>
</div>

</body>
</html>
\ No newline at end of file

Added: trunk/doc/web/whatsnew.html
===================================================================
--- trunk/doc/web/whatsnew.html	2006-06-28 15:33:24 UTC (rev 181)
+++ trunk/doc/web/whatsnew.html	2006-06-29 07:46:48 UTC (rev 182)
@@ -0,0 +1,90 @@
+<html>
<head>
<meta http-equiv=content-type content="text/html;  charset=ISO-8859-1">
<title>Flagstone Software :: What's New With Transform SWF</title>
<link rel="stylesheet" type="text/css" href="/flagstone.css">
<script language="JavaScript" src="/js/imageload.js"></script>
<script language="JavaScript" src="/js/imageswap.js"></script>
</head>

<body>
<script type='text/javascript'>function Go(){return}</script>
<script type="text/javascript" src="/js/menu_var.js"></script>
<script type="text/javascript" src="/js/menu_com.js"></script>
<noscript>Your browser does not support script</noscript>

<div class="page">

<div class="header">
<img src="/images/flagstone_header.gif" alt="Flagstone Software" width=760 height=77>
<table cellpadding="0" cellspacing="0" border="0" class="sitemenu">
<tr>
<td width=150 bgcolor="#9A1F31"><a href="/index.html" onmouseover="imageSwap('home', 'homeOn');" onmouseout="imageSwap('home', 'homeOff');"><img src="/images/home_off.gif" alt="[Home]"!
  width=77 height=29 border=0 name="home"></a></td>
<td width=29><img src="/images/diagonal_divider.gif" alt="" width=29 height=29></td>
<td bgcolor="#C43F52"><div id='MenuPos' style='position:left; width:440; height:27;'><img src='/images/spacer.gif' width='440' height='27'></div></td>
<td bgcolor="#C43F52"><img src='/images/spacer.gif' width='141' height='27'></td>
</tr>
</table>
</div>

<div class="content">
+
+<h1>What's New With Transform SWF</h1>
+
+<p>Here is a brief summary of all the releases of the Transform SWF framework.
+The release notes link describe all the features, update and bug fixes included
+in each release.</P>
+
+<table class="release">
+
+<tr>
+<th class="date">Date</th>
+<th class="version">Version</th>
+<th>Description</th>
+<th class="release">Details</th>
+</tr>
+
+<tr class="even">
+<td class="date">3rd April 2006</td>
+<td class="version">2.1.2</td>
+<td class="description">Bugs fixes, mostly to the FSTextConstructor class.</td>
+<td class="release"><a href="/downloads/transform-2.1.2.txt">release notes</a>
+</td>
+</tr>
+
+<tr class="odd">
+<td class="date">13th March 2006</td>
+<td class="version">2.1.1</td>
+<td class="description">Bug fix for the infinite loop problem when decoding MP3 files.</td>
+<td class="release"><a href="/downloads/transform-2.1.1.txt">release notes</a>
+</td>
+</tr>
+
+<tr class="even">
+<td class="date">7th March 2006</td>
+<td class="version">2.1</td>
+<td class="description">Release now integrates Transform Utilities. Brought forward several improvements planned for version 3.0.</td>
+<td class="release"><a href="/downloads/transform-2.1.txt">release notes</a>
+</td>
+</tr>
+
+<tr class="odd">
+<td class="date">20th February 2006</td>
+<td class="version">2.0.5</td>
+<td class="description">More bug fixes discovered using new test suites.</td>
+<td class="release"><a href="/downloads/transform-2.0.5.txt">release notes</a>
+</td>
+</tr>
+
+<tr class="even">
+<td class="date">4th October 2005</td>
+<td class="version">2.0.4</td>
+<td>Simplified package organisation and fixed coordinate transform bug.</td>
+<td class="release"><a href="/downloads/transform-java-2.0.4.txt">release notes</a></td>
+</tr>
+
+<tr class="odd">
+<td class="date">12th October 2004</td>
+<td class="version">2.0.3</td>
+<td>Transform SWF is now covered by a BSD license.</td>
+<td><a href="/downloads/transform-java-2.0.3.txt">release notes</a></td>
+</tr>
+
+<tr class="even">
+<td class="date">14th June 2004</td>
+<td class="version">2.0.2</td>
+<td>Sets the default signature for the FSMovie class correctly. Adds methods to 
+classes containing actions so binary encoded actions, generated by Translate 
+AS1, can be added to movies.</td>
+<td class="release"><a href="/downloads/transform-java-2.0.2.txt">release notes</a></td>
+</tr>
+
+<tr class="odd">
+<td class="date">6th June 2004</td>
+<td class="version">2.0.1</td>
+<td>Fixes a bug in the FSProtect, FSEnableDebugger and FSEnableDebugger2 classes 
+which fails to decode the password field correctly.</td>
+<td class="release"><a href="/downloads/transform-java-2.0.1.txt">release notes</a></td>
+</tr>
+
+<tr class="even">
+<td class="date">6th April 2004</td>
+<td class="version">2.0.0</td>
+<td>Completely restructured and overhauled the entire framework to boost performance 
+and reduce code size.</td>
+<td class="release"><a href="/downloads/transform-java-2.0.0.txt">release notes</a></td>
+</tr>
+</table>
+
+</div>
<div class="footer">
Copyright 2001-2006, Flagstone Software. All rights reserved. 
Please read our <a href="/privacy.html">Privacy Policy</a> and 
<a href="/legal.html">Legal Notices</a>.
</div>
</div>

</body>
</html>
\ No newline at end of file



From smackay at berlios.de  Thu Jun 29 09:47:31 2006
From: smackay at berlios.de (smackay at berlios.de)
Date: Thu, 29 Jun 2006 09:47:31 +0200
Subject: [Transform-svn] r183 - trunk/doc/releases
Message-ID: <200606290747.k5T7lVMm019738@sheep.berlios.de>

Author: smackay
Date: 2006-06-29 09:47:26 +0200 (Thu, 29 Jun 2006)
New Revision: 183

Modified:
   trunk/doc/releases/transform-2.1.3.txt
Log:
Updated with latest bug fixes.

Modified: trunk/doc/releases/transform-2.1.3.txt
===================================================================
--- trunk/doc/releases/transform-2.1.3.txt	2006-06-29 07:46:48 UTC (rev 182)
+++ trunk/doc/releases/transform-2.1.3.txt	2006-06-29 07:47:26 UTC (rev 183)
@@ -8,7 +8,16 @@
     FSDefineImage2: The encoding of the type and length always uses 6 bytes.     
     TextDump: NewFunction and NewFunction2 no longer decodes actions twice.     
 	FSDefinedJPEGImage[2,3]: now allows null encoding tables.
+	FSCoder: buffer is correctly resized when writing data.
+	FSProtect: copy constructor can now be used when passwords are null.
+	FSPlaceObject2: equals() now works on objects containing encoded clip events.
 	
+Class Changes:
+    FSCoder context variable, version is now public.
+	
+Testing Changes:
+    Added test classes for FSProtect, FSShowFrame and FSSetBackgroundColor.
+	
 Package Changes     
     The TestNG libraries are now included in the release.     
  
@@ -53,8 +62,55 @@
 create an empty table containing only the StartOfImage (0xFFD8) and EndOfImage  
 (0xFFD9) markers.
 
+4. FSCoder: buffer is correctly resized when writing data.
 
+When writing data that would overflow the internal buffer maintained by the 
+FSCoder the size is adjusted automatically. The buffer was adjusted by 50% of 
+the current size. However if the volume of data being written was greater than 
+this figure an overflow would occur and an ArrayIndexOutOfBoundsException 
+would be raised.
+
+The buffer is now resized by 50% + the size of the data being written so making
+sure that overflows will not occur.
+
+5. FSProtect: copy constructor can now be used when passwords are null.
+
+The copy constructor no longer throws a NullPointerException when copying 
+objects that do not contain a string with an MD5 password.
+
+6. FSPlaceObject2: equals() now works on objects containing encoded clip events.
+
+The equals() method now correctly takes into account the comparison performed
+on all of the objects attributes.
+
+-----------------
+  Class Changes  
+-----------------
+
+1. FSCoder context variable, version is now public.
+
+The FSCoder class uses an array of integers to pass information across the 
+object hierarchy when encoding and decoding Flash files. The version variable
+which contains the version of Flash that the objects are being encoded/decoded
+for is now public to support the unit test classes in the package 
+com.flagstone.transfrom.test.
+
+This variable has very little use outside of testing. Other context variables
+will be made public as more test cases are developed.
+
 -------------------
+  Testing Changes  
+-------------------
+
+1. Added test classes for FSProtect, FSShowFrame and FSSetBackgroundColor.
+
+The FSProtectTest, FSShowFrameTest and FSSetBackgroundColorTest were added to
+the com.flagstone.transform.test package to perform unit testing of the 
+FSProtect, FSShowFrame and FSSetBackgroundColor classes respectively. TestNG
+scripts to run the unit tests for each of the classes was added to the 
+test/suites directory.
+
+-------------------
   Package Changes  
 -------------------
 



From smackay at berlios.de  Thu Jun 29 09:48:06 2006
From: smackay at berlios.de (smackay at berlios.de)
Date: Thu, 29 Jun 2006 09:48:06 +0200
Subject: [Transform-svn] r184 - trunk/doc
Message-ID: <200606290748.k5T7m64G019798@sheep.berlios.de>

Author: smackay
Date: 2006-06-29 09:47:54 +0200 (Thu, 29 Jun 2006)
New Revision: 184

Modified:
   trunk/doc/CHANGES.txt
Log:
Updated with latest bug fixes.

Modified: trunk/doc/CHANGES.txt
===================================================================
--- trunk/doc/CHANGES.txt	2006-06-29 07:47:26 UTC (rev 183)
+++ trunk/doc/CHANGES.txt	2006-06-29 07:47:54 UTC (rev 184)
@@ -1,3 +1,13 @@
+2006-06-27 - smackay at flagstonesoftware.com
+
+    * FSButtonSound: corrected a bug where the FSSound objects for the RollOver 
+      and RollOut button events were swapped.
+
+2006-06-27 - smackay at flagstonesoftware.com
+
+    * FSProtect: fixed bug in copy constructor so null passwords do not 
+      raise a NullPointerException.
+
 2006-06-26 - smackay at flagstonesoftware.com
 
     * Added class FSClassTest to test package for test shared between the 



From smackay at berlios.de  Thu Jun 29 09:58:21 2006
From: smackay at berlios.de (smackay at berlios.de)
Date: Thu, 29 Jun 2006 09:58:21 +0200
Subject: [Transform-svn] r185 - trunk/test/suites
Message-ID: <200606290758.k5T7wLbM022700@sheep.berlios.de>

Author: smackay
Date: 2006-06-29 09:58:11 +0200 (Thu, 29 Jun 2006)
New Revision: 185

Modified:
   trunk/test/suites/Transform.xml
Log:
Added new test suites to package level test script.

Modified: trunk/test/suites/Transform.xml
===================================================================
--- trunk/test/suites/Transform.xml	2006-06-29 07:47:54 UTC (rev 184)
+++ trunk/test/suites/Transform.xml	2006-06-29 07:58:11 UTC (rev 185)
@@ -2,19 +2,12 @@
   
 <suite name="Unit Test" verbose="10">
 
-	<test name="FSSetBackgroundColor">
-    	<groups>
-        	<define name="FSSetBackgroundColor">
-        		<include name="color"/>
-        		<include name="setbackgroundcolor"/>
-        	</define>
-    		<run>
-    			<include name="FSSetBackgroundColor"/>
-    		</run>
-    	</groups>
+	<test name="All Classes">
     	<classes>
     		<class name="com.flagstone.transform.test.FSColorTest"/>
+    		<class name="com.flagstone.transform.test.FSProtectTest"/>
     		<class name="com.flagstone.transform.test.FSSetBackgroundColorTest"/>
+    		<class name="com.flagstone.transform.test.FSShowFrameTest"/>
     	</classes>
   	</test>
   	



From smackay at berlios.de  Thu Jun 29 11:33:07 2006
From: smackay at berlios.de (smackay at berlios.de)
Date: Thu, 29 Jun 2006 11:33:07 +0200
Subject: [Transform-svn] r186 - trunk/test/data
Message-ID: <200606290933.k5T9X7mh026853@sheep.berlios.de>

Author: smackay
Date: 2006-06-29 11:33:03 +0200 (Thu, 29 Jun 2006)
New Revision: 186

Removed:
   trunk/test/data/fonts/
   trunk/test/data/images/
   trunk/test/data/movies/
   trunk/test/data/sounds/
Modified:
   trunk/test/data/readme.txt
Log:
Moved the test data into a separate project.

Modified: trunk/test/data/readme.txt
===================================================================
--- trunk/test/data/readme.txt	2006-06-29 07:58:11 UTC (rev 185)
+++ trunk/test/data/readme.txt	2006-06-29 09:33:03 UTC (rev 186)
@@ -8,35 +8,44 @@
 The directories are organized according to the type of file that is used in 
 testing: movies, fonts, images and sounds. Files for specific formats are then
 placed in sub-directories to allow tests to be run with a specific format or
-version - Please see the TestBG scripts included in the test\suites directory 
+version - Please see the TestNG scripts included in the test\suites directory 
 for more information.
 
 The directory tree, as assumed in the TestNG scripts has the following structure:
 
- data
-   |
-   +- fonts
-   |    |
-   |    + vera
-   |    ...
-   |
-   +- images
-   |    |
-   |    +- bmp
-   |    +- jpg
-   |    +- png
-   |
-   +- movies
-   |    |
-   |    +- swf4
-   |    +- swf5
-   |    +- swf6
-   |    +- swf7
-   |
-   +- sounds
-        |
-        + mp3
-        + wav
+test
+  |
+  +- data
+	   |
+	   +- classes
+	   |    |
+	   |    +- swf4
+	   |    +- swf5
+	   |    +- swf6
+	   |    +- swf7
+	   |
+	   +- fonts
+	   |    |
+	   |    + vera
+	   |    ...
+	   |
+	   +- images
+	   |    |
+	   |    +- bmp
+	   |    +- jpg
+	   |    +- png
+	   |
+	   +- movies
+	   |    |
+	   |    +- swf4
+	   |    +- swf5
+	   |    +- swf6
+	   |    +- swf7
+	   |
+	   +- sounds
+	        |
+	        + mp3
+	        + wav
         
 
 Place files for testing in the appropriate directories. Each directory is 
@@ -46,13 +55,13 @@
 -------------
   IMPORTANT
 -------------
-The directories list here are distributed empty for several reasons. First is simply 
-one of size - there are potentially hundreds of files that could be used in testing
-and so providing a comprehensive list would make downloads prohibitively large.
-Other reasons include copyright or other licencing issues - many real-world Flash 
-files provide a great way for testing the way Transform SWF decodes and encodes 
-Flash files but cannot be distributed.
+The test data is distributed as a separate download. Unpack the download and
+copy the directories so the structure matches the pattern shown above.
 
+Not all the directories contain files due to copyright restrictions and a desire 
+to keep the download to a reasonable size. However useful sources for files can 
+be found below.
+
 --------------------------------
   Useful Sources for Test Data
 --------------------------------
@@ -63,16 +72,3 @@
 Flash Files
 www.flashKit.com is probably the most useful source of Flash files that can
 be included in testing.
-
-BMP Format Images
-A test suite can be downloaded from http://pobox.com/~jason1/bmpsuite/
-
-PNG Format Images 
-www.schaik.com/pngsuite/pngsuite.htmlwww.schaik.com/pngsuite/pngsuite.html
-
-Fonts
-Bitstream have released their Vera font with an Open Source license:
-http://gnome.org/fonts/
-
-DejaVu fonts add wide range of characters to the Vera fonts.
-http://dejavu.sourceforge.net/.
\ No newline at end of file



From smackay at berlios.de  Thu Jun 29 11:34:10 2006
From: smackay at berlios.de (smackay at berlios.de)
Date: Thu, 29 Jun 2006 11:34:10 +0200
Subject: [Transform-svn] r187 - trunk/test/suites
Message-ID: <200606290934.k5T9YAte027164@sheep.berlios.de>

Author: smackay
Date: 2006-06-29 11:34:07 +0200 (Thu, 29 Jun 2006)
New Revision: 187

Modified:
   trunk/test/suites/FSMovie.xml
   trunk/test/suites/FSMovieReference.xml
   trunk/test/suites/TextDump.xml
Log:
Changed test suites to use the Flash files that contain a single 
type of object rather than the complete movies.

Modified: trunk/test/suites/FSMovie.xml
===================================================================
--- trunk/test/suites/FSMovie.xml	2006-06-29 09:33:03 UTC (rev 186)
+++ trunk/test/suites/FSMovie.xml	2006-06-29 09:34:07 UTC (rev 187)
@@ -8,7 +8,7 @@
         Decode a movie. 
     -->
     <test name="Encode SWF4">
-		<parameter name="srcDir" value="test/data/movies/swf4"/>
+		<parameter name="srcDir" value="test/data/classes/swf4"/>
 		<parameter name="dstDir" value=""/>
 		<classes>
       		<class name="com.flagstone.transform.test.FSMovieTest">
@@ -20,7 +20,7 @@
   	</test>
 
     <test name="Encode SWF5">
-		<parameter name="srcDir" value="test/data/movies/swf5"/>
+		<parameter name="srcDir" value="test/data/classes/swf5"/>
 		<parameter name="dstDir" value=""/>
 		<classes>
       		<class name="com.flagstone.transform.test.FSMovieTest">
@@ -32,7 +32,7 @@
   	</test>
 
     <test name="Encode SWF6">
-		<parameter name="srcDir" value="test/data/movies/swf6"/>
+		<parameter name="srcDir" value="test/data/classes/swf6"/>
 		<parameter name="dstDir" value=""/>
 		<classes>
       		<class name="com.flagstone.transform.test.FSMovieTest">
@@ -44,7 +44,7 @@
   	</test>
 
     <test name="Encode SWF7">
-		<parameter name="srcDir" value="test/data/movies/swf7"/>
+		<parameter name="srcDir" value="test/data/classes/swf7"/>
 		<parameter name="dstDir" value=""/>
 		<classes>
       		<class name="com.flagstone.transform.test.FSMovieTest">
@@ -59,7 +59,7 @@
         Decode then encode a movie. 
     -->
     <test name="Encode SWF4">
-		<parameter name="srcDir" value="test/data/movies/swf4"/>
+		<parameter name="srcDir" value="test/data/classes/swf4"/>
 		<parameter name="dstDir" value="test/results/FSMovie/encode/swf4"/>
 		<classes>
       		<class name="com.flagstone.transform.test.FSMovieTest">
@@ -71,7 +71,7 @@
   	</test>
 
     <test name="Encode SWF5">
-		<parameter name="srcDir" value="test/data/movies/swf5"/>
+		<parameter name="srcDir" value="test/data/classes/swf5"/>
 		<parameter name="dstDir" value="test/results/FSMovie/encode/swf5"/>
 		<classes>
       		<class name="com.flagstone.transform.test.FSMovieTest">
@@ -83,7 +83,7 @@
   	</test>
 
     <test name="Encode SWF6">
-		<parameter name="srcDir" value="test/data/movies/swf6"/>
+		<parameter name="srcDir" value="test/data/classes/swf6"/>
 		<parameter name="dstDir" value="test/results/FSMovie/encode/swf6"/>
 		<classes>
       		<class name="com.flagstone.transform.test.FSMovieTest">
@@ -95,7 +95,7 @@
   	</test>
 
     <test name="Encode SWF7">
-		<parameter name="srcDir" value="test/data/movies/swf7"/>
+		<parameter name="srcDir" value="test/data/classes/swf7"/>
 		<parameter name="dstDir" value="test/results/FSMovie/encode/swf7"/>
 		<classes>
       		<class name="com.flagstone.transform.test.FSMovieTest">
@@ -162,7 +162,7 @@
         Decode, clone then encode a movie. 
     -->
     <test name="Clone SWF4">
-		<parameter name="srcDir" value="test/data/movies/swf4"/>
+		<parameter name="srcDir" value="test/data/classes/swf4"/>
 		<parameter name="dstDir" value="test/results/FSMovie/clone/swf4"/>
 		<classes>
       		<class name="com.flagstone.transform.test.FSMovieTest">
@@ -174,7 +174,7 @@
   	</test>
 
     <test name="Clone SWF5">
-		<parameter name="srcDir" value="test/data/movies/swf5"/>
+		<parameter name="srcDir" value="test/data/classes/swf5"/>
 		<parameter name="dstDir" value="test/results/FSMovie/clone/swf5"/>
 		<classes>
       		<class name="com.flagstone.transform.test.FSMovieTest">
@@ -186,7 +186,7 @@
   	</test>
 
     <test name="Clone SWF6">
-		<parameter name="srcDir" value="test/data/movies/swf6"/>
+		<parameter name="srcDir" value="test/data/classes/swf6"/>
 		<parameter name="dstDir" value="test/results/FSMovie/clone/swf6"/>
 		<classes>
       		<class name="com.flagstone.transform.test.FSMovieTest">
@@ -198,7 +198,7 @@
   	</test>
 
     <test name="Clone SWF7">
-		<parameter name="srcDir" value="test/data/movies/swf7"/>
+		<parameter name="srcDir" value="test/data/classes/swf7"/>
 		<parameter name="dstDir" value="test/results/FSMovie/clone/swf7"/>
 		<classes>
       		<class name="com.flagstone.transform.test.FSMovieTest">
@@ -262,7 +262,7 @@
         Lazy decoding of actions and shapes in a movie. 
     -->
     <test name="Lazy Decoding SWF4">
-		<parameter name="srcDir" value="test/data/movies/swf4"/>
+		<parameter name="srcDir" value="test/data/classes/swf4"/>
 		<parameter name="dstDir" value=""/>
 		<classes>
       		<class name="com.flagstone.transform.test.FSMovieTest">
@@ -274,7 +274,7 @@
   	</test>
 
     <test name="Lazy Decoding SWF5">
-		<parameter name="srcDir" value="test/data/movies/swf5"/>
+		<parameter name="srcDir" value="test/data/classes/swf5"/>
 		<parameter name="dstDir" value=""/>
 		<classes>
       		<class name="com.flagstone.transform.test.FSMovieTest">
@@ -286,7 +286,7 @@
   	</test>
 
     <test name="Lazy Decoding SWF6">
-		<parameter name="srcDir" value="test/data/movies/swf6"/>
+		<parameter name="srcDir" value="test/data/classes/swf6"/>
 		<parameter name="dstDir" value=""/>
 		<classes>
       		<class name="com.flagstone.transform.test.FSMovieTest">
@@ -298,7 +298,7 @@
   	</test>
 
     <test name="Lazy Decoding SWF7">
-		<parameter name="srcDir" value="test/data/movies/swf7"/>
+		<parameter name="srcDir" value="test/data/classes/swf7"/>
 		<parameter name="dstDir" value=""/>
 		<classes>
       		<class name="com.flagstone.transform.test.FSMovieTest">
@@ -313,7 +313,7 @@
         Lazy encoding of actions and shapes in a movie. 
     -->
     <test name="Lazy Encoding SWF4">
-		<parameter name="srcDir" value="test/data/movies/swf4"/>
+		<parameter name="srcDir" value="test/data/classes/swf4"/>
 		<parameter name="dstDir" value="test/results/FSMovie/lazyEncode/swf4"/>
 		<classes>
       		<class name="com.flagstone.transform.test.FSMovieTest">
@@ -325,7 +325,7 @@
   	</test>
 
     <test name="Lazy Encoding SWF5">
-		<parameter name="srcDir" value="test/data/movies/swf5"/>
+		<parameter name="srcDir" value="test/data/classes/swf5"/>
 		<parameter name="dstDir" value="test/results/FSMovie/lazyEncode/swf5"/>
 		<classes>
       		<class name="com.flagstone.transform.test.FSMovieTest">
@@ -337,7 +337,7 @@
   	</test>
 
     <test name="Lazy Encoding SWF6">
-		<parameter name="srcDir" value="test/data/movies/swf6"/>
+		<parameter name="srcDir" value="test/data/classes/swf6"/>
 		<parameter name="dstDir" value="test/results/FSMovie/lazyEncode/swf6"/>
 		<classes>
       		<class name="com.flagstone.transform.test.FSMovieTest">
@@ -349,7 +349,7 @@
   	</test>
 
     <test name="Lazy Encoding SWF7">
-		<parameter name="srcDir" value="test/data/movies/swf7"/>
+		<parameter name="srcDir" value="test/data/classes/swf7"/>
 		<parameter name="dstDir" value="test/results/FSMovie/lazyEncode/swf7"/>
 		<classes>
       		<class name="com.flagstone.transform.test.FSMovieTest">

Modified: trunk/test/suites/FSMovieReference.xml
===================================================================
--- trunk/test/suites/FSMovieReference.xml	2006-06-29 09:33:03 UTC (rev 186)
+++ trunk/test/suites/FSMovieReference.xml	2006-06-29 09:34:07 UTC (rev 187)
@@ -9,7 +9,7 @@
 	    the files saved by the encode and clone tests.
 	-->
     <test name="Reference SWF4">
-		<parameter name="srcDir" value="test/data/movies/swf4"/>
+		<parameter name="srcDir" value="test/data/classes/swf4"/>
 		<parameter name="dstDir" value="test/results/FSMovie/reference/swf4"/>
 		<classes>
       		<class name="com.flagstone.transform.test.FSMovieTest">
@@ -21,7 +21,7 @@
   	</test>
 
     <test name="Reference SWF5">
-		<parameter name="srcDir" value="test/data/movies/swf5"/>
+		<parameter name="srcDir" value="test/data/classes/swf5"/>
 		<parameter name="dstDir" value="test/results/FSMovie/reference/swf5"/>
 		<classes>
       		<class name="com.flagstone.transform.test.FSMovieTest">
@@ -33,7 +33,7 @@
   	</test>
 
     <test name="Reference SWF6">
-		<parameter name="srcDir" value="test/data/movies/swf6"/>
+		<parameter name="srcDir" value="test/data/classes/swf6"/>
 		<parameter name="dstDir" value="test/results/FSMovie/reference/swf6"/>
 		<classes>
       		<class name="com.flagstone.transform.test.FSMovieTest">
@@ -45,7 +45,7 @@
   	</test>
 
     <test name="Reference SWF7">
-		<parameter name="srcDir" value="test/data/movies/swf7"/>
+		<parameter name="srcDir" value="test/data/classes/swf7"/>
 		<parameter name="dstDir" value="test/results/FSMovie/reference/swf7"/>
 		<classes>
       		<class name="com.flagstone.transform.test.FSMovieTest">

Modified: trunk/test/suites/TextDump.xml
===================================================================
--- trunk/test/suites/TextDump.xml	2006-06-29 09:33:03 UTC (rev 186)
+++ trunk/test/suites/TextDump.xml	2006-06-29 09:34:07 UTC (rev 187)
@@ -2,28 +2,28 @@
   
 <suite name="TextDump">
     <test name="ToText SWF4">
-		<parameter name="srcDir" value="test/data/movies/swf4"/>
+		<parameter name="srcDir" value="test/data/classes/swf4"/>
 		<parameter name="dstDir" value="test/results/TextDump/swf4"/>
 		<classes>
       		<class name="com.flagstone.transform.test.TextDumpTest"/>
 		</classes>
   	</test>
     <test name="ToText SWF5">
-		<parameter name="srcDir" value="test/data/movies/swf5"/>
+		<parameter name="srcDir" value="test/data/classes/swf5"/>
 		<parameter name="dstDir" value="test/results/TextDump/swf5"/>
 		<classes>
       		<class name="com.flagstone.transform.test.TextDumpTest"/>
 		</classes>
   	</test>
     <test name="ToText SWF6">
-		<parameter name="srcDir" value="test/data/movies/swf6"/>
+		<parameter name="srcDir" value="test/data/classes/swf6"/>
 		<parameter name="dstDir" value="test/results/TextDump/swf6"/>
 		<classes>
       		<class name="com.flagstone.transform.test.TextDumpTest"/>
 		</classes>
   	</test>
     <test name="ToText SWF7">
-		<parameter name="srcDir" value="test/data/movies/swf7"/>
+		<parameter name="srcDir" value="test/data/classes/swf7"/>
 		<parameter name="dstDir" value="test/results/TextDump/swf7"/>
 		<classes>
       		<class name="com.flagstone.transform.test.TextDumpTest"/>



From smackay at berlios.de  Thu Jun 29 11:34:56 2006
From: smackay at berlios.de (smackay at berlios.de)
Date: Thu, 29 Jun 2006 11:34:56 +0200
Subject: [Transform-svn] r188 - trunk
Message-ID: <200606290934.k5T9YuUW027197@sheep.berlios.de>

Author: smackay
Date: 2006-06-29 11:34:53 +0200 (Thu, 29 Jun 2006)
New Revision: 188

Modified:
   trunk/developer.xml
Log:
doc/css and doc/web are excluded when building a distribution.

Modified: trunk/developer.xml
===================================================================
--- trunk/developer.xml	2006-06-29 09:34:07 UTC (rev 187)
+++ trunk/developer.xml	2006-06-29 09:34:53 UTC (rev 188)
@@ -72,7 +72,10 @@
         </copy>
 
         <copy todir="${dist.dir}/doc" overwrite="true">
-            <fileset dir="doc"/>
+            <fileset dir="doc">
+                <exclude name="css/**" />
+                <exclude name="web/**" />
+            </fileset>
         </copy>
 
         <copy todir="${dist.dir}/test" overwrite="true">



From smackay at berlios.de  Thu Jun 29 11:37:22 2006
From: smackay at berlios.de (smackay at berlios.de)
Date: Thu, 29 Jun 2006 11:37:22 +0200
Subject: [Transform-svn] r189 - trunk
Message-ID: <200606290937.k5T9bM62027771@sheep.berlios.de>

Author: smackay
Date: 2006-06-29 11:37:20 +0200 (Thu, 29 Jun 2006)
New Revision: 189

Modified:
   trunk/
Log:
Updated


Property changes on: trunk
___________________________________________________________________
Name: svn:ignore
   - 
.classpath
.project
build
transform.jar
testng-failures.xml
dist
web.xml

   + .classpath
.project
build
transform.jar
testng-failures.xml
dist
web.xml
.settings




From smackay at berlios.de  Thu Jun 29 12:52:09 2006
From: smackay at berlios.de (smackay at berlios.de)
Date: Thu, 29 Jun 2006 12:52:09 +0200
Subject: [Transform-svn] r190 - trunk/doc
Message-ID: <200606291052.k5TAq9QC009566@sheep.berlios.de>

Author: smackay
Date: 2006-06-29 12:51:53 +0200 (Thu, 29 Jun 2006)
New Revision: 190

Modified:
   trunk/doc/README.txt
Log:
Updated to include reference to separate test data package.

Modified: trunk/doc/README.txt
===================================================================
--- trunk/doc/README.txt	2006-06-29 09:37:20 UTC (rev 189)
+++ trunk/doc/README.txt	2006-06-29 10:51:53 UTC (rev 190)
@@ -90,36 +90,22 @@
 test while the report generated while testing the entire framework is written
 to the directory, Transform.
 
----------------------------------
-  Using Flash Files For Testing
----------------------------------
-The directory test/data/movies is designed to hold sets of movies from each 
-version of Flash which are used when testing the classes in the Transform 
-framework, particularly the FSMovie class.
+---------------------------
+  Using Files For Testing
+---------------------------
+The directory test/data is designed to hold sets of files that can be used to
+test the classes in the framework, particularly the FSMovie class.
 
 The files augment the unit test data to ensure that real-world files, 
 particularly those generatd by third-party applications, can be decoded and 
 encoded correctly.
 
-Separate directories are used for each version of Flash as the file format 
-changes and the tests are designed to verify that a specific version of Flash is
-supported rather than simply the latest version from Macromedia.
+In order to limit the size of the package the test files are available as a 
+separate download from Flagstone's web site. Downloading the test data is 
+optional as an increasing number of a test classes and suites are being added 
+to the framework that contain limited sets of binary data as test patterns for 
+unit testing.
 
--------------
-  IMPORTANT
--------------
-The directories list here are distributed empty to avoid any copyright or other 
-licencing issues. Place any sample Flash (.swf) files that you want to use to 
-run the tests in the respective directories - the 4th byte of the encoded Flash 
-file contains the version number.
-
-For more information on the tests see:
-
-    src/com/flagstone/transform/test/FSMovieTest.java
-    test/suites/FSMovie.xml
-
-to see how the Flash files are used in testing.
-
 -----------------------
   Using the Framework
 -----------------------



From smackay at berlios.de  Thu Jun 29 12:53:36 2006
From: smackay at berlios.de (smackay at berlios.de)
Date: Thu, 29 Jun 2006 12:53:36 +0200
Subject: [Transform-svn] r191 - trunk/test/data
Message-ID: <200606291053.k5TAraGe009784@sheep.berlios.de>

Author: smackay
Date: 2006-06-29 12:53:28 +0200 (Thu, 29 Jun 2006)
New Revision: 191

Modified:
   trunk/test/data/readme.txt
Log:
Fixed formatting error.

Modified: trunk/test/data/readme.txt
===================================================================
--- trunk/test/data/readme.txt	2006-06-29 10:51:53 UTC (rev 190)
+++ trunk/test/data/readme.txt	2006-06-29 10:53:28 UTC (rev 191)
@@ -65,7 +65,7 @@
 --------------------------------
   Useful Sources for Test Data
 --------------------------------
-Here are some of the suites/ lists of files that are currently used for testing 
+Here are some of the suites/lists of files that are currently used for testing 
 the classes in the Transform SWF framework. This list will be updated on a regular 
 basis:
 



From smackay at berlios.de  Thu Jun 29 14:09:15 2006
From: smackay at berlios.de (smackay at berlios.de)
Date: Thu, 29 Jun 2006 14:09:15 +0200
Subject: [Transform-svn] r192 - trunk/doc
Message-ID: <200606291209.k5TC9Fcp000447@sheep.berlios.de>

Author: smackay
Date: 2006-06-29 14:09:10 +0200 (Thu, 29 Jun 2006)
New Revision: 192

Modified:
   trunk/doc/CHANGES.txt
Log:
Updated to include reference to separate test data package.

Modified: trunk/doc/CHANGES.txt
===================================================================
--- trunk/doc/CHANGES.txt	2006-06-29 10:53:28 UTC (rev 191)
+++ trunk/doc/CHANGES.txt	2006-06-29 12:09:10 UTC (rev 192)
@@ -1,5 +1,10 @@
-2006-06-27 - smackay at flagstonesoftware.com
+2006-06-29 - smackay at flagstonesoftware.com
 
+    * Moved the files used for testing out of the project. They will be added
+      to a separate package to reduce the download size.
+
+2006-06-28 - smackay at flagstonesoftware.com
+
     * FSButtonSound: corrected a bug where the FSSound objects for the RollOver 
       and RollOut button events were swapped.
 



From smackay at berlios.de  Thu Jun 29 14:11:47 2006
From: smackay at berlios.de (smackay at berlios.de)
Date: Thu, 29 Jun 2006 14:11:47 +0200
Subject: [Transform-svn] r193 - trunk/test/benchmarks
Message-ID: <200606291211.k5TCBlZv001258@sheep.berlios.de>

Author: smackay
Date: 2006-06-29 14:11:34 +0200 (Thu, 29 Jun 2006)
New Revision: 193

Modified:
   trunk/test/benchmarks/FSMovieDecode.xml
   trunk/test/benchmarks/FSMovieEncode.xml
Log:
Changed the benchmark test suites to used the Flash 'classes' files.

Modified: trunk/test/benchmarks/FSMovieDecode.xml
===================================================================
--- trunk/test/benchmarks/FSMovieDecode.xml	2006-06-29 12:09:10 UTC (rev 192)
+++ trunk/test/benchmarks/FSMovieDecode.xml	2006-06-29 12:11:34 UTC (rev 193)
@@ -7,7 +7,7 @@
     -->
 
     <test name="Decode SWF4">
-		<parameter name="srcDir" value="test/data/movies/swf4"/>
+		<parameter name="srcDir" value="test/data/classes/swf4"/>
 		<parameter name="dstDir" value="test/results/FSMovie/benchmark"/>
 		<parameter name="logFile" value="test/results/FSMovie/benchmark/decode-swf4.log"/>
 		<classes>
@@ -20,7 +20,7 @@
   	</test>
 
     <test name="Decode SWF5">
-		<parameter name="srcDir" value="test/data/movies/swf5"/>
+		<parameter name="srcDir" value="test/data/classes/swf5"/>
 		<parameter name="dstDir" value="test/results/FSMovie/benchmark"/>
 		<parameter name="logFile" value="test/results/FSMovie/benchmark/decode-swf5.log"/>
 		<classes>
@@ -33,7 +33,7 @@
   	</test>
 
     <test name="Decode SWF6">
-		<parameter name="srcDir" value="test/data/movies/swf6"/>
+		<parameter name="srcDir" value="test/data/classes/swf6"/>
 		<parameter name="dstDir" value="test/results/FSMovie/benchmark"/>
 		<parameter name="logFile" value="test/results/FSMovie/benchmark/decode-swf6.log"/>
 		<classes>
@@ -46,7 +46,7 @@
   	</test>
 
     <test name="Decode SWF7">
-		<parameter name="srcDir" value="test/data/movies/swf7"/>
+		<parameter name="srcDir" value="test/data/classes/swf7"/>
 		<parameter name="dstDir" value="test/results/FSMovie/benchmark"/>
 		<parameter name="logFile" value="test/results/FSMovie/benchmark/decode-swf7.log"/>
 		<classes>
@@ -63,7 +63,7 @@
     -->
 
     <test name="Decode SWF4">
-		<parameter name="srcDir" value="test/data/movies/swf4"/>
+		<parameter name="srcDir" value="test/data/classes/swf4"/>
 		<parameter name="dstDir" value="test/results/FSMovie/benchmark"/>
 		<parameter name="logFile" value="test/results/FSMovie/benchmark/lazy-decode-swf4.log"/>
 		<classes>
@@ -76,7 +76,7 @@
   	</test>
 
     <test name="Decode SWF5">
-		<parameter name="srcDir" value="test/data/movies/swf5"/>
+		<parameter name="srcDir" value="test/data/classes/swf5"/>
 		<parameter name="dstDir" value="test/results/FSMovie/benchmark"/>
 		<parameter name="logFile" value="test/results/FSMovie/benchmark/lazy-decode-swf5.log"/>
 		<classes>
@@ -89,7 +89,7 @@
   	</test>
 
     <test name="Decode SWF6">
-		<parameter name="srcDir" value="test/data/movies/swf6"/>
+		<parameter name="srcDir" value="test/data/classes/swf6"/>
 		<parameter name="dstDir" value="test/results/FSMovie/benchmark"/>
 		<parameter name="logFile" value="test/results/FSMovie/benchmark/lazy-decode-swf6.log"/>
 		<classes>
@@ -102,7 +102,7 @@
   	</test>
 
     <test name="Decode SWF7">
-		<parameter name="srcDir" value="test/data/movies/swf7"/>
+		<parameter name="srcDir" value="test/data/classes/swf7"/>
 		<parameter name="dstDir" value="test/results/FSMovie/benchmark"/>
 		<parameter name="logFile" value="test/results/FSMovie/benchmark/lazy-decode-swf7.log"/>
 		<classes>

Modified: trunk/test/benchmarks/FSMovieEncode.xml
===================================================================
--- trunk/test/benchmarks/FSMovieEncode.xml	2006-06-29 12:09:10 UTC (rev 192)
+++ trunk/test/benchmarks/FSMovieEncode.xml	2006-06-29 12:11:34 UTC (rev 193)
@@ -7,7 +7,7 @@
     -->
 
     <test name="Encode SWF4">
-		<parameter name="srcDir" value="test/data/movies/swf4"/>
+		<parameter name="srcDir" value="test/data/classes/swf4"/>
 		<parameter name="dstDir" value="test/results/FSMovie/benchmark"/>
 		<parameter name="logFile" value="test/results/FSMovie/benchmark/encode-swf4.log"/>
 		<classes>
@@ -20,7 +20,7 @@
   	</test>
 
     <test name="Encode SWF5">
-		<parameter name="srcDir" value="test/data/movies/swf5"/>
+		<parameter name="srcDir" value="test/data/classes/swf5"/>
 		<parameter name="dstDir" value="test/results/FSMovie/benchmark"/>
 		<parameter name="logFile" value="test/results/FSMovie/benchmark/encode-swf5.log"/>
 		<classes>
@@ -33,7 +33,7 @@
   	</test>
 
     <test name="Encode SWF6">
-		<parameter name="srcDir" value="test/data/movies/swf6"/>
+		<parameter name="srcDir" value="test/data/classes/swf6"/>
 		<parameter name="dstDir" value="test/results/FSMovie/benchmark"/>
 		<parameter name="logFile" value="test/results/FSMovie/benchmark/encode-swf6.log"/>
 		<classes>
@@ -46,7 +46,7 @@
   	</test>
 
     <test name="Encode SWF7">
-		<parameter name="srcDir" value="test/data/movies/swf7"/>
+		<parameter name="srcDir" value="test/data/classes/swf7"/>
 		<parameter name="dstDir" value="test/results/FSMovie/benchmark"/>
 		<parameter name="logFile" value="test/results/FSMovie/benchmark/encode-swf7.log"/>
 		<classes>
@@ -63,7 +63,7 @@
     -->
 
     <test name="Encode SWF4">
-		<parameter name="srcDir" value="test/data/movies/swf4"/>
+		<parameter name="srcDir" value="test/data/classes/swf4"/>
 		<parameter name="dstDir" value="test/results/FSMovie/benchmark"/>
 		<parameter name="logFile" value="test/results/FSMovie/benchmark/lazy-encode-swf4.log"/>
 		<classes>
@@ -76,7 +76,7 @@
   	</test>
 
     <test name="Encode SWF5">
-		<parameter name="srcDir" value="test/data/movies/swf5"/>
+		<parameter name="srcDir" value="test/data/classes/swf5"/>
 		<parameter name="dstDir" value="test/results/FSMovie/benchmark"/>
 		<parameter name="logFile" value="test/results/FSMovie/benchmark/lazy-encode-swf5.log"/>
 		<classes>
@@ -89,7 +89,7 @@
   	</test>
 
     <test name="Encode SWF6">
-		<parameter name="srcDir" value="test/data/movies/swf6"/>
+		<parameter name="srcDir" value="test/data/classes/swf6"/>
 		<parameter name="dstDir" value="test/results/FSMovie/benchmark"/>
 		<parameter name="logFile" value="test/results/FSMovie/benchmark/lazy-encode-swf6.log"/>
 		<classes>
@@ -102,7 +102,6 @@
   	</test>
 
     <test name="Encode SWF7">
-		<parameter name="srcDir" value="test/data/movies/swf7"/>
 		<parameter name="dstDir" value="test/results/FSMovie/benchmark"/>
 		<parameter name="logFile" value="test/results/FSMovie/benchmark/lazy-encode-swf7.log"/>
 		<classes>



From smackay at berlios.de  Thu Jun 29 17:11:18 2006
From: smackay at berlios.de (smackay at berlios.de)
Date: Thu, 29 Jun 2006 17:11:18 +0200
Subject: [Transform-svn] r195 - in trunk/test/data/images: . bmp jpg png
Message-ID: <200606291511.k5TFBI21030314@sheep.berlios.de>

Author: smackay
Date: 2006-06-29 17:08:23 +0200 (Thu, 29 Jun 2006)
New Revision: 195

Added:
   trunk/test/data/images/bmp/
   trunk/test/data/images/bmp/g01bg.bmp
   trunk/test/data/images/bmp/g01bw.bmp
   trunk/test/data/images/bmp/g01p1.bmp
   trunk/test/data/images/bmp/g01wb.bmp
   trunk/test/data/images/bmp/g04.bmp
   trunk/test/data/images/bmp/g04p4.bmp
   trunk/test/data/images/bmp/g04rle.bmp
   trunk/test/data/images/bmp/g08.bmp
   trunk/test/data/images/bmp/g08offs.bmp
   trunk/test/data/images/bmp/g08os2.bmp
   trunk/test/data/images/bmp/g08p256.bmp
   trunk/test/data/images/bmp/g08p64.bmp
   trunk/test/data/images/bmp/g08pi256.bmp
   trunk/test/data/images/bmp/g08pi64.bmp
   trunk/test/data/images/bmp/g08res11.bmp
   trunk/test/data/images/bmp/g08res21.bmp
   trunk/test/data/images/bmp/g08res22.bmp
   trunk/test/data/images/bmp/g08rle.bmp
   trunk/test/data/images/bmp/g08s0.bmp
   trunk/test/data/images/bmp/g08w124.bmp
   trunk/test/data/images/bmp/g08w125.bmp
   trunk/test/data/images/bmp/g08w126.bmp
   trunk/test/data/images/bmp/g16bf555.bmp
   trunk/test/data/images/bmp/g16bf565.bmp
   trunk/test/data/images/bmp/g16def555.bmp
   trunk/test/data/images/bmp/g24.bmp
   trunk/test/data/images/bmp/g32bf.bmp
   trunk/test/data/images/bmp/g32def.bmp
   trunk/test/data/images/bmp/readme.txt
   trunk/test/data/images/jpg/
   trunk/test/data/images/jpg/2002-03-02_13-14-23.jpg
   trunk/test/data/images/jpg/2002-03-02_16-25-28.jpg
   trunk/test/data/images/jpg/2002-05-03_16-19-17.jpg
   trunk/test/data/images/jpg/2002-08-05_17-23-44.jpg
   trunk/test/data/images/jpg/2002-08-07_17-28-10.jpg
   trunk/test/data/images/jpg/2002-08-08_18-24-40.jpg
   trunk/test/data/images/jpg/2002-11-29_10-34-11.jpg
   trunk/test/data/images/jpg/2002-11-29_10-57-12.jpg
   trunk/test/data/images/jpg/2002-11-29_12-37-09.jpg
   trunk/test/data/images/jpg/2002-11-29_14-01-28.jpg
   trunk/test/data/images/jpg/2003-04-13_08-52-45.jpg
   trunk/test/data/images/jpg/2003-04-13_15-59-26.jpg
   trunk/test/data/images/jpg/2003-04-25_16-01-18.jpg
   trunk/test/data/images/jpg/2003-04-25_16-51-09.jpg
   trunk/test/data/images/jpg/2003-05-01_14-45-29.jpg
   trunk/test/data/images/jpg/2003-05-01_14-47-00.jpg
   trunk/test/data/images/jpg/2003-05-06_07-59-45.jpg
   trunk/test/data/images/jpg/2003-05-06_09-47-21.jpg
   trunk/test/data/images/jpg/2003-05-06_15-42-47.jpg
   trunk/test/data/images/jpg/2003-05-09_17-03-15.jpg
   trunk/test/data/images/jpg/2003-05-18_10-14-11.jpg
   trunk/test/data/images/jpg/2003-05-18_16-13-05.jpg
   trunk/test/data/images/jpg/2003-05-21_15-23-40.jpg
   trunk/test/data/images/jpg/2003-05-23_14-55-26.jpg
   trunk/test/data/images/jpg/2003-05-30_14-44-15.jpg
   trunk/test/data/images/jpg/2003-08-12_16-29-12.jpg
   trunk/test/data/images/jpg/2003-08-13_16-59-47.jpg
   trunk/test/data/images/jpg/2003-08-18_17-51-23.jpg
   trunk/test/data/images/jpg/2003-08-22_16-24-27.jpg
   trunk/test/data/images/jpg/2003-08-25_15-31-38.jpg
   trunk/test/data/images/jpg/2003-08-26_17-45-08.jpg
   trunk/test/data/images/jpg/2003-08-27_16-36-47.jpg
   trunk/test/data/images/png/
   trunk/test/data/images/png/basi0g01.png
   trunk/test/data/images/png/basi0g02.png
   trunk/test/data/images/png/basi0g04.png
   trunk/test/data/images/png/basi0g08.png
   trunk/test/data/images/png/basi0g16.png
   trunk/test/data/images/png/basi2c08.png
   trunk/test/data/images/png/basi2c16.png
   trunk/test/data/images/png/basi3p01.png
   trunk/test/data/images/png/basi3p02.png
   trunk/test/data/images/png/basi3p04.png
   trunk/test/data/images/png/basi3p08.png
   trunk/test/data/images/png/basi4a08.png
   trunk/test/data/images/png/basi4a16.png
   trunk/test/data/images/png/basi6a08.png
   trunk/test/data/images/png/basi6a16.png
   trunk/test/data/images/png/basn0g01.png
   trunk/test/data/images/png/basn0g02.png
   trunk/test/data/images/png/basn0g04.png
   trunk/test/data/images/png/basn0g08.png
   trunk/test/data/images/png/basn0g16.png
   trunk/test/data/images/png/basn2c08.png
   trunk/test/data/images/png/basn2c16.png
   trunk/test/data/images/png/basn3p01.png
   trunk/test/data/images/png/basn3p02.png
   trunk/test/data/images/png/basn3p04.png
   trunk/test/data/images/png/basn3p08.png
   trunk/test/data/images/png/basn4a08.png
   trunk/test/data/images/png/basn4a16.png
   trunk/test/data/images/png/basn6a08.png
   trunk/test/data/images/png/basn6a16.png
   trunk/test/data/images/png/bgai4a08.png
   trunk/test/data/images/png/bgai4a16.png
   trunk/test/data/images/png/bgan6a08.png
   trunk/test/data/images/png/bgan6a16.png
   trunk/test/data/images/png/bgbn4a08.png
   trunk/test/data/images/png/bggn4a16.png
   trunk/test/data/images/png/bgwn6a08.png
   trunk/test/data/images/png/bgyn6a16.png
   trunk/test/data/images/png/ccwn2c08.png
   trunk/test/data/images/png/ccwn3p08.png
   trunk/test/data/images/png/cdfn2c08.png
   trunk/test/data/images/png/cdhn2c08.png
   trunk/test/data/images/png/cdsn2c08.png
   trunk/test/data/images/png/cdun2c08.png
   trunk/test/data/images/png/ch1n3p04.png
   trunk/test/data/images/png/ch2n3p08.png
   trunk/test/data/images/png/cm0n0g04.png
   trunk/test/data/images/png/cm7n0g04.png
   trunk/test/data/images/png/cm9n0g04.png
   trunk/test/data/images/png/cs3n2c16.png
   trunk/test/data/images/png/cs3n3p08.png
   trunk/test/data/images/png/cs5n2c08.png
   trunk/test/data/images/png/cs5n3p08.png
   trunk/test/data/images/png/cs8n2c08.png
   trunk/test/data/images/png/cs8n3p08.png
   trunk/test/data/images/png/ct0n0g04.png
   trunk/test/data/images/png/ct1n0g04.png
   trunk/test/data/images/png/ctzn0g04.png
   trunk/test/data/images/png/f00n0g08.png
   trunk/test/data/images/png/f00n2c08.png
   trunk/test/data/images/png/f01n0g08.png
   trunk/test/data/images/png/f01n2c08.png
   trunk/test/data/images/png/f02n0g08.png
   trunk/test/data/images/png/f02n2c08.png
   trunk/test/data/images/png/f03n0g08.png
   trunk/test/data/images/png/f03n2c08.png
   trunk/test/data/images/png/f04n0g08.png
   trunk/test/data/images/png/f04n2c08.png
   trunk/test/data/images/png/g03n0g16.png
   trunk/test/data/images/png/g03n2c08.png
   trunk/test/data/images/png/g03n3p04.png
   trunk/test/data/images/png/g04n0g16.png
   trunk/test/data/images/png/g04n2c08.png
   trunk/test/data/images/png/g04n3p04.png
   trunk/test/data/images/png/g05n0g16.png
   trunk/test/data/images/png/g05n2c08.png
   trunk/test/data/images/png/g05n3p04.png
   trunk/test/data/images/png/g07n0g16.png
   trunk/test/data/images/png/g07n2c08.png
   trunk/test/data/images/png/g07n3p04.png
   trunk/test/data/images/png/g10n0g16.png
   trunk/test/data/images/png/g10n2c08.png
   trunk/test/data/images/png/g10n3p04.png
   trunk/test/data/images/png/g25n0g16.png
   trunk/test/data/images/png/g25n2c08.png
   trunk/test/data/images/png/g25n3p04.png
   trunk/test/data/images/png/oi1n0g16.png
   trunk/test/data/images/png/oi1n2c16.png
   trunk/test/data/images/png/oi2n0g16.png
   trunk/test/data/images/png/oi2n2c16.png
   trunk/test/data/images/png/oi4n0g16.png
   trunk/test/data/images/png/oi4n2c16.png
   trunk/test/data/images/png/oi9n0g16.png
   trunk/test/data/images/png/oi9n2c16.png
   trunk/test/data/images/png/pngsuite.doc
   trunk/test/data/images/png/pngsuite_logo.png
   trunk/test/data/images/png/pp0n2c16.png
   trunk/test/data/images/png/pp0n6a08.png
   trunk/test/data/images/png/ps1n0g08.png
   trunk/test/data/images/png/ps1n2c16.png
   trunk/test/data/images/png/ps2n0g08.png
   trunk/test/data/images/png/ps2n2c16.png
   trunk/test/data/images/png/s01i3p01.png
   trunk/test/data/images/png/s01n3p01.png
   trunk/test/data/images/png/s02i3p01.png
   trunk/test/data/images/png/s02n3p01.png
   trunk/test/data/images/png/s03i3p01.png
   trunk/test/data/images/png/s03n3p01.png
   trunk/test/data/images/png/s04i3p01.png
   trunk/test/data/images/png/s04n3p01.png
   trunk/test/data/images/png/s05i3p02.png
   trunk/test/data/images/png/s05n3p02.png
   trunk/test/data/images/png/s06i3p02.png
   trunk/test/data/images/png/s06n3p02.png
   trunk/test/data/images/png/s07i3p02.png
   trunk/test/data/images/png/s07n3p02.png
   trunk/test/data/images/png/s08i3p02.png
   trunk/test/data/images/png/s08n3p02.png
   trunk/test/data/images/png/s09i3p02.png
   trunk/test/data/images/png/s09n3p02.png
   trunk/test/data/images/png/s32i3p04.png
   trunk/test/data/images/png/s32n3p04.png
   trunk/test/data/images/png/s33i3p04.png
   trunk/test/data/images/png/s33n3p04.png
   trunk/test/data/images/png/s34i3p04.png
   trunk/test/data/images/png/s34n3p04.png
   trunk/test/data/images/png/s35i3p04.png
   trunk/test/data/images/png/s35n3p04.png
   trunk/test/data/images/png/s36i3p04.png
   trunk/test/data/images/png/s36n3p04.png
   trunk/test/data/images/png/s37i3p04.png
   trunk/test/data/images/png/s37n3p04.png
   trunk/test/data/images/png/s38i3p04.png
   trunk/test/data/images/png/s38n3p04.png
   trunk/test/data/images/png/s39i3p04.png
   trunk/test/data/images/png/s39n3p04.png
   trunk/test/data/images/png/s40i3p04.png
   trunk/test/data/images/png/s40n3p04.png
   trunk/test/data/images/png/tbbn1g04.png
   trunk/test/data/images/png/tbbn2c16.png
   trunk/test/data/images/png/tbbn3p08.png
   trunk/test/data/images/png/tbgn2c16.png
   trunk/test/data/images/png/tbgn3p08.png
   trunk/test/data/images/png/tbrn2c08.png
   trunk/test/data/images/png/tbwn1g16.png
   trunk/test/data/images/png/tbwn3p08.png
   trunk/test/data/images/png/tbyn3p08.png
   trunk/test/data/images/png/tp0n1g08.png
   trunk/test/data/images/png/tp0n2c08.png
   trunk/test/data/images/png/tp0n3p08.png
   trunk/test/data/images/png/tp1n3p08.png
   trunk/test/data/images/png/x00n0g01.png
   trunk/test/data/images/png/xcrn0g04.png
   trunk/test/data/images/png/xlfn0g04.png
   trunk/test/data/images/png/z00n2c08.png
   trunk/test/data/images/png/z03n2c08.png
   trunk/test/data/images/png/z06n2c08.png
   trunk/test/data/images/png/z09n2c08.png
Log:
Test data now contains a smaller sample of encoded data structures
packaged in Flash files. This should limit the size of the 
distribution.

Added: trunk/test/data/images/bmp/g01bg.bmp
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/bmp/g01bg.bmp
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/bmp/g01bw.bmp
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/bmp/g01bw.bmp
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/bmp/g01p1.bmp
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/bmp/g01p1.bmp
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/bmp/g01wb.bmp
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/bmp/g01wb.bmp
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/bmp/g04.bmp
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/bmp/g04.bmp
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/bmp/g04p4.bmp
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/bmp/g04p4.bmp
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/bmp/g04rle.bmp
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/bmp/g04rle.bmp
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/bmp/g08.bmp
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/bmp/g08.bmp
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/bmp/g08offs.bmp
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/bmp/g08offs.bmp
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/bmp/g08os2.bmp
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/bmp/g08os2.bmp
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/bmp/g08p256.bmp
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/bmp/g08p256.bmp
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/bmp/g08p64.bmp
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/bmp/g08p64.bmp
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/bmp/g08pi256.bmp
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/bmp/g08pi256.bmp
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/bmp/g08pi64.bmp
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/bmp/g08pi64.bmp
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/bmp/g08res11.bmp
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/bmp/g08res11.bmp
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/bmp/g08res21.bmp
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/bmp/g08res21.bmp
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/bmp/g08res22.bmp
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/bmp/g08res22.bmp
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/bmp/g08rle.bmp
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/bmp/g08rle.bmp
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/bmp/g08s0.bmp
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/bmp/g08s0.bmp
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/bmp/g08w124.bmp
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/bmp/g08w124.bmp
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/bmp/g08w125.bmp
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/bmp/g08w125.bmp
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/bmp/g08w126.bmp
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/bmp/g08w126.bmp
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/bmp/g16bf555.bmp
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/bmp/g16bf555.bmp
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/bmp/g16bf565.bmp
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/bmp/g16bf565.bmp
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/bmp/g16def555.bmp
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/bmp/g16def555.bmp
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/bmp/g24.bmp
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/bmp/g24.bmp
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/bmp/g32bf.bmp
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/bmp/g32bf.bmp
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/bmp/g32def.bmp
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/bmp/g32def.bmp
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/bmp/readme.txt
===================================================================
--- trunk/test/data/images/bmp/readme.txt	2006-06-29 14:48:57 UTC (rev 194)
+++ trunk/test/data/images/bmp/readme.txt	2006-06-29 15:08:23 UTC (rev 195)
@@ -0,0 +1,38 @@
+BMP Suite - sample BMP image files
+By Jason Summers <jason1 at pobox.com>
+
+Version: 2001.04.27
+
+For more information: http://pobox.com/~jason1/bmpsuite/
+
+Contents
+--------
+
+g01bw.bmp
+g01wb.bmp
+g01bg.bmp
+g01p1.bmp
+g04.bmp
+g04p4.bmp
+g08.bmp
+g08offs.bmp
+g08os2.bmp
+g08w126.bmp
+g08w125.bmp
+g08w124.bmp
+g08p256.bmp
+g08pi256.bmp
+g08pi64.bmp
+g08res22.bmp
+g08res21.bmp
+g08res11.bmp
+g08p64.bmp
+g08s0.bmp
+g16def555.bmp
+g16bf555.bmp
+g16bf565.bmp
+g024.bmp
+g32def.bmp
+g32bf.bmp
+
+-- end --

Added: trunk/test/data/images/jpg/2002-03-02_13-14-23.jpg
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/jpg/2002-03-02_13-14-23.jpg
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/jpg/2002-03-02_16-25-28.jpg
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/jpg/2002-03-02_16-25-28.jpg
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/jpg/2002-05-03_16-19-17.jpg
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/jpg/2002-05-03_16-19-17.jpg
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/jpg/2002-08-05_17-23-44.jpg
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/jpg/2002-08-05_17-23-44.jpg
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/jpg/2002-08-07_17-28-10.jpg
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/jpg/2002-08-07_17-28-10.jpg
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/jpg/2002-08-08_18-24-40.jpg
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/jpg/2002-08-08_18-24-40.jpg
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/jpg/2002-11-29_10-34-11.jpg
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/jpg/2002-11-29_10-34-11.jpg
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/jpg/2002-11-29_10-57-12.jpg
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/jpg/2002-11-29_10-57-12.jpg
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/jpg/2002-11-29_12-37-09.jpg
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/jpg/2002-11-29_12-37-09.jpg
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/jpg/2002-11-29_14-01-28.jpg
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/jpg/2002-11-29_14-01-28.jpg
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/jpg/2003-04-13_08-52-45.jpg
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/jpg/2003-04-13_08-52-45.jpg
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/jpg/2003-04-13_15-59-26.jpg
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/jpg/2003-04-13_15-59-26.jpg
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/jpg/2003-04-25_16-01-18.jpg
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/jpg/2003-04-25_16-01-18.jpg
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/jpg/2003-04-25_16-51-09.jpg
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/jpg/2003-04-25_16-51-09.jpg
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/jpg/2003-05-01_14-45-29.jpg
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/jpg/2003-05-01_14-45-29.jpg
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/jpg/2003-05-01_14-47-00.jpg
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/jpg/2003-05-01_14-47-00.jpg
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/jpg/2003-05-06_07-59-45.jpg
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/jpg/2003-05-06_07-59-45.jpg
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/jpg/2003-05-06_09-47-21.jpg
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/jpg/2003-05-06_09-47-21.jpg
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/jpg/2003-05-06_15-42-47.jpg
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/jpg/2003-05-06_15-42-47.jpg
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/jpg/2003-05-09_17-03-15.jpg
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/jpg/2003-05-09_17-03-15.jpg
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/jpg/2003-05-18_10-14-11.jpg
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/jpg/2003-05-18_10-14-11.jpg
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/jpg/2003-05-18_16-13-05.jpg
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/jpg/2003-05-18_16-13-05.jpg
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/jpg/2003-05-21_15-23-40.jpg
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/jpg/2003-05-21_15-23-40.jpg
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/jpg/2003-05-23_14-55-26.jpg
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/jpg/2003-05-23_14-55-26.jpg
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/jpg/2003-05-30_14-44-15.jpg
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/jpg/2003-05-30_14-44-15.jpg
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/jpg/2003-08-12_16-29-12.jpg
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/jpg/2003-08-12_16-29-12.jpg
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/jpg/2003-08-13_16-59-47.jpg
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/jpg/2003-08-13_16-59-47.jpg
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/jpg/2003-08-18_17-51-23.jpg
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/jpg/2003-08-18_17-51-23.jpg
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/jpg/2003-08-22_16-24-27.jpg
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/jpg/2003-08-22_16-24-27.jpg
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/jpg/2003-08-25_15-31-38.jpg
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/jpg/2003-08-25_15-31-38.jpg
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/jpg/2003-08-26_17-45-08.jpg
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/jpg/2003-08-26_17-45-08.jpg
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/jpg/2003-08-27_16-36-47.jpg
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/jpg/2003-08-27_16-36-47.jpg
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/basi0g01.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/basi0g01.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/basi0g02.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/basi0g02.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/basi0g04.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/basi0g04.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/basi0g08.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/basi0g08.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/basi0g16.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/basi0g16.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/basi2c08.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/basi2c08.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/basi2c16.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/basi2c16.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/basi3p01.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/basi3p01.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/basi3p02.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/basi3p02.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/basi3p04.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/basi3p04.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/basi3p08.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/basi3p08.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/basi4a08.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/basi4a08.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/basi4a16.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/basi4a16.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/basi6a08.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/basi6a08.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/basi6a16.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/basi6a16.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/basn0g01.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/basn0g01.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/basn0g02.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/basn0g02.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/basn0g04.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/basn0g04.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/basn0g08.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/basn0g08.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/basn0g16.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/basn0g16.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/basn2c08.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/basn2c08.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/basn2c16.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/basn2c16.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/basn3p01.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/basn3p01.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/basn3p02.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/basn3p02.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/basn3p04.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/basn3p04.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/basn3p08.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/basn3p08.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/basn4a08.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/basn4a08.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/basn4a16.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/basn4a16.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/basn6a08.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/basn6a08.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/basn6a16.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/basn6a16.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/bgai4a08.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/bgai4a08.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/bgai4a16.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/bgai4a16.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/bgan6a08.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/bgan6a08.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/bgan6a16.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/bgan6a16.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/bgbn4a08.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/bgbn4a08.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/bggn4a16.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/bggn4a16.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/bgwn6a08.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/bgwn6a08.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/bgyn6a16.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/bgyn6a16.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/ccwn2c08.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/ccwn2c08.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/ccwn3p08.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/ccwn3p08.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/cdfn2c08.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/cdfn2c08.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/cdhn2c08.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/cdhn2c08.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/cdsn2c08.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/cdsn2c08.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/cdun2c08.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/cdun2c08.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/ch1n3p04.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/ch1n3p04.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/ch2n3p08.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/ch2n3p08.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/cm0n0g04.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/cm0n0g04.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/cm7n0g04.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/cm7n0g04.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/cm9n0g04.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/cm9n0g04.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/cs3n2c16.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/cs3n2c16.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/cs3n3p08.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/cs3n3p08.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/cs5n2c08.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/cs5n2c08.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/cs5n3p08.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/cs5n3p08.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/cs8n2c08.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/cs8n2c08.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/cs8n3p08.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/cs8n3p08.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/ct0n0g04.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/ct0n0g04.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/ct1n0g04.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/ct1n0g04.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/ctzn0g04.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/ctzn0g04.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/f00n0g08.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/f00n0g08.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/f00n2c08.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/f00n2c08.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/f01n0g08.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/f01n0g08.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/f01n2c08.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/f01n2c08.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/f02n0g08.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/f02n0g08.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/f02n2c08.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/f02n2c08.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/f03n0g08.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/f03n0g08.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/f03n2c08.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/f03n2c08.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/f04n0g08.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/f04n0g08.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/f04n2c08.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/f04n2c08.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/g03n0g16.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/g03n0g16.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/g03n2c08.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/g03n2c08.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/g03n3p04.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/g03n3p04.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/g04n0g16.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/g04n0g16.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/g04n2c08.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/g04n2c08.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/g04n3p04.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/g04n3p04.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/g05n0g16.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/g05n0g16.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/g05n2c08.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/g05n2c08.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/g05n3p04.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/g05n3p04.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/g07n0g16.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/g07n0g16.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/g07n2c08.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/g07n2c08.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/g07n3p04.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/g07n3p04.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/g10n0g16.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/g10n0g16.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/g10n2c08.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/g10n2c08.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/g10n3p04.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/g10n3p04.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/g25n0g16.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/g25n0g16.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/g25n2c08.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/g25n2c08.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/g25n3p04.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/g25n3p04.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/oi1n0g16.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/oi1n0g16.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/oi1n2c16.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/oi1n2c16.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/oi2n0g16.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/oi2n0g16.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/oi2n2c16.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/oi2n2c16.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/oi4n0g16.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/oi4n0g16.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/oi4n2c16.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/oi4n2c16.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/oi9n0g16.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/oi9n0g16.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/oi9n2c16.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/oi9n2c16.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/pngsuite.doc
===================================================================
--- trunk/test/data/images/png/pngsuite.doc	2006-06-29 14:48:57 UTC (rev 194)
+++ trunk/test/data/images/png/pngsuite.doc	2006-06-29 15:08:23 UTC (rev 195)
@@ -0,0 +1,520 @@
+        PNGSUITE
+----------------
+
+        testset for PNG-(de)coders
+        created by Willem van Schaik
+------------------------------------
+
+This is a collection of graphics images created to test the png applications
+like viewers, converters and editors. All (as far as that is possible)
+formats supported by the PNG standard are represented.
+
+
+1.      INTRODUCTION
+--------------------
+
+1.1     PNG capabilities
+------------------------
+
+Supported color-types are:
+
+        -   grayscale
+        -   grayscale + alpha-channel
+        -   color palettes
+        -   rgb
+        -   rgb + alpha-channel
+
+Allowed bitdepths are depending on the color-type, but are in the range
+of 1-bit (grayscale, which is b&w) upto 16-bits.
+
+Special features are:
+
+        -   interlacing (Adam-7)
+        -   gamma-support
+        -   transparency (a poor-man's alpha solution)
+
+
+1.2     File naming
+-------------------
+
+Where possible, the testfiles are 32x32 bits icons. This results in a still
+reasonable size of the suite even with a large number of tests. The name
+of each test-file reflects thetype in the following way:
+
+        g04i2c08.png
+        || |||+---- bit-depth
+        || ||+----- color-type (descriptive)
+        || |+------ color-type (numerical)
+        || +------- interlaced or non-interlaced
+        |+--------- parameter of test (in this case gamma-value)
+        +---------- test feature (in this case gamma)
+
+
+1.3     PNG formats
+-------------------
+
+color-type:
+        0g          -   grayscale
+        2c          -   rgb color
+        3p          -   paletted
+        4a          -   grayscale + alpha channel
+        6a          -   rgb color + alpha channel
+
+bit-depth:
+        01          -   with color-type 0, 3
+        02          -   with color-type 0, 3
+        04          -   with color-type 0, 3
+        08          -   with color-type 0, 2, 3, 4, 6
+        16          -   with color-type 0, 2, 4, 6
+
+interlacing:
+        n           -   non-interlaced
+        i           -   interlaced
+
+
+2.      THE TESTS
+-----------------
+
+2.1     Sizes
+-------------
+
+These tests are there to check if your software handles pictures well, with
+picture sizes that are not a multiple of 8. This is particularly important
+with Adam-7 type interlacing. In the same way these tests check if pictures
+size 1x1 and similar are ok.
+
+        s01         -   1x1 pixel picture
+        s02         -   2x2 pixel picture
+        s03         -   3x3 pixel picture
+        s04         -   4x4 pixel picture
+        s05         -   5x5 pixel picture
+        s06         -   6x6 pixel picture
+        s07         -   7x7 pixel picture
+        s08         -   8x8 pixel picture
+        s09         -   9x9 pixel picture
+        s32         -   32x32 pixel picture
+        s33         -   33x33 pixel picture
+        s34         -   34x34 pixel picture
+        s35         -   35x35 pixel picture
+        s36         -   36x36 pixel picture
+        s37         -   37x37 pixel picture
+        s38         -   38x38 pixel picture
+        s39         -   39x39 pixel picture
+        s40         -   40x40 pixel picture
+
+
+2.2     Background
+------------------
+
+When the PNG file contains a background chunck, this should be used for
+pictures with alpha-channel or pictures with a transparency chunck. For
+pictures without this background-chunk, but with alpha, this testset
+assumes a black background.
+
+For the images in this test, the left-side should be 100% the background
+color, where moving to the right the color should gradually become the
+image pattern.
+
+        bga         -   alpha + no background
+        bgw         -   alpha + white background
+        bgg         -   alpha + gray background
+        bgb         -   alpha + black background
+        bgy         -   alpha + yellow background
+
+
+2.3     Transparency
+--------------------
+
+Transparency should be used together with a background chunk. To test the
+combination of the two the latter 4 tests are there. How to handle pictures
+with transparancy, but without a background, opinions can differ. Here we
+use black, but especially in the case of paletted images, the normal color
+would maybe even be better.
+
+        tp0         -   not transparent for reference
+        tp1         -   transparent, but no background chunk
+        tbw         -   transparent + white background
+        tbg         -   transparent + gray background
+        tbb         -   transparent + black background
+        tby         -   transparent + yellow background
+
+
+2.4     Gamma
+-------------
+
+To test if your viewer handles gamma-correction, 6 testfiles are available.
+They contain corrected color-ramps and a corresponding gamma-chunk with the
+file-gamma value. These are created in such a way that when the viewer does
+the gamma correction right, all 6 should be displayed identical.
+
+If they are different, probably the gamma correction is omitted. In that
+case, have a look at the two right coloumns in the 6 pictures. The image
+where those two look the same (when looked from far) reflects the gamma of
+your system. However, because of the limited size of the image, you should
+do more elaborate tests to determine your display gamma.
+
+        g03         -   file-gamma = 0.35, for display with gamma = 2.8
+        g04         -   file-gamma = 0.45, for display with gamma = 2.2 (PC)
+        g05         -   file-gamma = 0.55, for display with gamma = 1.8 (Mac)
+        g07         -   file-gamma = 0.70, for display with gamma = 1.4
+        g10         -   file-gamma = 1.00, for display with gamma = 1.0 (NeXT)
+        g25         -   file-gamma = 2.50, for display with gamma = 0.4
+
+
+2.5     Filtering
+-----------------
+
+PNG uses file-filtering, for optimal compression. Normally the type is of
+filtering is adjusted to the contents of the picture, but here each file
+has the same picture, with a different filtering.
+
+        f0          -   no filtering
+        f1          -   sub filtering
+        f2          -   up filtering
+        f3          -   average filtering
+        f4          -   paeth filtering
+
+
+2.6     Additional palettes
+---------------------------
+
+Besides the normal use of paletted images, palette chunks can in combination
+with true-color (and other) images also be used to select color lookup-tables
+when the video system is of limited capabilities. The suggested palette chunk
+is specially created for this purpose.
+
+        pp          -   normal palette chunk
+        ps          -   suggested palette chunk
+
+
+2.7     Ancillary chunks (under construction)
+------------------------
+
+To test the correct decoding of ancillary chunks, these test-files contain
+one or more examples of these chunkcs. Depending on the type of chunk, a
+number of typical values are selected to test. Unluckily, the testset can
+not contain all combinations, because that would be an endless set.
+
+The significant bits are used in files with the next higher bit-depth. They
+indicate howmany bits are valid.
+
+        cs3         -   3 significant bits
+        cs5         -   5 significant bits
+        cs8         -   8 significant bits (reference)
+        cs3         -   13 significant bits
+
+For the physical pixel dimensions, the result of each decoding should be
+a sqare picture. The first (cdf) image is an example of flat (horizontal)
+pixels, where the pHYS chunk (x is 1 per unit, y = 4 per unit) must take
+care of the correction. The second is just the other way round. The last
+example uses the unit specifier, for 1000 pixels per meter. This should
+result in a picture of 3.2 cm square.
+
+        cdf         -   physical pixel dimensions, 8x32 flat pixels
+        cdh         -   physical pixel dimensions, 32x8 high pixels
+        cds         -   physical pixel dimensions, 8x8 square pixels
+        cdu         -   physical pixel dimensions, with unit-specifier
+
+        ccw         -   primary chromaticities and white point
+
+        ch1         -   histogram 15 colors
+        ch2         -   histogram 256 colors
+
+        cm7         -   modification time, 01-jan-1970
+        cm9         -   modification time, 31-dec-1999
+        cm0         -   modification time, 01-jan-2000
+
+In the textual chunk, a number of the standard, and some non-standard
+text items are included.
+
+        ct0         -   no textual data
+        ct1         -   with textual data
+        ctz         -   with compressed textual data
+
+
+2.8     Chunk ordering (still under construction)
+----------------------
+
+These testfiles will test the obligatory ordering relations between various
+chunk types (not yet) as well as the number of data chunks used for the image.
+
+        oi1         -   mother image with 1 idat-chunk
+        oi2         -   image with 2 idat-chunks
+        oi4         -   image with 4 unequal sized idat-chunks
+        oi9         -   all idat-chunks of length one
+
+
+2.9     Compression level
+-------------------------
+
+Here you will find a set of images compressed by zlib, ranging from level 0 
+for no compression at maximum speed upto level 9 for maximum compression.
+
+        z00         -   zlib compression level 0 - none
+        z03         -   zlib compression level 3
+        z06         -   zlib compression level 6 - default
+        z09         -   zlib compression level 9 - maximum
+
+
+2.10     Corrupted files (under construction)
+-----------------------
+
+All these files are illegal. When decoding they should generate appropriate
+error-messages.
+
+        x00         -   empty IDAT chunk
+        xcr         -   added cr bytes
+        xlf         -   added lf bytes
+        xc0         -   color type 0
+        xc9         -   color type 9
+        xd0         -   bit-depth 0
+        xd3         -   bit-depth 3
+        xd9         -   bit-depth 99
+        xcs         -   incorrect IDAT checksum
+
+
+3.      TEST FILES
+------------------
+
+For each of the tests listed above, one or more test-files are created. A
+selection is made (for each test) for the color-type and bitdepth to be used
+for the tests. Further for a number of tests, both a non-interlaced as well
+as an interlaced version is available.
+
+
+3.1     Basic format test files (non-interlaced)
+------------------------------------------------
+
+        basn0g01    -   black & white
+        basn0g02    -   2 bit (4 level) grayscale
+        basn0g04    -   4 bit (16 level) grayscale
+        basn0g08    -   8 bit (256 level) grayscale
+        basn0g16    -   16 bit (64k level) grayscale
+        basn2c08    -   3x8 bits rgb color
+        basn2c16    -   3x16 bits rgb color
+        basn3p01    -   1 bit (2 color) paletted
+        basn3p02    -   2 bit (4 color) paletted
+        basn3p04    -   4 bit (16 color) paletted
+        basn3p08    -   8 bit (256 color) paletted
+        basn4a08    -   8 bit grayscale + 8 bit alpha-channel
+        basn4a16    -   16 bit grayscale + 16 bit alpha-channel
+        basn6a08    -   3x8 bits rgb color + 8 bit alpha-channel
+        basn6a16    -   3x16 bits rgb color + 16 bit alpha-channel
+
+
+3.2     Basic format test files (Adam-7 interlaced)
+---------------------------------------------------
+
+        basi0g01    -   black & white
+        basi0g02    -   2 bit (4 level) grayscale
+        basi0g04    -   4 bit (16 level) grayscale
+        basi0g08    -   8 bit (256 level) grayscale
+        basi0g16    -   16 bit (64k level) grayscale
+        basi2c08    -   3x8 bits rgb color
+        basi2c16    -   3x16 bits rgb color
+        basi3p01    -   1 bit (2 color) paletted
+        basi3p02    -   2 bit (4 color) paletted
+        basi3p04    -   4 bit (16 color) paletted
+        basi3p08    -   8 bit (256 color) paletted
+        basi4a08    -   8 bit grayscale + 8 bit alpha-channel
+        basi4a16    -   16 bit grayscale + 16 bit alpha-channel
+        basi6a08    -   3x8 bits rgb color + 8 bit alpha-channel
+        basi6a16    -   3x16 bits rgb color + 16 bit alpha-channel
+
+
+3.3     Sizes test files
+-----------------------
+
+        s01n3p01    -   1x1 paletted file, no interlacing
+        s02n3p01    -   2x2 paletted file, no interlacing
+        s03n3p01    -   3x3 paletted file, no interlacing
+        s04n3p01    -   4x4 paletted file, no interlacing
+        s05n3p02    -   5x5 paletted file, no interlacing
+        s06n3p02    -   6x6 paletted file, no interlacing
+        s07n3p02    -   7x7 paletted file, no interlacing
+        s08n3p02    -   8x8 paletted file, no interlacing
+        s09n3p02    -   9x9 paletted file, no interlacing
+        s32n3p04    -   32x32 paletted file, no interlacing
+        s33n3p04    -   33x33 paletted file, no interlacing
+        s34n3p04    -   34x34 paletted file, no interlacing
+        s35n3p04    -   35x35 paletted file, no interlacing
+        s36n3p04    -   36x36 paletted file, no interlacing
+        s37n3p04    -   37x37 paletted file, no interlacing
+        s38n3p04    -   38x38 paletted file, no interlacing
+        s39n3p04    -   39x39 paletted file, no interlacing
+        s40n3p04    -   40x40 paletted file, no interlacing
+
+        s01i3p01    -   1x1 paletted file, interlaced
+        s02i3p01    -   2x2 paletted file, interlaced
+        s03i3p01    -   3x3 paletted file, interlaced
+        s04i3p01    -   4x4 paletted file, interlaced
+        s05i3p02    -   5x5 paletted file, interlaced
+        s06i3p02    -   6x6 paletted file, interlaced
+        s07i3p02    -   7x7 paletted file, interlaced
+        s08i3p02    -   8x8 paletted file, interlaced
+        s09i3p02    -   9x9 paletted file, interlaced
+        s32i3p04    -   32x32 paletted file, interlaced
+        s33i3p04    -   33x33 paletted file, interlaced
+        s34i3p04    -   34x34 paletted file, interlaced
+        s35i3p04    -   35x35 paletted file, interlaced
+        s36i3p04    -   36x36 paletted file, interlaced
+        s37i3p04    -   37x37 paletted file, interlaced
+        s38i3p04    -   38x38 paletted file, interlaced
+        s39i3p04    -   39x39 paletted file, interlaced
+        s40i3p04    -   40x40 paletted file, interlaced
+
+
+3.4     Background test files (with alpha)
+------------------------------------------
+
+        bgai4a08    -   8 bit grayscale, alpha, no background chunk, interlaced
+        bgai4a16    -   16 bit grayscale, alpha, no background chunk, interlaced
+        bgan6a08    -   3x8 bits rgb color, alpha, no background chunk
+        bgan6a16    -   3x16 bits rgb color, alpha, no background chunk
+
+        bgbn4a08    -   8 bit grayscale, alpha, black background chunk
+        bggn4a16    -   16 bit grayscale, alpha, gray background chunk
+        bgwn6a08    -   3x8 bits rgb color, alpha, white background chunk
+        bgyn6a16    -   3x16 bits rgb color, alpha, yellow background chunk
+
+
+3.5     Transparency (and background) test files
+------------------------------------------------
+
+        tp0n1g08    -   not transparent for reference (logo on gray)
+        tbbn1g04    -   transparent, black background chunk
+        tbwn1g16    -   transparent, white background chunk
+        tp0n2c08    -   not transparent for reference (logo on gray)
+        tbrn2c08    -   transparent, red background chunk
+        tbgn2c16    -   transparent, green background chunk
+        tbbn2c16    -   transparent, blue background chunk
+        tp0n3p08    -   not transparent for reference (logo on gray)
+        tp1n3p08    -   transparent, but no background chunk
+        tbbn3p08    -   transparent, black background chunk
+        tbgn3p08    -   transparent, light-gray background chunk
+        tbwn3p08    -   transparent, white background chunk
+        tbyn3p08    -   transparent, yellow background chunk
+
+
+3.6     Gamma test files
+------------------------
+
+        g03n0g16    -   grayscale, file-gamma = 0.35
+        g04n0g16    -   grayscale, file-gamma = 0.45
+        g05n0g16    -   grayscale, file-gamma = 0.55
+        g07n0g16    -   grayscale, file-gamma = 0.70
+        g10n0g16    -   grayscale, file-gamma = 1.00
+        g25n0g16    -   grayscale, file-gamma = 2.50
+        g03n2c08    -   color, file-gamma = 0.35
+        g04n2c08    -   color, file-gamma = 0.45
+        g05n2c08    -   color, file-gamma = 0.55
+        g07n2c08    -   color, file-gamma = 0.70
+        g10n2c08    -   color, file-gamma = 1.00
+        g25n2c08    -   color, file-gamma = 2.50
+        g03n3p04    -   paletted, file-gamma = 0.35
+        g04n3p04    -   paletted, file-gamma = 0.45
+        g05n3p04    -   paletted, file-gamma = 0.55
+        g07n3p04    -   paletted, file-gamma = 0.70
+        g10n3p04    -   paletted, file-gamma = 1.00
+        g25n3p04    -   paletted, file-gamma = 2.50
+
+
+3.7     Filtering test files
+----------------------------
+
+        f00n0g08    -   grayscale, no interlacing, filter-type 0
+        f01n0g08    -   grayscale, no interlacing, filter-type 1
+        f02n0g08    -   grayscale, no interlacing, filter-type 2
+        f03n0g08    -   grayscale, no interlacing, filter-type 3
+        f04n0g08    -   grayscale, no interlacing, filter-type 4
+        f00n2c08    -   color, no interlacing, filter-type 0
+        f01n2c08    -   color, no interlacing, filter-type 1
+        f02n2c08    -   color, no interlacing, filter-type 2
+        f03n2c08    -   color, no interlacing, filter-type 3
+        f04n2c08    -   color, no interlacing, filter-type 4
+
+
+3.8     Additional palette chunk test files
+-------------------------------------------
+
+        pp0n2c16    -   six-cube palette-chunk in true-color image
+        pp0n6a08    -   six-cube palette-chunk in true-color+alpha image
+        ps1n0g08    -   six-cube suggested palette (1 byte) in grayscale image
+        ps1n2c16    -   six-cube suggested palette (1 byte) in true-color image
+        ps2n0g08    -   six-cube suggested palette (2 bytes) in grayscale image
+        ps2n2c16    -   six-cube suggested palette (2 bytes) in true-color image
+
+
+3.9     Ancillary chunks test files
+-----------------------------------
+
+        cs5n2c08    -   color, 5 significant bits
+        cs8n2c08    -   color, 8 significant bits (reference)
+        cs3n2c16    -   color, 13 significant bits
+        cs3n3p08    -   paletted, 3 significant bits
+        cs5n3p08    -   paletted, 5 significant bits
+        cs8n3p08    -   paletted, 8 significant bits (reference)
+
+        cdfn2c08    -   physical pixel dimensions, 8x32 flat pixels
+        cdhn2c08    -   physical pixel dimensions, 32x8 high pixels
+        cdsn2c08    -   physical pixel dimensions, 8x8 square pixels
+        cdun2c08    -   physical pixel dimensions, 1000 pixels per 1 meter
+
+        ccwn2c08    -   chroma chunk w:0.3127,0.3290 r:0.64,0.33 g:0.30,0.60 b:0.15,0.06
+        ccwn3p08    -   chroma chunk w:0.3127,0.3290 r:0.64,0.33 g:0.30,0.60 b:0.15,0.06
+
+        ch1n3p04    -   histogram 15 colors
+        ch2n3p08    -   histogram 256 colors
+
+        cm7n0g04    -   modification time, 01-jan-1970 00:00:00
+        cm9n0g04    -   modification time, 31-dec-1999 23:59:59
+        cm0n0g04    -   modification time, 01-jan-2000 12:34:56
+
+        ct0n0g04    -   no textual data
+        ct1n0g04    -   with textual data
+        ctzn0g04    -   with compressed textual data
+
+
+
+3.10    Chunk ordering
+----------------------
+
+        oi1n0g16    -   grayscale mother image with 1 idat-chunk
+        oi2n0g16    -   grayscale image with 2 idat-chunks
+        oi4n0g16    -   grayscale image with 4 unequal sized idat-chunks
+        oi9n0g16    -   grayscale image with all idat-chunks length one
+        oi1n2c16    -   color mother image with 1 idat-chunk
+        oi2n2c16    -   color image with 2 idat-chunks
+        oi4n2c16    -   color image with 4 unequal sized idat-chunks
+        oi9n2c16    -   color image with all idat-chunks length one
+
+
+
+3.11    Compression level
+-------------------------
+
+        z00n2c08    -   color, no interlacing, compression level 0 (none)
+        z03n2c08    -   color, no interlacing, compression level 3
+        z06n2c08    -   color, no interlacing, compression level 6 (default)
+        z09n2c08    -   color, no interlacing, compression level 9 (maximum)
+
+
+
+3.12     Currupted files
+-----------------------
+
+        x00n0g01    -   empty 0x0 grayscale file
+        xcrn0g04    -   added cr bytes
+        xlfn0g04    -   added lf bytes
+        xc0n0c08    -   color type 0
+        xc9n0c08    -   color type 9
+        xd0n2c00    -   bit-depth 0
+        xd3n2c03    -   bit-depth 3
+        xd9n2c99    -   bit-depth 99
+        xcsn2c08    -   incorrect IDAT checksum
+
+
+--------
+    (c) Willem van Schaik
+        willem at schaik.com
+        Singapore, October 1996

Added: trunk/test/data/images/png/pngsuite_logo.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/pngsuite_logo.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/pp0n2c16.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/pp0n2c16.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/pp0n6a08.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/pp0n6a08.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/ps1n0g08.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/ps1n0g08.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/ps1n2c16.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/ps1n2c16.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/ps2n0g08.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/ps2n0g08.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/ps2n2c16.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/ps2n2c16.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/s01i3p01.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/s01i3p01.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/s01n3p01.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/s01n3p01.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/s02i3p01.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/s02i3p01.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/s02n3p01.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/s02n3p01.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/s03i3p01.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/s03i3p01.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/s03n3p01.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/s03n3p01.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/s04i3p01.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/s04i3p01.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/s04n3p01.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/s04n3p01.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/s05i3p02.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/s05i3p02.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/s05n3p02.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/s05n3p02.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/s06i3p02.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/s06i3p02.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/s06n3p02.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/s06n3p02.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/s07i3p02.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/s07i3p02.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/s07n3p02.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/s07n3p02.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/s08i3p02.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/s08i3p02.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/s08n3p02.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/s08n3p02.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/s09i3p02.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/s09i3p02.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/s09n3p02.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/s09n3p02.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/s32i3p04.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/s32i3p04.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/s32n3p04.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/s32n3p04.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/s33i3p04.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/s33i3p04.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/s33n3p04.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/s33n3p04.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/s34i3p04.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/s34i3p04.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/s34n3p04.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/s34n3p04.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/s35i3p04.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/s35i3p04.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/s35n3p04.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/s35n3p04.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/s36i3p04.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/s36i3p04.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/s36n3p04.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/s36n3p04.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/s37i3p04.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/s37i3p04.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/s37n3p04.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/s37n3p04.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/s38i3p04.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/s38i3p04.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/s38n3p04.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/s38n3p04.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/s39i3p04.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/s39i3p04.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/s39n3p04.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/s39n3p04.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/s40i3p04.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/s40i3p04.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/s40n3p04.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/s40n3p04.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/tbbn1g04.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/tbbn1g04.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/tbbn2c16.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/tbbn2c16.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/tbbn3p08.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/tbbn3p08.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/tbgn2c16.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/tbgn2c16.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/tbgn3p08.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/tbgn3p08.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/tbrn2c08.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/tbrn2c08.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/tbwn1g16.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/tbwn1g16.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/tbwn3p08.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/tbwn3p08.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/tbyn3p08.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/tbyn3p08.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/tp0n1g08.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/tp0n1g08.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/tp0n2c08.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/tp0n2c08.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/tp0n3p08.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/tp0n3p08.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/tp1n3p08.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/tp1n3p08.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/x00n0g01.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/x00n0g01.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/xcrn0g04.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/xcrn0g04.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/xlfn0g04.png
===================================================================
--- trunk/test/data/images/png/xlfn0g04.png	2006-06-29 14:48:57 UTC (rev 194)
+++ trunk/test/data/images/png/xlfn0g04.png	2006-06-29 15:08:23 UTC (rev 195)
@@ -0,0 +1,13 @@
+?PNG
+
+
+
+
+
+IHDR  ???)?IDATx?]??
+?0P*@??#?
+
+#T??10lPF`??F=???IQ?*??u??`%qk?
+H????????m???????	??=,?f?OK
+
+???t??(???????F;?P????{xp?]9?/p?*$(?*?y??????????@?C? 	c?q??N?U#?)11?.??r??f?0???gh(??t???E???kIEND?B`?
\ No newline at end of file

Added: trunk/test/data/images/png/z00n2c08.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/z00n2c08.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/z03n2c08.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/z03n2c08.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/z06n2c08.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/z06n2c08.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/test/data/images/png/z09n2c08.png
===================================================================
(Binary files differ)


Property changes on: trunk/test/data/images/png/z09n2c08.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream



From smackay at berlios.de  Thu Jun 29 17:22:42 2006
From: smackay at berlios.de (smackay at berlios.de)
Date: Thu, 29 Jun 2006 17:22:42 +0200
Subject: [Transform-svn] r196 - trunk/doc
Message-ID: <200606291522.k5TFMg7S031791@sheep.berlios.de>

Author: smackay
Date: 2006-06-29 17:22:38 +0200 (Thu, 29 Jun 2006)
New Revision: 196

Modified:
   trunk/doc/CHANGES.txt
   trunk/doc/LICENCE.txt
   trunk/doc/README.txt
Log:
Updated to reflect changes in test data.

Modified: trunk/doc/CHANGES.txt
===================================================================
--- trunk/doc/CHANGES.txt	2006-06-29 15:08:23 UTC (rev 195)
+++ trunk/doc/CHANGES.txt	2006-06-29 15:22:38 UTC (rev 196)
@@ -1,7 +1,8 @@
 2006-06-29 - smackay at flagstonesoftware.com
 
-    * Moved the files used for testing out of the project. They will be added
-      to a separate package to reduce the download size.
+    * Restructured the files used to test the classes. The Flash files now
+      contain a sample of the encoded data structures for a given class. This
+      limits the size of the files which still providing useful test coverage.
 
 2006-06-28 - smackay at flagstonesoftware.com
 

Modified: trunk/doc/LICENCE.txt
===================================================================
--- trunk/doc/LICENCE.txt	2006-06-29 15:08:23 UTC (rev 195)
+++ trunk/doc/LICENCE.txt	2006-06-29 15:22:38 UTC (rev 196)
@@ -1,7 +1,7 @@
 /*
- * All the files in this library, except those in the src/transform/contrib and
- * lib directories, are  covered under the terms of the Berkeley Software 
- * Distribution (BSD) License:
+ * All the files in this library, except those in the src/transform/contrib, 
+ * test/data and lib directories, are  covered under the terms of the Berkeley 
+ * Software Distribution (BSD) License:
  *
  * Copyright (c) 2001-2006 Flagstone Software Ltd. All rights reserved.
  *

Modified: trunk/doc/README.txt
===================================================================
--- trunk/doc/README.txt	2006-06-29 15:08:23 UTC (rev 195)
+++ trunk/doc/README.txt	2006-06-29 15:22:38 UTC (rev 196)
@@ -94,18 +94,52 @@
   Using Files For Testing
 ---------------------------
 The directory test/data is designed to hold sets of files that can be used to
-test the classes in the framework, particularly the FSMovie class.
+test the classes in the framework. The files augment the test patterns in the
+unit tests. This is particularly important for more complex classes such as 
+images, fonts and sounds where the volume and/or variation in data can be 
+significant.
 
-The files augment the unit test data to ensure that real-world files, 
-particularly those generatd by third-party applications, can be decoded and 
-encoded correctly.
+The directories are organized according to the type of file that is used in 
+testing: 
 
-In order to limit the size of the package the test files are available as a 
-separate download from Flagstone's web site. Downloading the test data is 
-optional as an increasing number of a test classes and suites are being added 
-to the framework that contain limited sets of binary data as test patterns for 
-unit testing.
+test
+  |
+  +- data
+	   |
+	   +- classes
+	   |    |
+	   |    +- swf4
+	   |    +- swf5
+	   |    +- swf6
+	   |    +- swf7
+	   |
+	   +- fonts
+	   |    |
+	   |    + vera
+	   |    ...
+	   |
+	   +- images
+	   |    |
+	   |    +- bmp
+	   |    +- jpg
+	   |    +- png
+	   |
+	   +- sounds (to be added)
+	        |
+	        + mp3
+	        + wav
+        
+        
+The classes directory contain sample Flash files with a representative selection
+of encoded data structures for a particular class. These files were extracted
+from 'real-world' Flash files and so provide a useful sanity check for Flash 
+files that will be processed with the Transform framework.
 
+These files have been assembled from a number of different sources. Different 
+sets of files such as fonts and images are subject to specific terms and 
+conditions however all can be distributed by Flagstone as part of this package.
+Details of the terms and conditions are included in each directory.
+
 -----------------------
   Using the Framework
 -----------------------



From smackay at berlios.de  Thu Jun 29 17:53:42 2006
From: smackay at berlios.de (smackay at berlios.de)
Date: Thu, 29 Jun 2006 17:53:42 +0200
Subject: [Transform-svn] r197 - trunk/doc/releases
Message-ID: <200606291553.k5TFrgp8002373@sheep.berlios.de>

Author: smackay
Date: 2006-06-29 17:53:38 +0200 (Thu, 29 Jun 2006)
New Revision: 197

Modified:
   trunk/doc/releases/transform-2.1.3.txt
Log:
Updated.

Modified: trunk/doc/releases/transform-2.1.3.txt
===================================================================
--- trunk/doc/releases/transform-2.1.3.txt	2006-06-29 15:22:38 UTC (rev 196)
+++ trunk/doc/releases/transform-2.1.3.txt	2006-06-29 15:53:38 UTC (rev 197)
@@ -17,6 +17,7 @@
 	
 Testing Changes:
     Added test classes for FSProtect, FSShowFrame and FSSetBackgroundColor.
+    Test images, fonts and Flash files are now included in the release.
 	
 Package Changes     
     The TestNG libraries are now included in the release.     
@@ -110,6 +111,17 @@
 scripts to run the unit tests for each of the classes was added to the 
 test/suites directory.
 
+2. Test images, fonts and Flash files are now included in the release.
+
+Files for testing the classes in Transform that process images and fonts are 
+now included in the distribution. All the files are available under licences
+that permit redistribution.
+
+In addition a set of Flash files are included. Each file contains encoded data 
+structures for one class in the com.flagstone.transform package allowing the 
+encoding and decoding of objects to be verified using files generated by third-
+party tools.
+
 -------------------
   Package Changes  
 -------------------



From smackay at berlios.de  Fri Jun 30 13:24:24 2006
From: smackay at berlios.de (smackay at berlios.de)
Date: Fri, 30 Jun 2006 13:24:24 +0200
Subject: [Transform-svn] r198 - trunk/src/com/flagstone/transform
Message-ID: <200606301124.k5UBOOkN002243@sheep.berlios.de>

Author: smackay
Date: 2006-06-30 13:24:17 +0200 (Fri, 30 Jun 2006)
New Revision: 198

Modified:
   trunk/src/com/flagstone/transform/FSButtonEvent.java
   trunk/src/com/flagstone/transform/FSClipEvent.java
   trunk/src/com/flagstone/transform/FSDefineButton.java
   trunk/src/com/flagstone/transform/FSDoAction.java
   trunk/src/com/flagstone/transform/FSInitialize.java
Log:
Aded getEncodedActions method to allow the binary encoded actions 
to be retrieved from an object.

Modified: trunk/src/com/flagstone/transform/FSButtonEvent.java
===================================================================
--- trunk/src/com/flagstone/transform/FSButtonEvent.java	2006-06-29 15:53:38 UTC (rev 197)
+++ trunk/src/com/flagstone/transform/FSButtonEvent.java	2006-06-30 11:24:17 UTC (rev 198)
@@ -285,6 +285,16 @@
         return actions;
     }
 
+    /** 
+     * Get the array of encoded actions that are executed when the frame is displayed.
+     *
+     * @return the array of action objects or null if the actions have been
+     * decoded.
+     */
+    public byte[] getEncodedActions() 
+    { 
+        return encodedActions;
+    }
     /** Sets the event code that this FSButtonEvent defines actions for.
 
         @param aNumber the event code.

Modified: trunk/src/com/flagstone/transform/FSClipEvent.java
===================================================================
--- trunk/src/com/flagstone/transform/FSClipEvent.java	2006-06-29 15:53:38 UTC (rev 197)
+++ trunk/src/com/flagstone/transform/FSClipEvent.java	2006-06-30 11:24:17 UTC (rev 198)
@@ -385,6 +385,16 @@
     }
 
     /** 
+     * Get the array of encoded actions that are executed when the frame is displayed.
+     *
+     * @return the array of action objects or null if the actions have been
+     * decoded.
+     */
+    public byte[] getEncodedActions() 
+    { 
+        return encodedActions;
+    }
+    /** 
      * Set the array of encoded actions generated by the classes in the Translate
      * framework. If the object already contains an array of actions then they 
      * will be deleted.

Modified: trunk/src/com/flagstone/transform/FSDefineButton.java
===================================================================
--- trunk/src/com/flagstone/transform/FSDefineButton.java	2006-06-29 15:53:38 UTC (rev 197)
+++ trunk/src/com/flagstone/transform/FSDefineButton.java	2006-06-30 11:24:17 UTC (rev 198)
@@ -276,6 +276,16 @@
     }
 
     /** 
+     * Get the array of encoded actions that are executed when the frame is displayed.
+     *
+     * @return the array of action objects or null if the actions have been
+     * decoded.
+     */
+    public byte[] getEncodedActions() 
+    { 
+        return encodedActions;
+    }
+    /** 
      * Set the array of encoded actions that will be executed when the button is 
      * clicked and released. The encoded actions are typically generated by the 
      * classes in the Translate framework. If the object already contains an 

Modified: trunk/src/com/flagstone/transform/FSDoAction.java
===================================================================
--- trunk/src/com/flagstone/transform/FSDoAction.java	2006-06-29 15:53:38 UTC (rev 197)
+++ trunk/src/com/flagstone/transform/FSDoAction.java	2006-06-30 11:24:17 UTC (rev 198)
@@ -180,6 +180,16 @@
     }
 
     /** 
+     * Get the array of encoded actions that are executed when the frame is displayed.
+     *
+     * @return the array of action objects or null if the actions have been
+     * decoded.
+     */
+    public byte[] getEncodedActions() 
+    { 
+        return encodedActions;
+    }
+    /** 
      * Set the array of encoded actions generated by the classes in the Translate
      * framework. If the object already contains an array of actions then they 
      * will be deleted.

Modified: trunk/src/com/flagstone/transform/FSInitialize.java
===================================================================
--- trunk/src/com/flagstone/transform/FSInitialize.java	2006-06-29 15:53:38 UTC (rev 197)
+++ trunk/src/com/flagstone/transform/FSInitialize.java	2006-06-30 11:24:17 UTC (rev 198)
@@ -211,6 +211,16 @@
     }
 
     /** 
+     * Get the array of encoded actions that are executed when the frame is displayed.
+     *
+     * @return the array of action objects or null if the actions have been
+     * decoded.
+     */
+    public byte[] getEncodedActions() 
+    { 
+        return encodedActions;
+    }
+    /** 
      * Set the array of encoded actions generated by the classes in the Translate
      * framework. If the object already contains an array of actions then they 
      * will be deleted.



From smackay at berlios.de  Fri Jun 30 13:29:52 2006
From: smackay at berlios.de (smackay at berlios.de)
Date: Fri, 30 Jun 2006 13:29:52 +0200
Subject: [Transform-svn] r199 - in trunk/src/com/flagstone/transform: . util
Message-ID: <200606301129.k5UBTq5Z004871@sheep.berlios.de>

Author: smackay
Date: 2006-06-30 13:27:55 +0200 (Fri, 30 Jun 2006)
New Revision: 199

Modified:
   trunk/src/com/flagstone/transform/FSAction.java
   trunk/src/com/flagstone/transform/FSBitmapFill.java
   trunk/src/com/flagstone/transform/FSBounds.java
   trunk/src/com/flagstone/transform/FSButton.java
   trunk/src/com/flagstone/transform/FSButtonColorTransform.java
   trunk/src/com/flagstone/transform/FSButtonEvent.java
   trunk/src/com/flagstone/transform/FSButtonSound.java
   trunk/src/com/flagstone/transform/FSCall.java
   trunk/src/com/flagstone/transform/FSCharacter.java
   trunk/src/com/flagstone/transform/FSClipEvent.java
   trunk/src/com/flagstone/transform/FSCoder.java
   trunk/src/com/flagstone/transform/FSColor.java
   trunk/src/com/flagstone/transform/FSColorTable.java
   trunk/src/com/flagstone/transform/FSColorTransform.java
   trunk/src/com/flagstone/transform/FSCoordTransform.java
   trunk/src/com/flagstone/transform/FSCurve.java
   trunk/src/com/flagstone/transform/FSDefineButton.java
   trunk/src/com/flagstone/transform/FSDefineButton2.java
   trunk/src/com/flagstone/transform/FSDefineFont.java
   trunk/src/com/flagstone/transform/FSDefineFont2.java
   trunk/src/com/flagstone/transform/FSDefineImage.java
   trunk/src/com/flagstone/transform/FSDefineImage2.java
   trunk/src/com/flagstone/transform/FSDefineJPEGImage.java
   trunk/src/com/flagstone/transform/FSDefineJPEGImage2.java
   trunk/src/com/flagstone/transform/FSDefineJPEGImage3.java
   trunk/src/com/flagstone/transform/FSDefineMorphShape.java
   trunk/src/com/flagstone/transform/FSDefineMovieClip.java
   trunk/src/com/flagstone/transform/FSDefineShape.java
   trunk/src/com/flagstone/transform/FSDefineShape2.java
   trunk/src/com/flagstone/transform/FSDefineShape3.java
   trunk/src/com/flagstone/transform/FSDefineSound.java
   trunk/src/com/flagstone/transform/FSDefineText.java
   trunk/src/com/flagstone/transform/FSDefineText2.java
   trunk/src/com/flagstone/transform/FSDefineTextField.java
   trunk/src/com/flagstone/transform/FSDefineVideo.java
   trunk/src/com/flagstone/transform/FSDoAction.java
   trunk/src/com/flagstone/transform/FSEnableDebugger.java
   trunk/src/com/flagstone/transform/FSEnableDebugger2.java
   trunk/src/com/flagstone/transform/FSEnvelope.java
   trunk/src/com/flagstone/transform/FSExceptionHandler.java
   trunk/src/com/flagstone/transform/FSExport.java
   trunk/src/com/flagstone/transform/FSFontInfo.java
   trunk/src/com/flagstone/transform/FSFontInfo2.java
   trunk/src/com/flagstone/transform/FSFrameLabel.java
   trunk/src/com/flagstone/transform/FSFree.java
   trunk/src/com/flagstone/transform/FSGetUrl.java
   trunk/src/com/flagstone/transform/FSGetUrl2.java
   trunk/src/com/flagstone/transform/FSGotoFrame.java
   trunk/src/com/flagstone/transform/FSGotoFrame2.java
   trunk/src/com/flagstone/transform/FSGotoLabel.java
   trunk/src/com/flagstone/transform/FSGradient.java
   trunk/src/com/flagstone/transform/FSGradientFill.java
   trunk/src/com/flagstone/transform/FSIf.java
   trunk/src/com/flagstone/transform/FSImport.java
   trunk/src/com/flagstone/transform/FSInitialize.java
   trunk/src/com/flagstone/transform/FSJPEGEncodingTable.java
   trunk/src/com/flagstone/transform/FSJump.java
   trunk/src/com/flagstone/transform/FSKerning.java
   trunk/src/com/flagstone/transform/FSLimitScript.java
   trunk/src/com/flagstone/transform/FSLine.java
   trunk/src/com/flagstone/transform/FSMorphBitmapFill.java
   trunk/src/com/flagstone/transform/FSMorphGradient.java
   trunk/src/com/flagstone/transform/FSMorphGradientFill.java
   trunk/src/com/flagstone/transform/FSMorphSolidFill.java
   trunk/src/com/flagstone/transform/FSMorphSolidLine.java
   trunk/src/com/flagstone/transform/FSMovie.java
   trunk/src/com/flagstone/transform/FSMovieEvent.java
   trunk/src/com/flagstone/transform/FSNewFunction.java
   trunk/src/com/flagstone/transform/FSNewFunction2.java
   trunk/src/com/flagstone/transform/FSNull.java
   trunk/src/com/flagstone/transform/FSPathsArePostscript.java
   trunk/src/com/flagstone/transform/FSPlaceObject.java
   trunk/src/com/flagstone/transform/FSPlaceObject2.java
   trunk/src/com/flagstone/transform/FSPointer.java
   trunk/src/com/flagstone/transform/FSProperty.java
   trunk/src/com/flagstone/transform/FSProtect.java
   trunk/src/com/flagstone/transform/FSPush.java
   trunk/src/com/flagstone/transform/FSQuicktimeMovie.java
   trunk/src/com/flagstone/transform/FSRegisterCopy.java
   trunk/src/com/flagstone/transform/FSRegisterIndex.java
   trunk/src/com/flagstone/transform/FSRegisterVariable.java
   trunk/src/com/flagstone/transform/FSRemoveObject.java
   trunk/src/com/flagstone/transform/FSRemoveObject2.java
   trunk/src/com/flagstone/transform/FSSerialNumber.java
   trunk/src/com/flagstone/transform/FSSetBackgroundColor.java
   trunk/src/com/flagstone/transform/FSSetTarget.java
   trunk/src/com/flagstone/transform/FSShape.java
   trunk/src/com/flagstone/transform/FSShapeStyle.java
   trunk/src/com/flagstone/transform/FSShowFrame.java
   trunk/src/com/flagstone/transform/FSSolidFill.java
   trunk/src/com/flagstone/transform/FSSolidLine.java
   trunk/src/com/flagstone/transform/FSSound.java
   trunk/src/com/flagstone/transform/FSSoundStreamBlock.java
   trunk/src/com/flagstone/transform/FSSoundStreamHead.java
   trunk/src/com/flagstone/transform/FSSoundStreamHead2.java
   trunk/src/com/flagstone/transform/FSStartSound.java
   trunk/src/com/flagstone/transform/FSTabOrder.java
   trunk/src/com/flagstone/transform/FSTable.java
   trunk/src/com/flagstone/transform/FSTableIndex.java
   trunk/src/com/flagstone/transform/FSText.java
   trunk/src/com/flagstone/transform/FSUnknownAction.java
   trunk/src/com/flagstone/transform/FSUnknownObject.java
   trunk/src/com/flagstone/transform/FSVideoFrame.java
   trunk/src/com/flagstone/transform/FSVoid.java
   trunk/src/com/flagstone/transform/FSWaitForFrame.java
   trunk/src/com/flagstone/transform/FSWaitForFrame2.java
   trunk/src/com/flagstone/transform/FSWith.java
   trunk/src/com/flagstone/transform/Transform.java
   trunk/src/com/flagstone/transform/util/FSCodec.java
   trunk/src/com/flagstone/transform/util/FSImageConstructor.java
   trunk/src/com/flagstone/transform/util/FSShapeConstructor.java
   trunk/src/com/flagstone/transform/util/FSSoundConstructor.java
   trunk/src/com/flagstone/transform/util/FSTextConstructor.java
   trunk/src/com/flagstone/transform/util/TransformUtil.java
Log:
Classes are no longer final.

Modified: trunk/src/com/flagstone/transform/FSAction.java
===================================================================
--- trunk/src/com/flagstone/transform/FSAction.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/FSAction.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -549,7 +549,7 @@
 <p>Note: The FSPush class allows more than one value to be pushed onto the stack at a time. In the above examples separate FSPush objects are created to make the code a little more readable.</p>
 
 */  
-public final class FSAction extends FSActionObject
+public class FSAction extends FSActionObject
 {
     /** Type identifying a NextFrame stack-based action. */
     public static final int NextFrame        = 4;

Modified: trunk/src/com/flagstone/transform/FSBitmapFill.java
===================================================================
--- trunk/src/com/flagstone/transform/FSBitmapFill.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/FSBitmapFill.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -111,7 +111,7 @@
 
 <p>The FSBitmapFill class represents the FillStyle structure from the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 1.</p>
  */
-public final class FSBitmapFill extends FSFillStyle
+public class FSBitmapFill extends FSFillStyle
 {
     private int identifier = 0;
     private FSCoordTransform transform = null;

Modified: trunk/src/com/flagstone/transform/FSBounds.java
===================================================================
--- trunk/src/com/flagstone/transform/FSBounds.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/FSBounds.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -100,7 +100,7 @@
 <p>The FSBounds class corresponds to the RECT data type, in the Macromedia Flash 
 (SWF) File Format Specification. It was introduced in Flash 1.</p>
  */
-public final class FSBounds extends FSTransformObject
+public class FSBounds extends FSTransformObject
 {
     private int minX = 0;
     private int minY = 0;

Modified: trunk/src/com/flagstone/transform/FSButton.java
===================================================================
--- trunk/src/com/flagstone/transform/FSButton.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/FSButton.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -85,7 +85,7 @@
 <p>The FSButton class represents the ButtonRecord structure from the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 1.</p>
 
  */  
-public final class FSButton extends FSTransformObject
+public class FSButton extends FSTransformObject
 {
     /** Code for the button in the up state. */
     public static final int Up = 1;

Modified: trunk/src/com/flagstone/transform/FSButtonColorTransform.java
===================================================================
--- trunk/src/com/flagstone/transform/FSButtonColorTransform.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/FSButtonColorTransform.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -61,7 +61,7 @@
 
 <p>The FSButtonColorTransform class represents the DefineButtonCXForm structure from the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 2.</p>
  */
-public final class FSButtonColorTransform extends FSMovieObject
+public class FSButtonColorTransform extends FSMovieObject
 {
     private int identifier = 0;
     private FSColorTransform colorTransform = null;

Modified: trunk/src/com/flagstone/transform/FSButtonEvent.java
===================================================================
--- trunk/src/com/flagstone/transform/FSButtonEvent.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/FSButtonEvent.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -117,7 +117,7 @@
 <h1 class="datasheet">History</h1>
 
 <p>The FSButtonEvent class represents the ButtonCondAction data structure from the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 3.</p> */  
-public final class FSButtonEvent extends FSTransformObject
+public class FSButtonEvent extends FSTransformObject
 {
     /** Defines the button event that occurs when the mouse cursor moves over the active area of a button. */
     public static final int RollOver = 1;

Modified: trunk/src/com/flagstone/transform/FSButtonSound.java
===================================================================
--- trunk/src/com/flagstone/transform/FSButtonSound.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/FSButtonSound.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -84,7 +84,7 @@
 
 <p>The FSButtonSound class represents the DefineButtonSound structure from the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 2.</p>
  */
-public final class FSButtonSound extends FSMovieObject
+public class FSButtonSound extends FSMovieObject
 {
     private int identifier = 0;
     private FSSound[] sound = new FSSound[] {null, null, null, null};

Modified: trunk/src/com/flagstone/transform/FSCall.java
===================================================================
--- trunk/src/com/flagstone/transform/FSCall.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/FSCall.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -66,7 +66,7 @@
 
 <p>The FSCall class represents the ActionCall action of the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 4.</p>
  */  
-public final class FSCall extends FSActionObject
+public class FSCall extends FSActionObject
 {
     private static final FSCall instance = new FSCall();
     

Modified: trunk/src/com/flagstone/transform/FSCharacter.java
===================================================================
--- trunk/src/com/flagstone/transform/FSCharacter.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/FSCharacter.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -101,7 +101,7 @@
 
 <p>The FSCharacter class represents the GlyphEntry structure from Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 1.</p>
  */
-public final class FSCharacter extends FSTransformObject
+public class FSCharacter extends FSTransformObject
 {
     private int glyphIndex = 0;
     private int advance = 0;

Modified: trunk/src/com/flagstone/transform/FSClipEvent.java
===================================================================
--- trunk/src/com/flagstone/transform/FSClipEvent.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/FSClipEvent.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -168,7 +168,7 @@
 The event model was extended in Flash 6 to support the set of events that Buttons 
 respond to. In Flash 7 the Construct event was added.</p>
  */  
-public final class FSClipEvent extends FSTransformObject
+public class FSClipEvent extends FSTransformObject
 {
 /** Code for a load event.*/
     public static final int Load = 1;

Modified: trunk/src/com/flagstone/transform/FSCoder.java
===================================================================
--- trunk/src/com/flagstone/transform/FSCoder.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/FSCoder.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -49,7 +49,7 @@
  * an exception. The eof() method can be used to determine whether the end of 
  * the buffer has been reached.
  */
-public final class FSCoder 
+public class FSCoder 
 {
     /** 
      * Identifies that multibyte words are stored in little-endian format with 

Modified: trunk/src/com/flagstone/transform/FSColor.java
===================================================================
--- trunk/src/com/flagstone/transform/FSColor.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/FSColor.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -85,7 +85,7 @@
 
 <p>FSColor class represents the colour data types, RGB and RGBA in the Macromedia Flash (SWF) File Format Specification. The colour data structure was available was introduced in Flash 1 and transparent colours were introduced in Flash 3.</p>
  */
-public final class FSColor extends FSTransformObject
+public class FSColor extends FSTransformObject
 {
     private int red = 0;
     private int green = 0;

Modified: trunk/src/com/flagstone/transform/FSColorTable.java
===================================================================
--- trunk/src/com/flagstone/transform/FSColorTable.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/FSColorTable.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -288,7 +288,7 @@
 \endhtmlonly
 
 */
-public final class FSColorTable
+public class FSColorTable
 {
     /** Definition of the color, aliceblue from the Netscape color table. */
     public static FSColor aliceblue() { return new FSColor(0xF0, 0xF8, 0xFF, 0xFF); }

Modified: trunk/src/com/flagstone/transform/FSColorTransform.java
===================================================================
--- trunk/src/com/flagstone/transform/FSColorTransform.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/FSColorTransform.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -164,7 +164,7 @@
 
 <p>The FSCoordTransform class represents the CXForm and CXFormWithAlpha data structures from the Macromedia Flash (SWF) File Format Specification. They were introduced in Flash 1 and Flash 3 respectively.</P>
  */
-public final class FSColorTransform extends FSTransformObject
+public class FSColorTransform extends FSTransformObject
 {
     private float multiplyRed = 1.0f;
     private float multiplyGreen = 1.0f;

Modified: trunk/src/com/flagstone/transform/FSCoordTransform.java
===================================================================
--- trunk/src/com/flagstone/transform/FSCoordTransform.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/FSCoordTransform.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -151,7 +151,7 @@
 
 <p>The FSCoordTransform class represents the Matrix data structure from the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 1.</p>
  */
-public final class FSCoordTransform extends FSTransformObject
+public class FSCoordTransform extends FSTransformObject
 {
     private float[][] matrix = new float[][] { 
         {1.0f, 0.0f, 0.0f}, 

Modified: trunk/src/com/flagstone/transform/FSCurve.java
===================================================================
--- trunk/src/com/flagstone/transform/FSCurve.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/FSCurve.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -74,7 +74,7 @@
 <p>The FSCurve class represents the CurvedEdge record from the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 1.</p>
 
  */
-public final class FSCurve extends FSTransformObject
+public class FSCurve extends FSTransformObject
 {
     private int controlX = 0;
     private int controlY = 0;

Modified: trunk/src/com/flagstone/transform/FSDefineButton.java
===================================================================
--- trunk/src/com/flagstone/transform/FSDefineButton.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/FSDefineButton.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -142,7 +142,7 @@
 
 <p>The FSDefineButton class represents the DefineButton structure from the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 1.</p>
  */
-public final class FSDefineButton extends FSDefineObject
+public class FSDefineButton extends FSDefineObject
 {
     private ArrayList buttonRecords = null;
     private ArrayList actions = null;

Modified: trunk/src/com/flagstone/transform/FSDefineButton2.java
===================================================================
--- trunk/src/com/flagstone/transform/FSDefineButton2.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/FSDefineButton2.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -117,7 +117,7 @@
 
 <p>The FSDefineButton2 class represents the DefineButton2 structure from the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 3.</p>
  */  
-public final class FSDefineButton2 extends FSDefineObject
+public class FSDefineButton2 extends FSDefineObject
 {
 /** Defines whether a FSDefineButton2 object is configured as a momentary, push button. */
     public static final int Push = 0;

Modified: trunk/src/com/flagstone/transform/FSDefineFont.java
===================================================================
--- trunk/src/com/flagstone/transform/FSDefineFont.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/FSDefineFont.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -63,7 +63,7 @@
 
 <p>The FSDefineFont class represents the DefineFont structure from the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 1.</p>
  */
-public final class FSDefineFont extends FSDefineObject
+public class FSDefineFont extends FSDefineObject
 {
     private ArrayList shapes = null;
     

Modified: trunk/src/com/flagstone/transform/FSDefineFont2.java
===================================================================
--- trunk/src/com/flagstone/transform/FSDefineFont2.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/FSDefineFont2.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -151,7 +151,7 @@
 spoken languages was added in Flash 6. Support for small point size fonts was 
 added in Flash 7.</p>
  */
-public final class FSDefineFont2 extends FSDefineObject
+public class FSDefineFont2 extends FSDefineObject
 {
     private int encoding = FSText.Unicode;
     private boolean small = false;

Modified: trunk/src/com/flagstone/transform/FSDefineImage.java
===================================================================
--- trunk/src/com/flagstone/transform/FSDefineImage.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/FSDefineImage.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -96,7 +96,7 @@
 
 <p>The FSDefineImage class represents the DefineBitsLossless tag from the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 2.</p>
  */
-public final class FSDefineImage extends FSDefineObject
+public class FSDefineImage extends FSDefineObject
 {
     private int width = 0;
     private int height = 0;

Modified: trunk/src/com/flagstone/transform/FSDefineImage2.java
===================================================================
--- trunk/src/com/flagstone/transform/FSDefineImage2.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/FSDefineImage2.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -86,7 +86,7 @@
 
 <p>The FSDefineImage2 class represents the DefineBitsLossless2 tag from the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 3.</p>
  */  
-public final class FSDefineImage2 extends FSDefineObject
+public class FSDefineImage2 extends FSDefineObject
 {
     private int width = 0;
     private int height = 0;

Modified: trunk/src/com/flagstone/transform/FSDefineJPEGImage.java
===================================================================
--- trunk/src/com/flagstone/transform/FSDefineJPEGImage.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/FSDefineJPEGImage.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -89,7 +89,7 @@
 
 <p>The FSDefineJPEGImage class represents the DefineBits data structure from the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 1.</p>
  */
-public final class FSDefineJPEGImage extends FSDefineObject
+public class FSDefineJPEGImage extends FSDefineObject
 {
     private byte[] image = null;
     

Modified: trunk/src/com/flagstone/transform/FSDefineJPEGImage2.java
===================================================================
--- trunk/src/com/flagstone/transform/FSDefineJPEGImage2.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/FSDefineJPEGImage2.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -101,7 +101,7 @@
 
 <p>The FSDefineJPEGImage2 class represents the DefineBitsJPEG2 tag from the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 2.</p>
  */
-public final class FSDefineJPEGImage2 extends FSDefineObject
+public class FSDefineJPEGImage2 extends FSDefineObject
 {
     private byte[] image = null;
     private byte[] encodingTable = null;

Modified: trunk/src/com/flagstone/transform/FSDefineJPEGImage3.java
===================================================================
--- trunk/src/com/flagstone/transform/FSDefineJPEGImage3.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/FSDefineJPEGImage3.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -124,7 +124,7 @@
 <p>The FSDefineJPEGImage3 class represents the DefineBitsJPEG3 tag from the 
 Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 3.</p>
  */  
-public final class FSDefineJPEGImage3 extends FSDefineObject
+public class FSDefineJPEGImage3 extends FSDefineObject
 {
     private byte[] image = null;
     private byte[] encodingTable = null;

Modified: trunk/src/com/flagstone/transform/FSDefineMorphShape.java
===================================================================
--- trunk/src/com/flagstone/transform/FSDefineMorphShape.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/FSDefineMorphShape.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -155,7 +155,7 @@
 
 <p>The FSDefineMorphShape class represents the DefineMorphShape tag from the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 3.</p>
  */  
-public final class FSDefineMorphShape extends FSDefineObject
+public class FSDefineMorphShape extends FSDefineObject
 {
     private FSBounds startBounds = null;
     private FSBounds endBounds = null;

Modified: trunk/src/com/flagstone/transform/FSDefineMovieClip.java
===================================================================
--- trunk/src/com/flagstone/transform/FSDefineMovieClip.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/FSDefineMovieClip.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -65,7 +65,7 @@
 
 <p>The FSDefineMovieClip class represents the DefineSprite tag from the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 3.</p>
  */  
-public final class FSDefineMovieClip extends FSDefineObject
+public class FSDefineMovieClip extends FSDefineObject
 {
     private ArrayList objects = null;
 

Modified: trunk/src/com/flagstone/transform/FSDefineShape.java
===================================================================
--- trunk/src/com/flagstone/transform/FSDefineShape.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/FSDefineShape.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -116,7 +116,7 @@
 
 <p>The FSDefineShape class represents the DefineShape tag from the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 1.</p>
  */
-public final class FSDefineShape extends FSDefineObject
+public class FSDefineShape extends FSDefineObject
 {
     private FSBounds bounds = null;
     private ArrayList fillStyles = null;

Modified: trunk/src/com/flagstone/transform/FSDefineShape2.java
===================================================================
--- trunk/src/com/flagstone/transform/FSDefineShape2.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/FSDefineShape2.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -117,7 +117,7 @@
 
 <p>The FSDefineShape2 class represents the DefineShape2 data structure from the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 2.</p>
  */
-public final class FSDefineShape2 extends FSDefineObject
+public class FSDefineShape2 extends FSDefineObject
 {
     private FSBounds bounds = null;
     private ArrayList fillStyles = null;

Modified: trunk/src/com/flagstone/transform/FSDefineShape3.java
===================================================================
--- trunk/src/com/flagstone/transform/FSDefineShape3.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/FSDefineShape3.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -110,7 +110,7 @@
 
 <p>The FSDefineShape3 class represents the DefineShape3 tag from the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 3.</p>
  */  
-public final class FSDefineShape3 extends FSDefineObject
+public class FSDefineShape3 extends FSDefineObject
 {
     private FSBounds bounds = null;
     private ArrayList fillStyles = null;

Modified: trunk/src/com/flagstone/transform/FSDefineSound.java
===================================================================
--- trunk/src/com/flagstone/transform/FSDefineSound.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/FSDefineSound.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -117,7 +117,7 @@
 Flash (SWF) File Format Specification. It was introduced in Flash 1. Flash 3 added 
 support for MP3 and the Nellymoser Asao format was added in Flash 6.</p>
  */  
-public final class FSDefineSound extends FSDefineObject
+public class FSDefineSound extends FSDefineObject
 {
     private int format = 0;
     private int playbackRate = 5512;

Modified: trunk/src/com/flagstone/transform/FSDefineText.java
===================================================================
--- trunk/src/com/flagstone/transform/FSDefineText.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/FSDefineText.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -118,7 +118,7 @@
 
 <p>The FSDefineText class represents the DefineText tag from the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 1.</p>
  */
-public final class FSDefineText extends FSDefineObject
+public class FSDefineText extends FSDefineObject
 {
     private FSBounds bounds = null;
     private FSCoordTransform transform = null;

Modified: trunk/src/com/flagstone/transform/FSDefineText2.java
===================================================================
--- trunk/src/com/flagstone/transform/FSDefineText2.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/FSDefineText2.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -117,7 +117,7 @@
 
 <p>The FSDefineText2 class represents the DefineText2 tag from the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 3.</p>
  */  
-public final class FSDefineText2 extends FSDefineObject
+public class FSDefineText2 extends FSDefineObject
 {
     private FSBounds bounds = null;
     private FSCoordTransform transform = null;

Modified: trunk/src/com/flagstone/transform/FSDefineTextField.java
===================================================================
--- trunk/src/com/flagstone/transform/FSDefineTextField.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/FSDefineTextField.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -224,7 +224,7 @@
 
 <p>FSDefineTextField class represents the DefineTextField from the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 4.</p>
  */  
-public final class FSDefineTextField extends FSDefineObject
+public class FSDefineTextField extends FSDefineObject
 {
 /** Key used to identify the wordWrapped attribute. */
     public static final String WordWrapped = "WordWrapped";

Modified: trunk/src/com/flagstone/transform/FSDefineVideo.java
===================================================================
--- trunk/src/com/flagstone/transform/FSDefineVideo.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/FSDefineVideo.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -100,7 +100,7 @@
 File Format Specification. It was introduced in Flash 6. The ScreenVideo format 
 was introduced in Flash 7.</p>
  */  
-public final class FSDefineVideo extends FSDefineObject
+public class FSDefineVideo extends FSDefineObject
 {
     /// The video data was encoded using the Sorenson modified H263 format.
     public static final int H263 = 2;

Modified: trunk/src/com/flagstone/transform/FSDoAction.java
===================================================================
--- trunk/src/com/flagstone/transform/FSDoAction.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/FSDoAction.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -78,7 +78,7 @@
 
 <p>The FSDoAction class represents the DoAction tag from the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 1.</p>
  */
-public final class FSDoAction extends FSMovieObject
+public class FSDoAction extends FSMovieObject
 {
     private ArrayList actions = null;
     private byte[] encodedActions = null;

Modified: trunk/src/com/flagstone/transform/FSEnableDebugger.java
===================================================================
--- trunk/src/com/flagstone/transform/FSEnableDebugger.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/FSEnableDebugger.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -59,7 +59,7 @@
 
 <p>The FSEnableDebugger class represents the EnableDebugger data structure of the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 5.</p>
  */  
-public final class FSEnableDebugger extends FSMovieObject
+public class FSEnableDebugger extends FSMovieObject
 {
     private String password = null;
         

Modified: trunk/src/com/flagstone/transform/FSEnableDebugger2.java
===================================================================
--- trunk/src/com/flagstone/transform/FSEnableDebugger2.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/FSEnableDebugger2.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -56,7 +56,7 @@
 
 <p>The FSEnableDebugger2 class represents the EnableDebugger2 data structure introduced in Flash 6. It replaced EnableDebugger in Flash 5 with a different format to support internal changes in the Flash Player. The functionality was not changed.</p>
  */  
-public final class FSEnableDebugger2 extends FSMovieObject
+public class FSEnableDebugger2 extends FSMovieObject
 {
     private String password = null;
         

Modified: trunk/src/com/flagstone/transform/FSEnvelope.java
===================================================================
--- trunk/src/com/flagstone/transform/FSEnvelope.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/FSEnvelope.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -67,7 +67,7 @@
 
 <p>The FSEnvelope class represents the SoundEnvelope structure from the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 1.</p>
  */
-public final class FSEnvelope extends FSTransformObject
+public class FSEnvelope extends FSTransformObject
 {
     private int mark = 0;
     private int left = 0;

Modified: trunk/src/com/flagstone/transform/FSExceptionHandler.java
===================================================================
--- trunk/src/com/flagstone/transform/FSExceptionHandler.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/FSExceptionHandler.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -84,7 +84,7 @@
 
 <p>The FSExceptionHandler represents the Try action introduced in Flash 7 and is used to directly support the exception handling syntax defined in ActionScript 2.0.</p>
  */  
-public final class FSExceptionHandler extends FSActionObject
+public class FSExceptionHandler extends FSActionObject
 {
     private int register = 0;
     private String variable = null;

Modified: trunk/src/com/flagstone/transform/FSExport.java
===================================================================
--- trunk/src/com/flagstone/transform/FSExport.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/FSExport.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -74,7 +74,7 @@
 
 <p>The FSExport class represents the ExportAssets tag in the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 5.</p>
  */  
-public final class FSExport extends FSMovieObject
+public class FSExport extends FSMovieObject
 {
     private Hashtable objects = new Hashtable();
         

Modified: trunk/src/com/flagstone/transform/FSFontInfo.java
===================================================================
--- trunk/src/com/flagstone/transform/FSFontInfo.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/FSFontInfo.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -111,7 +111,7 @@
 Flash specification. It was introduced in Flash 1. Support for small fonts was 
 added in Flash 7.</p>
  */
-public final class FSFontInfo extends FSMovieObject
+public class FSFontInfo extends FSMovieObject
 {
     private int identifier = 0;
     private String name = "";

Modified: trunk/src/com/flagstone/transform/FSFontInfo2.java
===================================================================
--- trunk/src/com/flagstone/transform/FSFontInfo2.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/FSFontInfo2.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -68,7 +68,7 @@
 <p>The FSFontInfo2 class supports the DefineFontInfo2 data structure introduced 
 in Flash 6. Support for small fonts was added in Flash 7.</p>
  */  
-public final class FSFontInfo2 extends FSMovieObject
+public class FSFontInfo2 extends FSMovieObject
 {
     private int identifier = 0;
     private String name = "";

Modified: trunk/src/com/flagstone/transform/FSFrameLabel.java
===================================================================
--- trunk/src/com/flagstone/transform/FSFrameLabel.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/FSFrameLabel.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -150,7 +150,7 @@
 
 <p>The FSFrameLabel class represents the FrameLabel tag from the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 3. In Flash 6 the label can support named anchors which allows a frame to be specified as the starting point when displaying a Flash movie in a web browser.</p>
  */  
-public final class FSFrameLabel extends FSMovieObject
+public class FSFrameLabel extends FSMovieObject
 {
     private String label = null;
 // Flash 6

Modified: trunk/src/com/flagstone/transform/FSFree.java
===================================================================
--- trunk/src/com/flagstone/transform/FSFree.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/FSFree.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -53,7 +53,7 @@
 
 <p>The FSFree class represents the FreeCharacter tag from the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 3.</p>
  */  
-public final class FSFree extends FSMovieObject
+public class FSFree extends FSMovieObject
 {
     private int identifier = 0;
         

Modified: trunk/src/com/flagstone/transform/FSGetUrl.java
===================================================================
--- trunk/src/com/flagstone/transform/FSGetUrl.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/FSGetUrl.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -126,7 +126,7 @@
 
 <p>The FSGetUrl is a class for representing the ActionGetUrl action of the Macromedia Flash (SWF) File Format Specification. It was introduced in  Flash 1.</p>
  */
-public final class FSGetUrl extends FSActionObject
+public class FSGetUrl extends FSActionObject
 {
     private String url = null;
     private String target = "";

Modified: trunk/src/com/flagstone/transform/FSGetUrl2.java
===================================================================
--- trunk/src/com/flagstone/transform/FSGetUrl2.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/FSGetUrl2.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -146,7 +146,7 @@
 
 <p>The FSGetUrl2 is a class for representing the ActionGetUrl2 action of the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 4.</p>
  */  
-public final class FSGetUrl2 extends FSActionObject
+public class FSGetUrl2 extends FSActionObject
 {
     /** Load a movie without submitting the movie variables. */
     public static final int MovieToLevel = 0;

Modified: trunk/src/com/flagstone/transform/FSGotoFrame.java
===================================================================
--- trunk/src/com/flagstone/transform/FSGotoFrame.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/FSGotoFrame.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -79,7 +79,7 @@
 <h1 class="datasheet">History</h1>
 
 <p>The FSGotoFrame represents the ActionGotoFrame action of the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 3. This class is now superseded by the FSGotoFrame2 action which allows either the name of a frame or a number of be specified.</p> */
-public final class FSGotoFrame extends FSActionObject
+public class FSGotoFrame extends FSActionObject
 {
     private int frameNumber = 1;
 

Modified: trunk/src/com/flagstone/transform/FSGotoFrame2.java
===================================================================
--- trunk/src/com/flagstone/transform/FSGotoFrame2.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/FSGotoFrame2.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -139,7 +139,7 @@
 action. In Flash 5 the frameOffset attribute was added which allows movies to be divided into a 
 series of 'pages'.</p>
  */  
-public final class FSGotoFrame2 extends FSActionObject
+public class FSGotoFrame2 extends FSActionObject
 {
     private boolean playFrame = false;
     private int frameOffset = 0;

Modified: trunk/src/com/flagstone/transform/FSGotoLabel.java
===================================================================
--- trunk/src/com/flagstone/transform/FSGotoLabel.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/FSGotoLabel.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -81,7 +81,7 @@
 <h1 class="datasheet">History</h1>
 
 <p>FSGotoLabel represents the ActionGotoLabel action of the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 3.</p> */  
-public final class FSGotoLabel extends FSActionObject
+public class FSGotoLabel extends FSActionObject
 {
     private String label = null;
     

Modified: trunk/src/com/flagstone/transform/FSGradient.java
===================================================================
--- trunk/src/com/flagstone/transform/FSGradient.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/FSGradient.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -56,7 +56,7 @@
 
 <p>The FSGradient class represents the GradientRecord structure from the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 1.</p>
  */
-public final class FSGradient extends FSTransformObject
+public class FSGradient extends FSTransformObject
 {
     private int ratio = 0;
     private FSColor color = null;

Modified: trunk/src/com/flagstone/transform/FSGradientFill.java
===================================================================
--- trunk/src/com/flagstone/transform/FSGradientFill.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/FSGradientFill.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -119,7 +119,7 @@
 <p>The FSGradientFill class represents the FillStyle structure from the Macromedia Flash 
 (SWF) File Format Specification. It was introduced in Flash 1.</p>
  */
-public final class FSGradientFill extends FSFillStyle
+public class FSGradientFill extends FSFillStyle
 {
     private FSCoordTransform transform = null;
     private ArrayList gradients = null;

Modified: trunk/src/com/flagstone/transform/FSIf.java
===================================================================
--- trunk/src/com/flagstone/transform/FSIf.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/FSIf.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -71,7 +71,7 @@
 
 <p>The FSIf class represents the ActionIf action of the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 4.</p>
  */  
-public final class FSIf extends FSActionObject
+public class FSIf extends FSActionObject
 {
     private int offset = 0;
 

Modified: trunk/src/com/flagstone/transform/FSImport.java
===================================================================
--- trunk/src/com/flagstone/transform/FSImport.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/FSImport.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -84,7 +84,7 @@
 
 <p>The FSImport class represents the ImportAssets data structure in the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 5.</p>
  */  
-public final class FSImport extends FSMovieObject
+public class FSImport extends FSMovieObject
 {
     private String url = null;
     private Hashtable objects = new Hashtable();

Modified: trunk/src/com/flagstone/transform/FSInitialize.java
===================================================================
--- trunk/src/com/flagstone/transform/FSInitialize.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/FSInitialize.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -85,7 +85,7 @@
 
 @see FSDoAction
  */  
-public final class FSInitialize extends FSMovieObject
+public class FSInitialize extends FSMovieObject
 {
     private int identifier = 0;
     private ArrayList actions = null;

Modified: trunk/src/com/flagstone/transform/FSJPEGEncodingTable.java
===================================================================
--- trunk/src/com/flagstone/transform/FSJPEGEncodingTable.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/FSJPEGEncodingTable.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -80,7 +80,7 @@
 
 <p>The FSJPEGEncodingTable class represents the JPEGEncodingTable tag from the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 1.</p>
  */
-public final class FSJPEGEncodingTable extends FSMovieObject
+public class FSJPEGEncodingTable extends FSMovieObject
 {
     private byte[] encodingTable = null;
 

Modified: trunk/src/com/flagstone/transform/FSJump.java
===================================================================
--- trunk/src/com/flagstone/transform/FSJump.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/FSJump.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -64,7 +64,7 @@
 
 <p>The FSJump class represents the ActionJump action of the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 4.</p>
  */  
-public final class FSJump extends FSActionObject
+public class FSJump extends FSActionObject
 {
     private int offset = 0;
 

Modified: trunk/src/com/flagstone/transform/FSKerning.java
===================================================================
--- trunk/src/com/flagstone/transform/FSKerning.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/FSKerning.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -62,7 +62,7 @@
 
 <p>FSKerning class represents the KerningRecord from the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 2.</p>
  */
-public final class FSKerning extends FSTransformObject
+public class FSKerning extends FSTransformObject
 {
     private int leftGlyphIndex = 0;
     private int rightGlyphIndex = 0;

Modified: trunk/src/com/flagstone/transform/FSLimitScript.java
===================================================================
--- trunk/src/com/flagstone/transform/FSLimitScript.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/FSLimitScript.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -61,7 +61,7 @@
 
 <p>The FSLimitScript represents the ScriptLimits tag in the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 7.</p>
  */  
-public final class FSLimitScript extends FSMovieObject
+public class FSLimitScript extends FSMovieObject
 {
     private int depth = 0; 
     private int timeout = 0; 

Modified: trunk/src/com/flagstone/transform/FSLine.java
===================================================================
--- trunk/src/com/flagstone/transform/FSLine.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/FSLine.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -59,7 +59,7 @@
 
 <p>The FSLine class represents the StraightEdge record from the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 1.</p>
  */
-public final class FSLine extends FSTransformObject
+public class FSLine extends FSTransformObject
 {
     private int x = 0;
     private int y = 0;

Modified: trunk/src/com/flagstone/transform/FSMorphBitmapFill.java
===================================================================
--- trunk/src/com/flagstone/transform/FSMorphBitmapFill.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/FSMorphBitmapFill.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -77,7 +77,7 @@
 
 <p>The FSMorphBitmapFill class represents the MorphFillStyle structure from the Macromedia Flash (SWF) File Format Specification. Shape morphing was introduced in Flash 3.</P>
  */  
-public final class FSMorphBitmapFill extends FSFillStyle
+public class FSMorphBitmapFill extends FSFillStyle
 {
     private int identifier = 0;
     private FSCoordTransform startTransform = new FSCoordTransform(0,0);

Modified: trunk/src/com/flagstone/transform/FSMorphGradient.java
===================================================================
--- trunk/src/com/flagstone/transform/FSMorphGradient.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/FSMorphGradient.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -71,7 +71,7 @@
 
 <p>The FSMorphGradient class represents the MorphGradientRecord structure from the Macromedia Flash (SWF) File Format Specification. Shape morphing was introduced in Flash 3.</p>
  */  
-public final class FSMorphGradient extends FSTransformObject
+public class FSMorphGradient extends FSTransformObject
 {
     private int startRatio = 0;
     private int endRatio = 0;

Modified: trunk/src/com/flagstone/transform/FSMorphGradientFill.java
===================================================================
--- trunk/src/com/flagstone/transform/FSMorphGradientFill.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/FSMorphGradientFill.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -127,7 +127,7 @@
 
 <p>The FSMorphGradientFill class represents the MorphFillStyle structure from the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 3.</p>
  */  
-public final class FSMorphGradientFill extends FSFillStyle
+public class FSMorphGradientFill extends FSFillStyle
 {
     private FSCoordTransform startTransform = null;
     private FSCoordTransform endTransform = null;

Modified: trunk/src/com/flagstone/transform/FSMorphSolidFill.java
===================================================================
--- trunk/src/com/flagstone/transform/FSMorphSolidFill.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/FSMorphSolidFill.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -69,7 +69,7 @@
 
 <p>The FSMorphSolidFill class represents the MorphFillStyle structure from the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 3.</p>
  */  
-public final class FSMorphSolidFill extends FSFillStyle
+public class FSMorphSolidFill extends FSFillStyle
 {
     private FSColor startColor = null;
     private FSColor endColor = null;

Modified: trunk/src/com/flagstone/transform/FSMorphSolidLine.java
===================================================================
--- trunk/src/com/flagstone/transform/FSMorphSolidLine.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/FSMorphSolidLine.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -66,7 +66,7 @@
 
 <p>The FSMorphSolidLine class represents the MorphLineStyle structure from the Macromedia Flash (SWF) File Format Specification. Shape morphing was introduced in Flash 3.</P>
  */  
-public final class FSMorphSolidLine extends FSLineStyle
+public class FSMorphSolidLine extends FSLineStyle
 {
     private int startWidth = 0;
     private int endWidth = 0;

Modified: trunk/src/com/flagstone/transform/FSMovie.java
===================================================================
--- trunk/src/com/flagstone/transform/FSMovie.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/FSMovie.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -158,7 +158,7 @@
 Flash the encoding attribute may be set to match the character set of the application 
 used to encoded the Flash file.</p>';
 */  
-public final class FSMovie implements Cloneable
+public class FSMovie implements Cloneable
 {
     static void encodeObjects(FSCoder coder, ArrayList array)
     {

Modified: trunk/src/com/flagstone/transform/FSMovieEvent.java
===================================================================
--- trunk/src/com/flagstone/transform/FSMovieEvent.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/FSMovieEvent.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -41,7 +41,7 @@
  * while a movie is being encoded or decoded.
  *
  */
-public final class FSMovieEvent
+public class FSMovieEvent
 {
     /** Identifies an event generated while a movie is being encoded. */
     public static final int Encode = 0;

Modified: trunk/src/com/flagstone/transform/FSNewFunction.java
===================================================================
--- trunk/src/com/flagstone/transform/FSNewFunction.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/FSNewFunction.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -141,7 +141,7 @@
 
 <p>The FSNewFunction class represents the ActionDefineFunction action of the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 5.</p>
  */  
-public final class FSNewFunction extends FSActionObject
+public class FSNewFunction extends FSActionObject
 {
     private String name = null;
     private ArrayList arguments = null;

Modified: trunk/src/com/flagstone/transform/FSNewFunction2.java
===================================================================
--- trunk/src/com/flagstone/transform/FSNewFunction2.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/FSNewFunction2.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -200,7 +200,7 @@
 <p>The FSNewFunction class represents the ActionDefineFunction2 action of the 
 Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 7.</p>
  */  
-public final class FSNewFunction2 extends FSActionObject
+public class FSNewFunction2 extends FSActionObject
 {
 /** Create and initialized the predefined variable, <em>super</em>. */
     public static final int CreateSuper = 4;

Modified: trunk/src/com/flagstone/transform/FSNull.java
===================================================================
--- trunk/src/com/flagstone/transform/FSNull.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/FSNull.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -39,7 +39,7 @@
 <p>The FSNull class represents the Null data type from the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 5.</p>
 
  */  
-public final class FSNull extends FSTransformObject
+public class FSNull extends FSTransformObject
 {
     private static final FSNull instance = new FSNull();
     

Modified: trunk/src/com/flagstone/transform/FSPathsArePostscript.java
===================================================================
--- trunk/src/com/flagstone/transform/FSPathsArePostscript.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/FSPathsArePostscript.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -61,7 +61,7 @@
 Macromedia Flash (SWF) File Format Specification. It is not documented in later 
 editions of the specification. It is not known when this tag was added.</p>
  */  
-public final class FSPathsArePostscript extends FSMovieObject
+public class FSPathsArePostscript extends FSMovieObject
 {
     private static final FSPathsArePostscript instance = new FSPathsArePostscript();
     

Modified: trunk/src/com/flagstone/transform/FSPlaceObject.java
===================================================================
--- trunk/src/com/flagstone/transform/FSPlaceObject.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/FSPlaceObject.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -116,7 +116,7 @@
 
 <p>The FSPlaceObject class represents the PlaceObject tag from the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 1 and is superseded by the PlaceObject2 tag which was added in Flash 3.</p>
  */
-public final class FSPlaceObject extends FSMovieObject
+public class FSPlaceObject extends FSMovieObject
 {
     private int identifier = 0;
     private int layer = 0;

Modified: trunk/src/com/flagstone/transform/FSPlaceObject2.java
===================================================================
--- trunk/src/com/flagstone/transform/FSPlaceObject2.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/FSPlaceObject2.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -248,7 +248,7 @@
 
 <p>The FSPlaceObject2 class represents the PlaceObject2 tag from the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 3.</p>
  */  
-public final class FSPlaceObject2 extends FSMovieObject
+public class FSPlaceObject2 extends FSMovieObject
 {
     /* Update an existing object on the display list */
     public static final int Modify = 1;

Modified: trunk/src/com/flagstone/transform/FSPointer.java
===================================================================
--- trunk/src/com/flagstone/transform/FSPointer.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/FSPointer.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -57,7 +57,7 @@
 (SWF) File Format Specification. It is not documented in later editions of the 
 specification. It is not known when this tag was added.</p>
  */  
-public final class FSPointer extends FSMovieObject
+public class FSPointer extends FSMovieObject
 {
     private int pointer = 0;
 

Modified: trunk/src/com/flagstone/transform/FSProperty.java
===================================================================
--- trunk/src/com/flagstone/transform/FSProperty.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/FSProperty.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -36,7 +36,7 @@
  * 
  * See FSPush for a list of available properties.
  */
-public final class FSProperty extends FSTransformObject
+public class FSProperty extends FSTransformObject
 {
     private int value = 0;
 

Modified: trunk/src/com/flagstone/transform/FSProtect.java
===================================================================
--- trunk/src/com/flagstone/transform/FSProtect.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/FSProtect.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -59,7 +59,7 @@
 
 <p>The FSProtect class represents the Protect tag from the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 2. The password attribute was added in Flash 5.</p>
  */
-public final class FSProtect extends FSMovieObject
+public class FSProtect extends FSMovieObject
 {
     private String password = null;
         

Modified: trunk/src/com/flagstone/transform/FSPush.java
===================================================================
--- trunk/src/com/flagstone/transform/FSPush.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/FSPush.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -135,7 +135,7 @@
 
 <p>FSPush is a class for representing the Push action of the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 4 and contained either an integer or string argument. It was extended in Flash 5 to support a number of different data types and allow more than one value to be added in a single action.</p>
  */  
-public final class FSPush extends FSActionObject
+public class FSPush extends FSActionObject
 {
 /** The x-origin of the movie clip relative to the parent clip.*/
     public static final int _x = (Transform.VERSION < 5) ? 0x00000000 : 0;

Modified: trunk/src/com/flagstone/transform/FSQuicktimeMovie.java
===================================================================
--- trunk/src/com/flagstone/transform/FSQuicktimeMovie.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/FSQuicktimeMovie.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -55,7 +55,7 @@
 
 <p>The FSQuicktimeMovie class represents the QuicktimeMovie structure from the Macromedia Flash (SWF) File Format Specification. This structure is undocumented in later versions of the specification. It is not known when it was introduced.</p>
  */ 
-public final class FSQuicktimeMovie extends FSMovieObject
+public class FSQuicktimeMovie extends FSMovieObject
 {
     private String name = null;
         

Modified: trunk/src/com/flagstone/transform/FSRegisterCopy.java
===================================================================
--- trunk/src/com/flagstone/transform/FSRegisterCopy.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/FSRegisterCopy.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -68,7 +68,7 @@
 Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 5 
 and expanded in Flash 7 to support up to 256 registers.</p>
  */  
-public final class FSRegisterCopy extends FSActionObject
+public class FSRegisterCopy extends FSActionObject
 {
     private int registerNumber = 0;
     

Modified: trunk/src/com/flagstone/transform/FSRegisterIndex.java
===================================================================
--- trunk/src/com/flagstone/transform/FSRegisterIndex.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/FSRegisterIndex.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -61,7 +61,7 @@
 
 <p>The RegisterCopy action and access to the Flash Player's internal registers was introduced in Flash 5. The number of registers supported was expanded in Flash 7 to 256.</p>
  */  
-public final class FSRegisterIndex extends FSTransformObject
+public class FSRegisterIndex extends FSTransformObject
 {
     private int index = 0;
 

Modified: trunk/src/com/flagstone/transform/FSRegisterVariable.java
===================================================================
--- trunk/src/com/flagstone/transform/FSRegisterVariable.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/FSRegisterVariable.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -37,7 +37,7 @@
 <p>Register numbers up to 255 may be specified. If the number is zero then the 
 argument is defined as a local variable.</p>
  */  
-public final class FSRegisterVariable extends FSTransformObject
+public class FSRegisterVariable extends FSTransformObject
 {
     private int index = 0;
     private String name = null;

Modified: trunk/src/com/flagstone/transform/FSRemoveObject.java
===================================================================
--- trunk/src/com/flagstone/transform/FSRemoveObject.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/FSRemoveObject.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -90,7 +90,7 @@
 
 <p>The FSRemoveObject class represents the RemoveObject tag from the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 1 and is superseded by the RemoveObject2 tag which was added in Flash 3.</p>
  */
-public final class FSRemoveObject extends FSMovieObject
+public class FSRemoveObject extends FSMovieObject
 {
     private int identifier = 0;
     private int layer = 0;

Modified: trunk/src/com/flagstone/transform/FSRemoveObject2.java
===================================================================
--- trunk/src/com/flagstone/transform/FSRemoveObject2.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/FSRemoveObject2.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -55,7 +55,7 @@
 
 <p>The FSRemoveObject2 class represents the RemoveObject2 tag from the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash in Flash 3.</p>
  */ 
-public final class FSRemoveObject2 extends FSMovieObject
+public class FSRemoveObject2 extends FSMovieObject
 {
     private int layer = 0;
 

Modified: trunk/src/com/flagstone/transform/FSSerialNumber.java
===================================================================
--- trunk/src/com/flagstone/transform/FSSerialNumber.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/FSSerialNumber.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -60,7 +60,7 @@
 
 <p>The FSSerialNumber represents the SerialNumber tag in the Macromedia Flash (SWF) File Format Specification. It is not known when this tag was introduced.</p>
  */  
-public final class FSSerialNumber extends FSMovieObject
+public class FSSerialNumber extends FSMovieObject
 {
     private String serialNumber = null;
     

Modified: trunk/src/com/flagstone/transform/FSSetBackgroundColor.java
===================================================================
--- trunk/src/com/flagstone/transform/FSSetBackgroundColor.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/FSSetBackgroundColor.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -64,7 +64,7 @@
 
 <p>The FSSetBackgroundColor class represents the SetBackgroundColor tag from the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 1.</p>
  */
-public final class FSSetBackgroundColor extends FSMovieObject
+public class FSSetBackgroundColor extends FSMovieObject
 {
     private FSColor color = null;
     

Modified: trunk/src/com/flagstone/transform/FSSetTarget.java
===================================================================
--- trunk/src/com/flagstone/transform/FSSetTarget.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/FSSetTarget.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -71,7 +71,7 @@
 
 <p>The FSSetTarget class represents the SetTarget action of the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 3.</p>
  */ 
-public final class FSSetTarget extends FSActionObject
+public class FSSetTarget extends FSActionObject
 {
     private String target = "";
     

Modified: trunk/src/com/flagstone/transform/FSShape.java
===================================================================
--- trunk/src/com/flagstone/transform/FSShape.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/FSShape.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -53,7 +53,7 @@
 
 <p>The FSShape class represents the Shape record from the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 1.</p>
  */
-public final class FSShape extends FSTransformObject
+public class FSShape extends FSTransformObject
 {
     private ArrayList objects = null;
     private byte[] encodedObjects = null; 

Modified: trunk/src/com/flagstone/transform/FSShapeStyle.java
===================================================================
--- trunk/src/com/flagstone/transform/FSShapeStyle.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/FSShapeStyle.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -211,7 +211,7 @@
 
 <p>The FSShapeStyle class represents the StyleChange record from the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 1.</p>
  */
-public final class FSShapeStyle extends FSTransformObject
+public class FSShapeStyle extends FSTransformObject
 {
     private int moveX = Transform.VALUE_NOT_SET;
     private int moveY = Transform.VALUE_NOT_SET;

Modified: trunk/src/com/flagstone/transform/FSShowFrame.java
===================================================================
--- trunk/src/com/flagstone/transform/FSShowFrame.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/FSShowFrame.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -93,7 +93,7 @@
 
 <p>The FSShowFrame class represents the ShowFrame data structure from the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 1.</p>
  */
-public final class FSShowFrame extends FSMovieObject
+public class FSShowFrame extends FSMovieObject
 {
     private static final FSShowFrame instance = new FSShowFrame();
     

Modified: trunk/src/com/flagstone/transform/FSSolidFill.java
===================================================================
--- trunk/src/com/flagstone/transform/FSSolidFill.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/FSSolidFill.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -95,7 +95,7 @@
 
 <p>The FSSolidFill class represents the FillStyle structure from the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 1.</p>
  */
-public final class FSSolidFill extends FSFillStyle
+public class FSSolidFill extends FSFillStyle
 {
     private FSColor color = null;
     

Modified: trunk/src/com/flagstone/transform/FSSolidLine.java
===================================================================
--- trunk/src/com/flagstone/transform/FSSolidLine.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/FSSolidLine.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -89,7 +89,7 @@
 
 <p>The FSSolidLine class represents the LineStyle structure from the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 1. Support for transparent colours was added in Flash 3.</p>
  */
-public final class FSSolidLine extends FSLineStyle
+public class FSSolidLine extends FSLineStyle
 {
     private int width = 0;
     private FSColor color = null;

Modified: trunk/src/com/flagstone/transform/FSSound.java
===================================================================
--- trunk/src/com/flagstone/transform/FSSound.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/FSSound.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -82,7 +82,7 @@
 
 <p>The FSSound class is based on the SoundInfo data structure from the Macromedia Flash (SWF) File Format Specification. However it also contains the identifier for the sound which is a separate attribute in the data structures defined in the specification that contain SoundInfo data.</p>
  */
-public final class FSSound extends FSTransformObject
+public class FSSound extends FSTransformObject
 {
     /** Identifies an uncompressed pulse code modulated sound. The byte-order for 16-bit sound samples
      is dependent on the host platform on which the sound is played. */

Modified: trunk/src/com/flagstone/transform/FSSoundStreamBlock.java
===================================================================
--- trunk/src/com/flagstone/transform/FSSoundStreamBlock.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/FSSoundStreamBlock.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -66,7 +66,7 @@
 compressed ADPCM format. Support for MP3 was added in Flash 3. The Nellymoser Asao
 format was added in Flash 6.</p>
  */
-public final class FSSoundStreamBlock extends FSMovieObject
+public class FSSoundStreamBlock extends FSMovieObject
 {
     private byte[] soundData = null;
     

Modified: trunk/src/com/flagstone/transform/FSSoundStreamHead.java
===================================================================
--- trunk/src/com/flagstone/transform/FSSoundStreamHead.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/FSSoundStreamHead.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -116,7 +116,7 @@
 <p>The FSSoundStreamHead class represents the SoundStreamHead structure from the 
 Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 1.</p>
  */
-public final class FSSoundStreamHead extends FSMovieObject
+public class FSSoundStreamHead extends FSMovieObject
 {
     private int format = FSSound.ADPCM;
 

Modified: trunk/src/com/flagstone/transform/FSSoundStreamHead2.java
===================================================================
--- trunk/src/com/flagstone/transform/FSSoundStreamHead2.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/FSSoundStreamHead2.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -115,7 +115,7 @@
 Flash specification. It was introduced in Flash 3. Support for the Nellymoser Asao
 format was added in Flash 6.</p>
  */
-public final class FSSoundStreamHead2 extends FSMovieObject
+public class FSSoundStreamHead2 extends FSMovieObject
 {
     private int format = FSSound.ADPCM;
 

Modified: trunk/src/com/flagstone/transform/FSStartSound.java
===================================================================
--- trunk/src/com/flagstone/transform/FSStartSound.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/FSStartSound.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -52,7 +52,7 @@
 
 <p>The FSStartSound class represents the StartSound tag from the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 1. In the Macromedia Flash (SWF) File Format Specification the StartSound tag contains an identifier and an FSSoundInfo structure. The Transform FSSound object simply combines both to simplify the design of other sound classes. The information encoded is identical.</p>
  */
-public final class FSStartSound extends FSMovieObject
+public class FSStartSound extends FSMovieObject
 {
     private FSSound sound = null;
 

Modified: trunk/src/com/flagstone/transform/FSTabOrder.java
===================================================================
--- trunk/src/com/flagstone/transform/FSTabOrder.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/FSTabOrder.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -59,7 +59,7 @@
 
 <p>The FSTabOrder object represents the SetTabIndex tag in the Flash file specification . It was introduced in Flash 7.</p>
  */  
-public final class FSTabOrder extends FSMovieObject
+public class FSTabOrder extends FSMovieObject
 {
     private int layer = 0; 
     private int index = 0; 

Modified: trunk/src/com/flagstone/transform/FSTable.java
===================================================================
--- trunk/src/com/flagstone/transform/FSTable.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/FSTable.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -101,7 +101,7 @@
 File Format Specification. It was introduced in Flash 5. It was extended in Flash 
 6 to support tables of up to 65536 strings.</p>
  */  
-public final class FSTable extends FSActionObject
+public class FSTable extends FSActionObject
 {
     private ArrayList values = null;
     

Modified: trunk/src/com/flagstone/transform/FSTableIndex.java
===================================================================
--- trunk/src/com/flagstone/transform/FSTableIndex.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/FSTableIndex.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -68,7 +68,7 @@
 <p>The string literal table was introduced in Flash 5. It was extended in Flash 
 6 to support tables of up to 65536 strings.</p>
  */  
-public final class FSTableIndex extends FSTransformObject
+public class FSTableIndex extends FSTransformObject
 {
     private int index = 0;
 

Modified: trunk/src/com/flagstone/transform/FSText.java
===================================================================
--- trunk/src/com/flagstone/transform/FSText.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/FSText.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -188,7 +188,7 @@
 structures from the Macromedia Flash (SWF) File Format Specification. It was 
 introduced in Flash 1.</p> 
  */
-public final class FSText extends FSTransformObject
+public class FSText extends FSTransformObject
 {
     /** Defines that the font character set is based on the Unicode standard. */
     public static final int Unicode = 0;

Modified: trunk/src/com/flagstone/transform/FSUnknownAction.java
===================================================================
--- trunk/src/com/flagstone/transform/FSUnknownAction.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/FSUnknownAction.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -53,7 +53,7 @@
 
 <p>The object provides direct access to the encoded data of the action offering the possibility to encode and decode actions that are not directly supported in the current release of the framework. However a detailed knowledge of how the action is encoded and decoded is required.</p>
  */
-public final class FSUnknownAction extends FSActionObject
+public class FSUnknownAction extends FSActionObject
 {
     private byte[] data = null;
     

Modified: trunk/src/com/flagstone/transform/FSUnknownObject.java
===================================================================
--- trunk/src/com/flagstone/transform/FSUnknownObject.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/FSUnknownObject.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -53,7 +53,7 @@
 
 <p>The object provides direct access to the encoded data of the data structure offering the possibility for Transform to encode and decode tags that are not directly supported in the current release of the package. However a detailed knowledge of how the data structure is encoded and decoded is required.</p>
  */
-public final class FSUnknownObject extends FSMovieObject
+public class FSUnknownObject extends FSMovieObject
 {
     private byte[] data = null;
     

Modified: trunk/src/com/flagstone/transform/FSVideoFrame.java
===================================================================
--- trunk/src/com/flagstone/transform/FSVideoFrame.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/FSVideoFrame.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -65,7 +65,7 @@
 
 <p>The FSVideoFrame class represents the VideoFrame data structure in the Macromedia Flash (SWF) File Format Specification. It was added in Flash 6 with support for the Sorenson modified H263 format. Support for Macromedia's Screen Video format was added in Flash 7.</p>
  */  
-public final class FSVideoFrame extends FSMovieObject
+public class FSVideoFrame extends FSMovieObject
 {
     private int identifier = 0;
     private int frameNumber = 0;

Modified: trunk/src/com/flagstone/transform/FSVoid.java
===================================================================
--- trunk/src/com/flagstone/transform/FSVoid.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/FSVoid.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -39,7 +39,7 @@
 <p>The FSVoid class represents the Void data type from the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 5.</p>
 
  */  
-public final class FSVoid extends FSTransformObject
+public class FSVoid extends FSTransformObject
 {
     private static final FSVoid instance = new FSVoid();
     

Modified: trunk/src/com/flagstone/transform/FSWaitForFrame.java
===================================================================
--- trunk/src/com/flagstone/transform/FSWaitForFrame.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/FSWaitForFrame.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -84,7 +84,7 @@
 
 <p>The FSWaitForFrame class represents the ActionWaitForFrame action of the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 3.</p>
  */
-public final class FSWaitForFrame extends FSActionObject
+public class FSWaitForFrame extends FSActionObject
 {
     private int frameNumber = 1;
     private int actionCount = 0;

Modified: trunk/src/com/flagstone/transform/FSWaitForFrame2.java
===================================================================
--- trunk/src/com/flagstone/transform/FSWaitForFrame2.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/FSWaitForFrame2.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -82,7 +82,7 @@
 
 <p>The FSWaitForFrame2 class represents the ActionWaitForFrame2 action of the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 4.</p>
  */  
-public final class FSWaitForFrame2 extends FSActionObject
+public class FSWaitForFrame2 extends FSActionObject
 {
     private int actionCount = 0;
     

Modified: trunk/src/com/flagstone/transform/FSWith.java
===================================================================
--- trunk/src/com/flagstone/transform/FSWith.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/FSWith.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -82,7 +82,7 @@
 
 <p>The FSWith class represents the ActionWith action in the Macromedia Flash (SWF) File Format Specification. It was introduced in Flash 5. FSWith supersedes the FSSetTarget action.</p>
  */  
-public final class FSWith extends FSActionObject
+public class FSWith extends FSActionObject
 {
     private ArrayList actions = null;
     

Modified: trunk/src/com/flagstone/transform/Transform.java
===================================================================
--- trunk/src/com/flagstone/transform/Transform.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/Transform.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -35,7 +35,7 @@
 /**
  * The %Transform class defines constants and methods used throughout the %Transform package. 
  */
-public final class Transform
+public class Transform
 {
     /** 
      * @deprecated No longer required for debugging.

Modified: trunk/src/com/flagstone/transform/util/FSCodec.java
===================================================================
--- trunk/src/com/flagstone/transform/util/FSCodec.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/util/FSCodec.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -52,7 +52,7 @@
  * that overflowed will be set to zero, rather than throwing an exception. The eof() method 
  * can be used to determine whether the end of the buffer has been reached.
  */
-public final class FSCodec
+public class FSCodec
 {
     /** 
      * Identifies that multibyte words are stored in little-endian format with the least

Modified: trunk/src/com/flagstone/transform/util/FSImageConstructor.java
===================================================================
--- trunk/src/com/flagstone/transform/util/FSImageConstructor.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/util/FSImageConstructor.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -195,7 +195,7 @@
  *     imageConstructor.setJPEGImage(imageWidth, imageHeight, image);
  * </pre>
  */
-public final class FSImageConstructor
+public class FSImageConstructor
 {
     /** Format for JPEG encoded images */
     public static final int JPEG = 0;

Modified: trunk/src/com/flagstone/transform/util/FSShapeConstructor.java
===================================================================
--- trunk/src/com/flagstone/transform/util/FSShapeConstructor.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/util/FSShapeConstructor.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -139,7 +139,7 @@
  *</pre>
  *
  */
-public final class FSShapeConstructor
+public class FSShapeConstructor
 {
     private double flattenLimit = 0.25;
    /** 

Modified: trunk/src/com/flagstone/transform/util/FSSoundConstructor.java
===================================================================
--- trunk/src/com/flagstone/transform/util/FSSoundConstructor.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/util/FSSoundConstructor.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -122,7 +122,7 @@
  * </pre>
  *
  */
-public final class FSSoundConstructor
+public class FSSoundConstructor
 {
     private static final int[] riffSignature = { 82, 73, 70, 70 };
     private static final int[] wavSignature = { 87, 65, 86, 69 };

Modified: trunk/src/com/flagstone/transform/util/FSTextConstructor.java
===================================================================
--- trunk/src/com/flagstone/transform/util/FSTextConstructor.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/util/FSTextConstructor.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -186,7 +186,7 @@
  * that cannot be displayed (the missing glyph will be displayed instead) or -1 
  * if all the characters are represented in the font.</P>
  */
-public final class FSTextConstructor
+public class FSTextConstructor
 {
     private static final int OS_2 = 0x4F532F32;
     private static final int HEAD = 0x68656164;

Modified: trunk/src/com/flagstone/transform/util/TransformUtil.java
===================================================================
--- trunk/src/com/flagstone/transform/util/TransformUtil.java	2006-06-30 11:24:17 UTC (rev 198)
+++ trunk/src/com/flagstone/transform/util/TransformUtil.java	2006-06-30 11:27:55 UTC (rev 199)
@@ -74,7 +74,7 @@
  * @deprecated No longer used with the merging of Transform Utilties into the 
  * main Transform SWF distribution.
  */
-public final class TransformUtil 
+public class TransformUtil 
 {
     // Package information  
     static final boolean DebugEdition = false;



From smackay at berlios.de  Fri Jun 30 13:31:53 2006
From: smackay at berlios.de (smackay at berlios.de)
Date: Fri, 30 Jun 2006 13:31:53 +0200
Subject: [Transform-svn] r200 - in trunk/doc: . releases web
Message-ID: <200606301131.k5UBVrmZ006110@sheep.berlios.de>

Author: smackay
Date: 2006-06-30 13:31:39 +0200 (Fri, 30 Jun 2006)
New Revision: 200

Modified:
   trunk/doc/CHANGES.txt
   trunk/doc/releases/transform-2.1.3.txt
   trunk/doc/web/issues.html
   trunk/doc/web/whatsnew.html
Log:
Updated for release 2.1.3

Modified: trunk/doc/CHANGES.txt
===================================================================
--- trunk/doc/CHANGES.txt	2006-06-30 11:27:55 UTC (rev 199)
+++ trunk/doc/CHANGES.txt	2006-06-30 11:31:39 UTC (rev 200)
@@ -1,5 +1,11 @@
 2006-06-29 - smackay at flagstonesoftware.com
 
+    * added public byte[] getEncodedActions() method to allow access to actions
+      encoded as binary data in the following classes: FSButtonEvent, 
+      FSClipEvent, FSDefineButton, FSDoAction and FSInitialize.
+    
+2006-06-29 - smackay at flagstonesoftware.com
+
     * Restructured the files used to test the classes. The Flash files now
       contain a sample of the encoded data structures for a given class. This
       limits the size of the files which still providing useful test coverage.

Modified: trunk/doc/releases/transform-2.1.3.txt
===================================================================
--- trunk/doc/releases/transform-2.1.3.txt	2006-06-30 11:27:55 UTC (rev 199)
+++ trunk/doc/releases/transform-2.1.3.txt	2006-06-30 11:31:39 UTC (rev 200)
@@ -14,6 +14,8 @@
 	
 Class Changes:
     FSCoder context variable, version is now public.
+    Encoded binary actions are now accessible.
+    Classes are no longer final.
 	
 Testing Changes:
     Added test classes for FSProtect, FSShowFrame and FSSetBackgroundColor.
@@ -99,6 +101,20 @@
 This variable has very little use outside of testing. Other context variables
 will be made public as more test cases are developed.
 
+2. Encoded binary actions are now accessible.
+
+The method 
+
+    public byte[] getEncodedActions() 
+    
+was added to the following classes:  FSButtonEvent, FSClipEvent, FSDefineButton, 
+FSDoAction and FSInitialize to allow access to actions encoded as binary data.
+
+3. Classes are no longer final.
+
+The final keyowrd has been removed from all classes in the franework allowing
+them to be sub-classed.
+
 -------------------
   Testing Changes  
 -------------------

Modified: trunk/doc/web/issues.html
===================================================================
--- trunk/doc/web/issues.html	2006-06-30 11:27:55 UTC (rev 199)
+++ trunk/doc/web/issues.html	2006-06-30 11:31:39 UTC (rev 200)
@@ -50,65 +50,65 @@
 <TD>Open</TD>
 </TR>
 
+</TBODY>
+</TABLE>
+
+<TABLE width="100%">
+
+<THEAD>
 <TR>
-<TD>2. TextDump Tool does not decode NewFunction and NewFunction2 actions correctly.</TD>
-<TD>Open</TD>
-<TD>2.1.3</TD>
+<TH>Recently Fixed</TH>
+<TH>Status</TH>
+<TH>Release</TH>
 </TR>
+</THEAD>
 
+<TBODY>
+
 <TR>
-<TD>3. FSDefineJPEG2 and FSDefineJPEG3 do not allow null encoding tables.</TD>
-<TD>Open</TD>
+<TD>1. TextDump Tool does not decode NewFunction and NewFunction2 actions correctly.</TD>
+<TD>Fixed</TD>
 <TD>2.1.3</TD>
 </TR>
 
 <TR>
-<TD>4. FSCoder throws exception when adding bytes longer than the current buffer size.</TD>
-<TD>Open</TD>
+<TD>2. FSDefineJPEG2 and FSDefineJPEG3 do not allow null encoding tables.</TD>
+<TD>Fixed</TD>
 <TD>2.1.3</TD>
 </TR>
 
 <TR>
-<TD>5. FSButtonSound RollOver and RollOut sounds are swapped.</TD>
-<TD>Open</TD>
+<TD>3. FSCoder throws exception when adding bytes longer than the current buffer size.</TD>
+<TD>Fixed</TD>
 <TD>2.1.3</TD>
 </TR>
 
 <TR>
-<TD>6. The equals() method on FSPlaceObject2 objects with encoded clip event is not accurate.</TD>
-<TD>Open</TD>
+<TD>4. FSButtonSound RollOver and RollOut sounds are swapped.</TD>
+<TD>Fixed</TD>
 <TD>2.1.3</TD>
 </TR>
 
 <TR>
-<TD>7. The copy constructor on FSProtect can cause a NullPointerException.</TD>
-<TD>Open</TD>
+<TD>5. The equals() method on FSPlaceObject2 objects with encoded clip event is not accurate.</TD>
+<TD>Fixed</TD>
 <TD>2.1.3</TD>
 </TR>
 
-</TBODY>
-</TABLE>
-
-<TABLE width="100%">
-
-<THEAD>
 <TR>
-<TH>Recently Fixed</TH>
-<TH>Status</TH>
-<TH>Release</TH>
+<TD>6. The copy constructor on FSProtect can cause a NullPointerException.</TD>
+<TD>Fixed</TD>
+<TD>2.1.3</TD>
 </TR>
-</THEAD>
 
-<TBODY>
-
 <TR>
-<TD>1. FSTextConstructor does not sort font codes.</TD>
+<TD>7. FSTextConstructor does not sort font codes.</TD>
 <TD>Fixed</TD>
 <TD>2.1</TD>
 </TR>
 
 <TR>
-<TD>2. FSSoundConstructor goes into infinite loop when decoding MP3 files.</TD>
+<TD>8. FSSoundConstructor goes into infinite loop when decoding MP3 files.</TD>
 <TD>Fixed</TD>
 <TD>2.1.1</TD>
 </TR>
@@ -156,215 +156,80 @@
 conversion between the way the font is encoded. This option is planned for 
 release in the next version of Transform Utilities.</P>
 
-<div class="hr"><hr/></div>
+<br/>
 
-<H3>2. TextDump Tool does not decode NewFunction and NewFunction2 actions correctly.</H3>
+<H2>Recently Fixed</H2>
 
+<H3>1. TextDump Tool decodes NewFunction and NewFunction2 actions correctly.</H3>
+
 <P>In Transform the actions NewFunction and NewFunction2 contain arrays of the 
 actions that make up the function definition. This is different from the 
 official definition from Macromedia where instead the NewFunction and 
 NewFunction2 actions contain a field giving the number of bytes following that 
 make up the function definition.</P>
 
-<P>The bug in TextDump decodes the actions as if they were part of the 
-NewFunction[2] action but then jumps to the instruction immediately after and 
-decodes the function body actions all over again. The result is that the 
-function actions appear twice once as part of the NewFunction[2] action then 
-again as a set of actions immediately following on from the NewFunction[2] 
-action.</P>
+<P>The actions are now reported as only being part of the NewFunction[2] data 
+structure, previously the actions were decoded twice, first as if they were part 
+of the NewFunction[2] action and then again as a series of actions following 
+the function definition.</P>
 
-<H4>Root Cause</H4>
-
-<P>The root cause is a logic error in the code. The offset to the actions 
-following the body of the function is not calculated correctly.</P>
-
-<H4>Workaround?</H4>
-
-<P>There is no current workaround.</P>
-
-<H4>When will it be fixed?</H4>
-
-<P>The fix is already in the repository. It will be formally fixed when version 
-2.1.3 is released at the end of June.</P>
-
 <div class="hr"><hr/></div>
 
-<H3>3. FSDefineJPEG2 and FSDefineJPEG3 do not allow null encoding tables.</H3>
+<H3>2. FSDefineJPEG2 and FSDefineJPEG3 allows null encoding tables.</H3>
 
 <P>The documentation for the FSDefineJPEG2 and FSDefineJPEG3 classes state that 
 the encoding table may be set to null and the image will be displayed correctly. 
 However any object with a null encoding table will throw a NullPointerException 
 when it is encoded.</P>
 
-<H4>Root Cause</H4>
+<P>The code now allows null arguments to be specified for encoding tables. If a 
+null reference is used then an empty encoding table is generated to ensure that
+the image will be encoded correctly.</P>
 
-<P>The root cause is that null passed to the setEncodingTable(byte[]) method is 
-not checked for null arguments &ndash; the null should be replaced with an empty
-encoding table: a 4 byte sequence containing a StartOfImage (SOI) and EndOfImage
-(EOI) marker, FF, D8, FF, D9.</P>
+<div class="hr"><hr/></div>
 
-<H4>Workaround?</H4>
+<H3>3. FSCoder resize buffer correctly when writing binary data.</H3>
 
-<P>The workaround is to pass the empty table to the constructor or 
-setEncodingTable() method:</P>
+<P>The FSCoder now takes the size of the data being written when calculating 
+the extra capacity to add to its internal buffer. This avoids a potential
+overflow if data was being encoded that was larger than half the current 
+buffer size.</P>
 
-<PRE>
-    movie.add(new FSDefineJPEGImage3(movie.newIdentifier(), bytes, 
-        new byte[]{(byte)0xFF,(byte)0xD8,(byte)0xFF,(byte)0xD9}, 
-        compressedAlpha));
-</PRE>
-        
-<H4>When will it be fixed?</H4>
-
-<P>The fix is already in the repository. It will be formally fixed when version 
-2.1.3 is released at the end of June.</P>
-
 <div class="hr"><hr/></div>
 
-<H3>4. FSCoder throws exception when adding bytes longer than the current buffer size.</H3>
+<H3>4. FSButtonSound RollOver and RollOut sounds now in the correct order.</H3>
 
-<P>When writing a string or binary data that is longer than half the current 
-size of the internal buffer in the FSCoder object then an 
-ArrayIndexOutOfBoundsException will be thrown.</P>
+<P>The FSSound objects played when the mouse rolls over or out of the active 
+area of a button are now encoded in the correct order. Previously the order
+was swapped so if an FSSound object was created to play a sound when the mouse
+moved over a button then the sound was played only when the mouse moved outside
+of the button's active area and vice versa.</P>
 
-<H4>Root Cause</H4>
-
-<P>When writing data to the internal buffer if the data would overflow then the 
-buffer is resized. The size of the increase is half the current buffer size. 
-This is incorrect the amount of capacity to add should actually be half the 
-current buffer size + the size of the data being currently written. If the data
-being written is greater than half the current buffer size the new buffer size 
-is still not large enough to write all of the data and hence the exception is 
-thrown.</P>
-
-<H4>Workaround?</H4>
-
-<P>The workaround is to calculate in advance the correct size of the buffer so 
-it does not need to be resized. Alternatively a call to the method addCapacity()
-to increase the buffer by the required capacity before writing large mounts of 
-data.</P>
-
-<PRE>
-    coder.addCapacity(data.length);
-    coder.writeBytes(data);
-</PRE>
-
-<H4>When will it be fixed?</H4>
-
-<P>The fix is already in the repository. It will be formally fixed when version 
-2.1.3 is released at the end of June.</P>
-
 <div class="hr"><hr/></div>
 
-<H3>5. FSButtonSound RollOver and RollOut sounds are swapped.</H3>
+<H3>5. The equals method on FSPlaceObject2 now compares encoded clip events.</H3>
 
-<P>The FSButtonSound class takes 4 FSSound objects which define the sounds
-that will be played when the mouse movie a) Out of the button's active area,
-b) into the button's active area, c) when the button is clicked and d) when the
-button is released. The documentation for the class and the code are incorrect.
-The order of the mouse moving out and over are reversed so if a button is 
-created and a sound defined when the mouse moves over the button the sound is 
-actually played when the mouse moves out of the button's active area.</P>
+<P>Determining whether two objects, containing encoded clip events, now takes 
+account of all the attributes of the objects. Previously the result returned
+was only based on a comparison of the encoded clip events.</P>
 
-<H4>Root Cause</H4>
-
-<P>Incompetence ;).</P>
-
-<H4>Workaround?</H4>
-
-<P>The workaround is to swap the events passed to the methods:</P>
-<pre>
-    public FSSound getSoundForEvent(int eventCode)
-    public FSSound setSoundForEvent(int eventCode, FSSound aSound)
-</pre>
-
-<p>Swap the event codes when assigning a sound for a particular button event. 
-For example:</p>
-
-<PRE>
-    FSButtonSound buttonSound = new FSButtonSound(secondButton.getIdentifier(), 
-            FSButtonEvent.RollOut, new FSSound(sound.getIdentifier(), 0));    
-</PRE>
-
-<p>when setting the sound that will be played when the mouse moves over the 
-button. And:</p>
-
-<pre>
-    FSButtonSound buttonSound1 = new FSButtonSound(firstButton.getIdentifier(), 
-            FSButtonEvent.RollOver, new FSSound(sound.getIdentifier(), 0));    
-</PRE>
-
-<p>when setting the sound that will be played when the mouse moves out of the 
-active area of the button.</p>
-
-<H4>When will it be fixed?</H4>
-
-<P>The fix is already in the repository. It will be formally fixed when version 
-2.1.3 is released at the end of June.</P>
-
 <div class="hr"><hr/></div>
 
-<H3>6. The equals method on FSPlaceObject2 objects with encoded clip event is not accurate.</H3>
+<H3>6. The copy constructor on FSProtect now works with null passwords.</H3>
 
-<P>When a comparison is performed on two FSPlaceObject2 objects with encoded 
-clip events using the equals() method the result is only based on the 
-comparison of the encoded clip event objects.</P>
+<P>For Flash 4 and earlier Protect was used to prevent a file being loaded into
+Macromedia Flash. From Flash 5 a string attribute was added that contains an 
+MD5 hash of a password that could be used to provide access to the file. For 
+versions earlier than Flash 5 the password string would be set to null so it 
+was not included when the object was encoded.</P>
 
-<H4>Root Cause</H4>
+<p>The copy constructor now correctly tests the password attribute to see if 
+it is null before creating a copy of the String.</p>
 
-<P>The comparison of the encoded clip events is performed last and the result 
-from comparing the other attributes is not taken into account.</P>
-
-<H4>Workaround?</H4>
-
-<P>There is no workaround.</P>
-
-<H4>When will it be fixed?</H4>
-
-<P>The fix is already in the repository. It will be formally fixed when version 
-2.1.3 is released at the end of June.</P>
-
 <div class="hr"><hr/></div>
 
-<H3>7. The copy constructor on FSProtect can cause a NullPointerException.</H3>
+<H3>7. TextConstructor now sorts font codes.</H3>
 
-<P>When the copy constructor, FSProtect(FSProtect obj) is used and the object 
-being copied contains a null password (used for Flash 4 files) then a 
-NullPointerException will be thrown.</P>
-
-<H4>Root Cause</H4>
-
-<P>The cause is a failure in the method to test the password attribute for null.
-The code assumes the object contains a valid String.</P>
-
-<p>Use of the FSProtect class is not recommended as it is trivial to remove from
-a file and so offers no protection. As a result this bug should never be 
-encounted.</p>
-
-<H4>Workaround?</H4>
-
-<P>The workaround is to test the password string on the object to be copied and
-if null set it to the empty string. The object can safely be copied. The string
-will not be included when the object is encoded.</P>
-
-<pre>
-	if (obj.getPassword() == null)
-	   obj.setPassword("");
-	   
-	FSProtect copy = new FSProtect(obj);
-</pre>
-
-<H4>When will it be fixed?</H4>
-
-<P>The fix is already in the repository. It will be formally fixed when version 
-2.1.3 is released at the end of June.</P>
-
-<br/>
-
-<H2>Recently Fixed</H2>
-
-<H3>1. TextConstructor now sorts font codes.</H3>
-
 <P>With the release of Transform SWF 2.1 the FSTextConstructor class now 
 generated characters codes sorted correctly in ascending order.</P>
 
@@ -384,7 +249,7 @@
 
 <div class="hr"><hr/></div>
 
-<H3>2. FSSoundConstructor goes into infinite loop when decoding MP3 files.</H3>
+<H3>8. FSSoundConstructor goes into infinite loop when decoding MP3 files.</H3>
 
 <P>With the release of Transform 2.1.1 the infinite loop problem caused by meta 
 data at the end of an MP3 being incorrectly interpreted is now fixed.</P>

Modified: trunk/doc/web/whatsnew.html
===================================================================
--- trunk/doc/web/whatsnew.html	2006-06-30 11:27:55 UTC (rev 199)
+++ trunk/doc/web/whatsnew.html	2006-06-30 11:31:39 UTC (rev 200)
@@ -15,6 +15,15 @@
 <th class="release">Details</th>
 </tr>
 
+<tr class="odd">
+<td class="date">30th June 2006</td>
+<td class="version">2.1.3</td>
+<td class="description">Bugs fixes, updates to the test suites. JAR files for 
+TestNG are also included.</td>
+<td class="release"><a href="/downloads/transform-2.1.3.txt">release notes</a>
+</td>
+</tr>
+
 <tr class="even">
 <td class="date">3rd April 2006</td>
 <td class="version">2.1.2</td>



From smackay at berlios.de  Fri Jun 30 18:47:13 2006
From: smackay at berlios.de (smackay at berlios.de)
Date: Fri, 30 Jun 2006 18:47:13 +0200
Subject: [Transform-svn] r201 - tags
Message-ID: <200606301647.k5UGlDl8012916@sheep.berlios.de>

Author: smackay
Date: 2006-06-30 18:46:56 +0200 (Fri, 30 Jun 2006)
New Revision: 201

Added:
   tags/rel-2-1-3/
Log:
Release 2.1.3

Copied: tags/rel-2-1-3 (from rev 200, trunk)



