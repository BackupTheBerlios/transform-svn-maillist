From smackay at mail.berlios.de  Thu Nov 30 15:34:52 2006
From: smackay at mail.berlios.de (smackay at mail.berlios.de)
Date: Thu, 30 Nov 2006 15:34:52 +0100
Subject: [Transform-svn] r235 - in dev/dev-2-2: . doc doc/releases
	src/com/flagstone/transform src/com/flagstone/transform/examples
	src/com/flagstone/transform/test src/com/flagstone/transform/tools
	src/com/flagstone/transform/util test test/data test/suites
Message-ID: <200611301434.kAUEYqlC004060@sheep.berlios.de>

Author: smackay
Date: 2006-11-30 15:34:12 +0100 (Thu, 30 Nov 2006)
New Revision: 235

Removed:
   dev/dev-2-2/doc/releases/index.html
   dev/dev-2-2/doc/releases/style.css
   dev/dev-2-2/doc/releases/transform-1.0.0.html
   dev/dev-2-2/doc/releases/transform-1.1.0.html
   dev/dev-2-2/doc/releases/transform-1.2.0.html
   dev/dev-2-2/doc/releases/transform-1.3.0.html
   dev/dev-2-2/doc/releases/transform-1.4.0.html
   dev/dev-2-2/doc/releases/transform-1.4.1.html
   dev/dev-2-2/doc/releases/transform-2.0.0.html
   dev/dev-2-2/doc/releases/transform-2.0.1.html
   dev/dev-2-2/doc/releases/transform-2.0.2.html
   dev/dev-2-2/doc/releases/transform-2.0.3.html
   dev/dev-2-2/doc/releases/transform-2.0.4-patch-1.html
   dev/dev-2-2/doc/releases/transform-2.0.4.html
   dev/dev-2-2/doc/releases/transform-2.0.5.html
   dev/dev-2-2/doc/releases/transform-2.1.1.html
   dev/dev-2-2/doc/releases/transform-2.1.html
   dev/dev-2-2/test/benchmarks/
   dev/dev-2-2/test/data/fonts/
   dev/dev-2-2/test/data/images/
   dev/dev-2-2/test/data/movies/
   dev/dev-2-2/test/data/readme.txt
   dev/dev-2-2/test/data/sounds/
Modified:
   dev/dev-2-2/build.xml
   dev/dev-2-2/developer.xml
   dev/dev-2-2/doc/CHANGES.txt
   dev/dev-2-2/doc/LICENCE.txt
   dev/dev-2-2/doc/README.txt
   dev/dev-2-2/src/com/flagstone/transform/FSButtonEvent.java
   dev/dev-2-2/src/com/flagstone/transform/FSButtonSound.java
   dev/dev-2-2/src/com/flagstone/transform/FSClipEvent.java
   dev/dev-2-2/src/com/flagstone/transform/FSCoder.java
   dev/dev-2-2/src/com/flagstone/transform/FSDefineButton.java
   dev/dev-2-2/src/com/flagstone/transform/FSDefineFont.java
   dev/dev-2-2/src/com/flagstone/transform/FSDefineFont2.java
   dev/dev-2-2/src/com/flagstone/transform/FSDefineImage2.java
   dev/dev-2-2/src/com/flagstone/transform/FSDefineJPEGImage2.java
   dev/dev-2-2/src/com/flagstone/transform/FSDefineJPEGImage3.java
   dev/dev-2-2/src/com/flagstone/transform/FSDefineShape.java
   dev/dev-2-2/src/com/flagstone/transform/FSDefineShape2.java
   dev/dev-2-2/src/com/flagstone/transform/FSDefineShape3.java
   dev/dev-2-2/src/com/flagstone/transform/FSDoAction.java
   dev/dev-2-2/src/com/flagstone/transform/FSInitialize.java
   dev/dev-2-2/src/com/flagstone/transform/FSPlaceObject2.java
   dev/dev-2-2/src/com/flagstone/transform/FSProtect.java
   dev/dev-2-2/src/com/flagstone/transform/FSShape.java
   dev/dev-2-2/src/com/flagstone/transform/FSText.java
   dev/dev-2-2/src/com/flagstone/transform/FSVideoFrame.java
   dev/dev-2-2/src/com/flagstone/transform/Transform.java
   dev/dev-2-2/src/com/flagstone/transform/examples/Import.java
   dev/dev-2-2/src/com/flagstone/transform/test/FSColorTest.java
   dev/dev-2-2/src/com/flagstone/transform/test/FSSetBackgroundColorTest.java
   dev/dev-2-2/src/com/flagstone/transform/tools/TextDump.java
   dev/dev-2-2/src/com/flagstone/transform/util/FSImageConstructor.java
   dev/dev-2-2/src/com/flagstone/transform/util/FSTextConstructor.java
   dev/dev-2-2/src/com/flagstone/transform/util/TransformUtil.java
   dev/dev-2-2/test.xml
   dev/dev-2-2/test/suites/FSImageConstructor.xml
   dev/dev-2-2/test/suites/FSMovie.xml
   dev/dev-2-2/test/suites/FSMovieReference.xml
   dev/dev-2-2/test/suites/FSSetBackgroundColor.xml
   dev/dev-2-2/test/suites/FSSoundConstructor.xml
   dev/dev-2-2/test/suites/FSTextConstructor.xml
   dev/dev-2-2/test/suites/TextDump.xml
   dev/dev-2-2/test/suites/Transform.xml
Log:
Merged changes from 2.1.4 into branch.

Modified: dev/dev-2-2/build.xml
===================================================================
--- dev/dev-2-2/build.xml	2006-10-01 16:18:31 UTC (rev 234)
+++ dev/dev-2-2/build.xml	2006-11-30 14:34:12 UTC (rev 235)
@@ -37,7 +37,7 @@
 
     </description>
 
-    <property name="version" value="2.1.1"/>
+    <property name="version" value="2.1.4"/>
     
     <property name="src.dir" location="src"/>
     <property name="lib.dir" location="lib"/>
@@ -55,6 +55,7 @@
     <property name="doc.root.dir" location="doc"/>
     <property name="doc.css.dir" value="${doc.root.dir}/css"/>
     <property name="doc.datasheet.dir" value="${doc.root.dir}/datasheets"/>
+    <property name="doc.release.dir" value="${doc.root.dir}/releases"/>
         
 <!-- **********************************************************
          Major targets for compiling and packaging the classes.

Modified: dev/dev-2-2/developer.xml
===================================================================
--- dev/dev-2-2/developer.xml	2006-10-01 16:18:31 UTC (rev 234)
+++ dev/dev-2-2/developer.xml	2006-11-30 14:34:12 UTC (rev 235)
@@ -72,17 +72,28 @@
         </copy>
 
         <copy todir="${dist.dir}/doc" overwrite="true">
-            <fileset dir="doc"/>
+            <fileset dir="doc">
+                <exclude name="css/**" />
+                <exclude name="web/**" />
+            </fileset>
         </copy>
 
         <copy todir="${dist.dir}/test" overwrite="true">
             <fileset dir="test">
-                <include name="data/readme.txt" />
                 <include name="suites/*" />
-                <include name="benchmarks/*" />
+                <include name="data/*" />
+                <include name="results/readme.txt" />
+                <include name="reports/readme.txt" />
             </fileset>
         </copy>
 
+        <copy todir="${dist.dir}/lib" overwrite="true">
+            <fileset dir="lib">
+                <include name="testng-4.7-jdk14.jar" />
+                <include name="testng-4.7-jdk15.jar" />
+            </fileset>
+        </copy>
+
         <copy todir="${dist.dir}" overwrite="true">
             <fileset dir=".">
                 <include name="build.xml" />
@@ -117,49 +128,5 @@
         <echo file="${dist.root.dir}/${dist.name}-gpg.txt" append="true" 
             message="gpg --local-user support --armor --detach-sign --output ${dist.name}.zip.asc ${dist.name}.zip"/>
     </target>
-
-    <target name="patch" description="Release source code for classes in advance of a release">
-        
-        <mkdir dir="${dist.dir}"/>
-            
-        <copy todir="${patch.dir}/src" overwrite="true">
-            <fileset dir="${src.dir}">
-                <include name="${package.dir}/FSPush.java" />
-                <include name="${package.dir}/FSProperty.java" />
-                <include name="${package.dir}/FSDefineJPEGImage2.java" />
-                <include name="${package.dir}/FSDefineJPEGImage3.java" />
-            </fileset>
-        </copy>
-
-        <copy todir="${dist.dir}/doc" overwrite="true">
-            <fileset dir="doc"/>
-        </copy>
-
-        <tar destfile="${dist.root.dir}/${patch.name}.tar.gz"
-             basedir="${patch.dir}"
-             compression="gzip"
-        />
-        
-        <exec dir="${dist.root.dir}" executable="md5">
-            <arg value="-n" />
-            <arg value="-o${patch.name}.tar.md5" />
-            <arg value="${patch.name}.tar.gz" />
-        </exec>
-        
-        <zip destfile="${dist.root.dir}/${patch.name}.zip"
-             basedir="${patch.dir}"
-        />
-
-        <exec dir="${dist.root.dir}" executable="md5">
-            <arg value="-n" />
-            <arg value="-o${patch.name}.zip.md5" />
-            <arg value="${patch.name}.zip" />
-        </exec>
-        
-        <echo file="${dist.root.dir}/${patch.name}-gpg.txt" append="false" 
-            message="gpg --local-user support --armor --detach-sign --output ${patch.name}.tar.asc ${patch.name}.tar.gz${line.separator}"/>
-        <echo file="${dist.root.dir}/${patch.name}-gpg.txt" append="true" 
-            message="gpg --local-user support --armor --detach-sign --output ${patch.name}.zip.asc ${patch.name}.zip"/>
-    </target>
  
 </project>

Modified: dev/dev-2-2/doc/CHANGES.txt
===================================================================
--- dev/dev-2-2/doc/CHANGES.txt	2006-10-01 16:18:31 UTC (rev 234)
+++ dev/dev-2-2/doc/CHANGES.txt	2006-11-30 14:34:12 UTC (rev 235)
@@ -1,3 +1,131 @@
+2006-09-28 - smackay at flagstonesoftware.com
+  
+    * Released version 2.1.4.
+
+2006-09-22 - smackay at flagstonesoftware.com
+
+    * FSImageConstructor.java: fixed bug in setIndexedImage() and setColorImage()
+      where the format attribute was being incorrectly checked for a valid format 
+      instead of the encoding argument passed to the method.
+
+    * Added readme files to the reports and results directories just in case 
+      anyone is astonished that they are empty.
+      
+    * Restructured the test/data directory to reduce the number of files shipped
+      with the release.
+      
+    * Removed the test suites for benchmarking as the included Flash files that
+      now only contain a sample of data structures for a given class are too small 
+      to create reliable benchmakr numbers.
+      
+    * Added bug 8866 to the list of issues.
+
+2006-09-12 - smackay at flagstonesoftware.com
+
+    * Transparent colours in indexed PNG images are now displayed correctly.
+      The colour channels must be set to zero otherwise the colour will be 
+      displayed opaque.
+      
+    * updated docs on latest bugs and next release.  
+
+2006-09-10 - smackay at flagstonesoftware.com
+
+    * updated docs on latest bugs and next release.
+    
+    * FSTextConstructor.defineTextBlock now accounts for the descent of the last
+      line of text.
+      
+    * Contributed fix by myhlam (from the Flagstone forums) that correctly 
+      encodes the object when no style information is defined.
+      
+    * corrected an error in the example to display text using an imported font.
+    
+    * updated FSDefineFont and FSDefineFont2 to start decoding a glyph based on
+      the calculated position in the file using the offset table. This allow 
+      files generated by pdf2swf from SWFTools to be decoded correctly. The 
+      change makes the process of decoding glyphs more robust in the face of 
+      errors.
+      
+    * The test for decoding a shape is now made in the FSDefineShape[n] class 
+      rather than incorrectly in the FSShape class.
+
+2006-09-02 - denis at fireflydesign.com
+
+    * fixed improperly initialized identifier in FSVideoFrame(int, int, byte[]).
+
+2006-06-29 - smackay at flagstonesoftware.com
+
+    * added public byte[] getEncodedActions() method to allow access to actions
+      encoded as binary data in the following classes: FSButtonEvent, 
+      FSClipEvent, FSDefineButton, FSDoAction and FSInitialize.
+    
+2006-06-29 - smackay at flagstonesoftware.com
+
+    * Restructured the files used to test the classes. The Flash files now
+      contain a sample of the encoded data structures for a given class. This
+      limits the size of the files which still providing useful test coverage.
+
+2006-06-28 - smackay at flagstonesoftware.com
+
+    * FSButtonSound: corrected a bug where the FSSound objects for the RollOver 
+      and RollOut button events were swapped.
+
+2006-06-27 - smackay at flagstonesoftware.com
+
+    * FSProtect: fixed bug in copy constructor so null passwords do not 
+      raise a NullPointerException.
+
+2006-06-26 - smackay at flagstonesoftware.com
+
+    * Added class FSClassTest to test package for test shared between the 
+      different test classes.
+      
+    * Completed the test class FSSetBackgroundColorTest.
+    
+    * Added tests for FSColor, FSShowFrame and FSProtect.
+    
+    * Simplified test suites specification to remove groups and simply run 
+      all the tests for a given class.
+      
+    * Fixed a bug in FSCoder where the buffer was not resized correctly if 
+      an array of bytes larger than half the current buffer size was written.
+
+2006-06-25 - smackay at flagstonesoftware.com
+
+    * Corrected bug in FSPlaceObject2.equals() that did include result from
+      comparing other attributes when comparing encoded actions.
+      
+    * The context variable, version is now publicly accessible - this should 
+      only be used for testing.
+      
+    * Updated FSColorTest and added more test data.
+      
+2006-06-20 - smackay at flagstonesoftware.com
+
+    * Fixed bug in FSDefinedJPEGImage2 and FSDefinedJPEGImage3 where the 
+      encoding table could not be set to null (to create an empty table).
+
+2006-06-11 - smackay at flagstonesoftware.com
+
+    * Confirmed integration of TestNG into ant buils file, test.xml.
+    
+    * Backed out changes to JPEG image classes - again - they were added again 
+      before the dev-2-2 branch was created.
+      
+2006-06-05 - smackay at flagstonesoftware.com
+
+    * Fixed bug in TextDump which was not including the actions which make up
+      the body of the function definition.
+
+2006-04-03 - denis at fireflydesign.com
+
+    * Always use 6 byte header for DefineLosslessImage2 (FSDefineImage2) because
+      of bug in Flash players (same was already being done for FSDefineImage).
+
+2006-04-03 - smackay at flagstonesoftware.com
+
+    * Released 2.1.2.
+
 2006-04-01 - smackay at flagstonesoftware.com
 
     * Fixed a bug in FSTextConstructor.defineFont() where the character code was
@@ -4,6 +132,11 @@
       being set to the index of a glyph on the array rather than the actual
       character code.
       
+    * Created branch dev/dev-2-2 for development work on the new release.
+    
+    * Backed out changes to JPEG image classes - they are included in the 
+      dev-2-2 branch.
+      
 2006-03-31 - smackay at flagstonesoftware.com
 
     * Added advanceForChar(char, int) method to FSTextConstrutor so individual

Modified: dev/dev-2-2/doc/LICENCE.txt
===================================================================
--- dev/dev-2-2/doc/LICENCE.txt	2006-10-01 16:18:31 UTC (rev 234)
+++ dev/dev-2-2/doc/LICENCE.txt	2006-11-30 14:34:12 UTC (rev 235)
@@ -1,7 +1,7 @@
 /*
- * All the files in this library, except those in the src/transform/contrib 
- * directory, are  covered under the terms of the Berkeley Software Distribution 
- * (BSD) License:
+ * All the files in this library, except those in the src/transform/contrib, 
+ * test/data and lib directories, are  covered under the terms of the Berkeley 
+ * Software Distribution (BSD) License:
  *
  * Copyright (c) 2001-2006 Flagstone Software Ltd. All rights reserved.
  *

Modified: dev/dev-2-2/doc/README.txt
===================================================================
--- dev/dev-2-2/doc/README.txt	2006-10-01 16:18:31 UTC (rev 234)
+++ dev/dev-2-2/doc/README.txt	2006-11-30 14:34:12 UTC (rev 235)
@@ -24,6 +24,9 @@
 distribute the code in source and/or binary form as long as you respect
 the original copyright. Please see the LiCENCE.txt file for exact terms.
 
+The class libraries shipped with Transform in the lib directory each have their 
+own licence. For more details please see the 'Libraries' section below.
+
 -----------------
   Contributions
 -----------------
@@ -68,10 +71,9 @@
 and decoding Flash files correctly. The tests use the TestNG framework developed 
 by Cedric Beust, http://www.testng.org.
 
-To run the tests you will need to download the latest version of the TestNG from
-www.testng.com. Two versions of TestNG are available for Java 1.4 and Java 1.5
-depending on which version of Java you are using. Place the testNG jar file in
-the lib directory of the Transform framework.
+The lib directory of the release contains the jar files neccessary to run the
+TestNG suites. Two versions of TestNG are available for Java 1.4 and Java 1.5
+depending on which version of Java you are using.
 
 The Ant build file, test.xml, contains the following targets to run the tests:
 
@@ -88,36 +90,38 @@
 test while the report generated while testing the entire framework is written
 to the directory, Transform.
 
----------------------------------
-  Using Flash Files For Testing
----------------------------------
-The directory test/data/movies is designed to hold sets of movies from each 
-version of Flash which are used when testing the classes in the Transform 
-framework, particularly the FSMovie class.
+---------------------------
+  Using Files For Testing
+---------------------------
+The directory test/data is designed to hold sets of files that can be used to
+test the classes in the framework. The files augment the test patterns in the
+unit tests. This is particularly important for more complex classes such as 
+images, fonts and sounds where the volume and/or variation in data can be 
+significant.
 
-The files augment the unit test data to ensure that real-world files, 
-particularly those generatd by third-party applications, can be decoded and 
-encoded correctly.
+The directories are organized according to the type of file that is used in 
+testing: 
 
-Separate directories are used for each version of Flash as the file format 
-changes and the tests are designed to verify that a specific version of Flash is
-supported rather than simply the latest version from Macromedia.
+test
+  |
+  +- data
+	   |
+	   +- swf
+	   +- ttf
+	   +- bmp
+	   +- png
+       
+        
+The swf directory contain sample Flash files with a representative selection
+of encoded data structures for a particular class. These files were extracted
+from 'real-world' Flash files and so provide a useful sanity check for Flash 
+files that will be processed with the Transform framework.
 
--------------
-  IMPORTANT
--------------
-The directories list here are distributed empty to avoid any copyright or other 
-licencing issues. Place any sample Flash (.swf) files that you want to use to 
-run the tests in the respective directories - the 4th byte of the encoded Flash 
-file contains the version number.
+These files have been assembled from a number of different sources. Different 
+sets of files such as fonts and images are subject to specific terms and 
+conditions however all can be distributed by Flagstone as part of this package.
+Details of the terms and conditions are included in each directory.
 
-For more information on the tests see:
-
-    src/com/flagstone/transform/test/FSMovieTest.java
-    test/suites/FSMovie.xml
-
-to see how the Flash files are used in testing.
-
 -----------------------
   Using the Framework
 -----------------------
@@ -136,6 +140,221 @@
     com.flagstone.transform.examples.*;
     com.flagstone.transform.test.*;
 
+-------------
+  Libraries
+-------------
+Transform SWF is distributed with the following libraries:
+
+    * TestNG from Cedric Beust, et al, http://www.testng.org/
+    
+These libraries are not covered by the licence associated with Transform. 
+Details of the licence terms are listed below:
+
+----------
+  TestNG 
+----------
+                                 Apache License
+                           Version 2.0, January 2004
+                        http://www.apache.org/licenses/
+
+   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
+
+   1. Definitions.
+
+      "License" shall mean the terms and conditions for use, reproduction,
+      and distribution as defined by Sections 1 through 9 of this document.
+
+      "Licensor" shall mean the copyright owner or entity authorized by
+      the copyright owner that is granting the License.
+
+      "Legal Entity" shall mean the union of the acting entity and all
+      other entities that control, are controlled by, or are under common
+      control with that entity. For the purposes of this definition,
+      "control" means (i) the power, direct or indirect, to cause the
+      direction or management of such entity, whether by contract or
+      otherwise, or (ii) ownership of fifty percent (50%) or more of the
+      outstanding shares, or (iii) beneficial ownership of such entity.
+
+      "You" (or "Your") shall mean an individual or Legal Entity
+      exercising permissions granted by this License.
+
+      "Source" form shall mean the preferred form for making modifications,
+      including but not limited to software source code, documentation
+      source, and configuration files.
+
+      "Object" form shall mean any form resulting from mechanical
+      transformation or translation of a Source form, including but
+      not limited to compiled object code, generated documentation,
+      and conversions to other media types.
+
+      "Work" shall mean the work of authorship, whether in Source or
+      Object form, made available under the License, as indicated by a
+      copyright notice that is included in or attached to the work
+      (an example is provided in the Appendix below).
+
+      "Derivative Works" shall mean any work, whether in Source or Object
+      form, that is based on (or derived from) the Work and for which the
+      editorial revisions, annotations, elaborations, or other modifications
+      represent, as a whole, an original work of authorship. For the purposes
+      of this License, Derivative Works shall not include works that remain
+      separable from, or merely link (or bind by name) to the interfaces of,
+      the Work and Derivative Works thereof.
+
+      "Contribution" shall mean any work of authorship, including
+      the original version of the Work and any modifications or additions
+      to that Work or Derivative Works thereof, that is intentionally
+      submitted to Licensor for inclusion in the Work by the copyright owner
+      or by an individual or Legal Entity authorized to submit on behalf of
+      the copyright owner. For the purposes of this definition, "submitted"
+      means any form of electronic, verbal, or written communication sent
+      to the Licensor or its representatives, including but not limited to
+      communication on electronic mailing lists, source code control systems,
+      and issue tracking systems that are managed by, or on behalf of, the
+      Licensor for the purpose of discussing and improving the Work, but
+      excluding communication that is conspicuously marked or otherwise
+      designated in writing by the copyright owner as "Not a Contribution."
+
+      "Contributor" shall mean Licensor and any individual or Legal Entity
+      on behalf of whom a Contribution has been received by Licensor and
+      subsequently incorporated within the Work.
+
+   2. Grant of Copyright License. Subject to the terms and conditions of
+      this License, each Contributor hereby grants to You a perpetual,
+      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
+      copyright license to reproduce, prepare Derivative Works of,
+      publicly display, publicly perform, sublicense, and distribute the
+      Work and such Derivative Works in Source or Object form.
+
+   3. Grant of Patent License. Subject to the terms and conditions of
+      this License, each Contributor hereby grants to You a perpetual,
+      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
+      (except as stated in this section) patent license to make, have made,
+      use, offer to sell, sell, import, and otherwise transfer the Work,
+      where such license applies only to those patent claims licensable
+      by such Contributor that are necessarily infringed by their
+      Contribution(s) alone or by combination of their Contribution(s)
+      with the Work to which such Contribution(s) was submitted. If You
+      institute patent litigation against any entity (including a
+      cross-claim or counterclaim in a lawsuit) alleging that the Work
+      or a Contribution incorporated within the Work constitutes direct
+      or contributory patent infringement, then any patent licenses
+      granted to You under this License for that Work shall terminate
+      as of the date such litigation is filed.
+
+   4. Redistribution. You may reproduce and distribute copies of the
+      Work or Derivative Works thereof in any medium, with or without
+      modifications, and in Source or Object form, provided that You
+      meet the following conditions:
+
+      (a) You must give any other recipients of the Work or
+          Derivative Works a copy of this License; and
+
+      (b) You must cause any modified files to carry prominent notices
+          stating that You changed the files; and
+
+      (c) You must retain, in the Source form of any Derivative Works
+          that You distribute, all copyright, patent, trademark, and
+          attribution notices from the Source form of the Work,
+          excluding those notices that do not pertain to any part of
+          the Derivative Works; and
+
+      (d) If the Work includes a "NOTICE" text file as part of its
+          distribution, then any Derivative Works that You distribute must
+          include a readable copy of the attribution notices contained
+          within such NOTICE file, excluding those notices that do not
+          pertain to any part of the Derivative Works, in at least one
+          of the following places: within a NOTICE text file distributed
+          as part of the Derivative Works; within the Source form or
+          documentation, if provided along with the Derivative Works; or,
+          within a display generated by the Derivative Works, if and
+          wherever such third-party notices normally appear. The contents
+          of the NOTICE file are for informational purposes only and
+          do not modify the License. You may add Your own attribution
+          notices within Derivative Works that You distribute, alongside
+          or as an addendum to the NOTICE text from the Work, provided
+          that such additional attribution notices cannot be construed
+          as modifying the License.
+
+      You may add Your own copyright statement to Your modifications and
+      may provide additional or different license terms and conditions
+      for use, reproduction, or distribution of Your modifications, or
+      for any such Derivative Works as a whole, provided Your use,
+      reproduction, and distribution of the Work otherwise complies with
+      the conditions stated in this License.
+
+   5. Submission of Contributions. Unless You explicitly state otherwise,
+      any Contribution intentionally submitted for inclusion in the Work
+      by You to the Licensor shall be under the terms and conditions of
+      this License, without any additional terms or conditions.
+      Notwithstanding the above, nothing herein shall supersede or modify
+      the terms of any separate license agreement you may have executed
+      with Licensor regarding such Contributions.
+
+   6. Trademarks. This License does not grant permission to use the trade
+      names, trademarks, service marks, or product names of the Licensor,
+      except as required for reasonable and customary use in describing the
+      origin of the Work and reproducing the content of the NOTICE file.
+
+   7. Disclaimer of Warranty. Unless required by applicable law or
+      agreed to in writing, Licensor provides the Work (and each
+      Contributor provides its Contributions) on an "AS IS" BASIS,
+      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
+      implied, including, without limitation, any warranties or conditions
+      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
+      PARTICULAR PURPOSE. You are solely responsible for determining the
+      appropriateness of using or redistributing the Work and assume any
+      risks associated with Your exercise of permissions under this License.
+
+   8. Limitation of Liability. In no event and under no legal theory,
+      whether in tort (including negligence), contract, or otherwise,
+      unless required by applicable law (such as deliberate and grossly
+      negligent acts) or agreed to in writing, shall any Contributor be
+      liable to You for damages, including any direct, indirect, special,
+      incidental, or consequential damages of any character arising as a
+      result of this License or out of the use or inability to use the
+      Work (including but not limited to damages for loss of goodwill,
+      work stoppage, computer failure or malfunction, or any and all
+      other commercial damages or losses), even if such Contributor
+      has been advised of the possibility of such damages.
+
+   9. Accepting Warranty or Additional Liability. While redistributing
+      the Work or Derivative Works thereof, You may choose to offer,
+      and charge a fee for, acceptance of support, warranty, indemnity,
+      or other liability obligations and/or rights consistent with this
+      License. However, in accepting such obligations, You may act only
+      on Your own behalf and on Your sole responsibility, not on behalf
+      of any other Contributor, and only if You agree to indemnify,
+      defend, and hold each Contributor harmless for any liability
+      incurred by, or claims asserted against, such Contributor by reason
+      of your accepting any such warranty or additional liability.
+
+   END OF TERMS AND CONDITIONS
+
+   APPENDIX: How to apply the Apache License to your work.
+
+      To apply the Apache License to your work, attach the following
+      boilerplate notice, with the fields enclosed by brackets "[]"
+      replaced with your own identifying information. (Don't include
+      the brackets!)  The text should be enclosed in the appropriate
+      comment syntax for the file format. We also recommend that a
+      file or class name and description of purpose be included on the
+      same "printed page" as the copyright notice for easier
+      identification within third-party archives.
+
+   Copyright [yyyy] [name of copyright owner]
+
+   Licensed under the Apache License, Version 2.0 (the "License");
+   you may not use this file except in compliance with the License.
+   You may obtain a copy of the License at
+
+       http://www.apache.org/licenses/LICENSE-2.0
+
+   Unless required by applicable law or agreed to in writing, software
+   distributed under the License is distributed on an "AS IS" BASIS,
+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+   See the License for the specific language governing permissions and
+   limitations under the License.
+
 --------------------------
   Additional Information
 --------------------------

Deleted: dev/dev-2-2/doc/releases/index.html
===================================================================
--- dev/dev-2-2/doc/releases/index.html	2006-10-01 16:18:31 UTC (rev 234)
+++ dev/dev-2-2/doc/releases/index.html	2006-11-30 14:34:12 UTC (rev 235)
@@ -1,191 +0,0 @@
-<html>
-<head>
-<link type="text/css" href="style.css" rel="stylesheet">
-</head>
-
-<body>
-
-<h1>Release Summary for Transform SWF</h1>
-
-<p>Here is a brief rsummary of all the releases of the Transform SWF framework.
-The release notes link describe all the features, update and bug fixes included
-in each release.</P>
-
-<table class="summary">
-
-<tr class="heading">
-<th class="date">Date</th>
-<th class="version">Version</th>
-<th class="description">Description</th>
-<th class="description">Details</th>
-</tr>
-
-<tr class="odd">
-<td class="date">13th March 2006</td>
-<td class="version">2.1.1</td>
-<td class="description">
-Bug fix for the infinite loop problem when decoding MP3 files.</td>
-<td class="release">
-<a href="transform-2.1.1.html">release notes</a>
-</td>
-</tr>
-
-<tr class="even">
-<td class="date">7th March 2006</td>
-<td class="version">2.1</td>
-<td class="description">
-Release now integrates Transform Utilities. Brought forward several improvements
-planned for version 3.0.
-</td>
-<td class="release">
-<a href="transform-2.1.html">release notes</a>
-</td>
-</tr>
-
-<tr class="odd">
-<td class="date">20th February 2006</td>
-<td class="version">2.0.5</td>
-<td class="description">
-More bug fixes discovered using new test suites.
-</td>
-<td class="release">
-<a href="transform-2.0.5.html">release notes</a>
-</td>
-</tr>
-
-<tr class="even">
-<td class="date">19th January 2006</td>
-<td class="version">2.0.4</td>
-<td class="description">
-Source code patch for bugs reported in FSPush and handling JPEG images.
-</td>
-<td class="release">
-<a href="transform-2.0.4-patch-1.html">release notes</a>
-</td>
-</tr>
-
-<tr class="odd">
-<td class="date">4th October 2005</td>
-<td class="version">2.0.4</td>
-<td class="description">
-Simplified package organisation and fixed coordinate transform bug.
-</td>
-<td class="release">
-<a href="transform-2.0.4.html">release notes</a>
-</td>
-</tr>
-
-<tr class="even">
-<td class="date">12th October 2004</td>
-<td class="version">2.0.3</td>
-<td class="description">
-Transform SWF is now covered by a BSD license.
-</td>
-<td class="release">
-<a href="transform-2.0.3.html">release notes</a>
-</td>
-</tr>
-
-<tr class="odd">
-<td class="date">14th June 2004</td>
-<td class="version">2.0.2</td>
-<td class="description">
-Sets the default signature for the FSMovie class correctly. Adds methods to classes containing actions so binary encoded actions, generated by Translate AS1, can be added to movies.
-</td>
-<td class="release">
-<a href="transform-2.0.2.html">release notes</a>
-</td>
-</tr>
-
-<tr class="even">
-<td class="date">6th June 2004</td>
-<td class="version">2.0.1</td>
-<td class="description">
-Fixes a bug in the FSProtect, FSEnableDebugger and FSEnableDebugger2 classes which fails to decode the password field correctly.
-</td>
-<td class="release">
-<a href="transform-2.0.1.html">release notes</a>
-</td>
-</tr>
-
-<tr class="odd">
-<td class="date">6th April 2004</td>
-<td class="version">2.0.0</td>
-<td class="description">
-Completely restructured and overhauled the entire framework to boost performance and reduce code size.
-</td>
-<td class="release">
-<a href="transform-2.0.0.html">release notes</a>
-</td>
-</tr>
-
-<tr class="even">
-<td class="date">3rd October 2003</td>
-<td class="version">1.4.1</td>
-<td class="description">
-A minor maintenance release fixing bugs reported since the last release.
-</td>
-<td class="release">
-<a href="transform-1.4.1.html">release notes</a>
-</td>
-</tr>
-
-<tr class="odd">
-<td class="date">10th September 2003</td>
-<td class="version">1.4</td>
-<td class="description">
-A significant upgrade with changes reflecting the lessons learned when the code base was ported for the C++ version of Transform. In particular the datasheets for all the classes have been completely overhauled.
-</td>
-<td class="release">
-<a href="transform-1.4.0.html">release notes</a>
-</td>
-</tr>
-
-<tr class="even">
-<td class="date">30th January 2003</td>
-<td class="version">1.3</td>
-<td class="description">
-This is the third maintenance release of the framework. Two new classes FSFramedMovie and FSFrame have been added to provide a higher level view of creating and manipulating movies. Several bugs have been fixed notably one in getImage() method on the FSDefineImage and FSDefineImage2 that caused ArrayOutOfBounds exceptions to be thrown. Three, previously unsupported, request types have been added to the FSGetUrl2 class.
-</td>
-<td class="release">
-<a href="transform-1.3.0.html">release notes</a>
-</td>
-</tr>
-
-<tr class="odd">
-<td class="date">24th July 2002</td>
-<td class="version">1.2</td>
-<td class="description">
-This is the second maintenance release of the framework. The documentation for all the classes has been updated. The validation code designed to catch errors when setting attributes and when objects are encoded has been completely overhauled. New classes have been added to support the Import and Export tags to support libraries of objects that can be reused in new Flash files.<br/><br/>
-The only structural change has been the removal of the FSValidationException class. The FSMovie class throws the java.util.zip.DataFormatException instead. Code using the framework will need to be recompiled in order to use the new release.
-</td>
-<td class="release">
-<a href="transform-1.2.0.html">release notes</a>
-</td>
-</tr>
-
-<tr class="even">
-<td class="date">29th May 2002</td>
-<td class="version">1.1</td>
-<td class="description">
-This is the first maintenance release of the framework. Several classes and methods were renamed to make the code using the framework classes easier to write and understand. Please review the changes carefully. No structural changes have been made - all the classes implement the same functionality, however code using the framework will need to be recompiled in order to use the new release.
-</td>
-<td class="release">
-<a href="transform-1.1.0.html">release notes</a>
-</td>
-</tr>
-
-<tr class="odd">
-<td class="date">27th March 2002</td>
-<td class="version">1.0</td>
-<td class="description">
-This is the first public release of the framework.
-</td>
-<td class="release">
-<a href="transform-1.0.0.html">release notes</a>
-</td>
-</tr>
-
-</table>
-</body>
-</html>

Deleted: dev/dev-2-2/doc/releases/style.css
===================================================================
--- dev/dev-2-2/doc/releases/style.css	2006-10-01 16:18:31 UTC (rev 234)
+++ dev/dev-2-2/doc/releases/style.css	2006-11-30 14:34:12 UTC (rev 235)
@@ -1,26 +0,0 @@
-a:link { text-decoration: none; }
-a:visited { color: darkred; text-decoration: none; }
-a:active { text-decoration: none; }
-a:hover { color: #000066; text-decoration: none; }
-
-h1 { font-size: 140%; background-color: darkgray; padding: 3px 10px; }
-h2 { font-size: 120%; background-color: darkgray; padding: 3px 10px; }
-h3 { font-size: 110%; margin-left: 10px; margin-right: 10px; margin-bottom: 0px; }
-
-p { margin-left: 10px; margin-right: 10px; margin-top: 0px; }
-
-pre { margin-left: 10px; margin-right: 10px; font-size: 90%; }
-
-ul { margin-left: 40px; margin-right: 10px; margin-top: 10px; margin-bottom: 10px; }
-ul p { margin-left: 0px; margin-top: 10px; margin-bottom: 10px; }
-ul ol { margin-left: 40px; margin-right: 10px; margin-top: 10px; margin-bottom: 10px; }
-
-table { margin-left: 40px; margin-right: 40px; border-collapse: collapse; }
-th { background-color: darkgray; padding: 5px; text-align: left; }
-td { padding: 5px; }
-
-table.summary { border: thin solid black; }
-tr.even { background-color: lightgrey; }
-td.date { white-space: nowrap; vertical-align:text-top; }
-td.version { white-space: nowrap; vertical-align:text-top; }
-td.release { white-space: nowrap; vertical-align:text-top; }

Deleted: dev/dev-2-2/doc/releases/transform-1.0.0.html
===================================================================
--- dev/dev-2-2/doc/releases/transform-1.0.0.html	2006-10-01 16:18:31 UTC (rev 234)
+++ dev/dev-2-2/doc/releases/transform-1.0.0.html	2006-11-30 14:34:12 UTC (rev 235)
@@ -1,42 +0,0 @@
-<html>
-<head>
-<link type="text/css" href="style.css" rel="stylesheet">
-</head>
-
-<body>
-
-<h1>Release Notes for Transform SWF 1.0</h1>
-
-<p>Version 1.0 is the first public release of the framework. The framework currently supports Flash 5.</p>
-
-<h2>Using the Framework</h2>
-
-<P>The Developer Edition of the framework is available free of charge, for development purposes only, on the download page. To use the classes in your code use the following import statement:</P>
-
-<pre>
-import com.flagstone.transform.*;
-</pre>
-
-<h2>Known Issues</h2>
-
-<ol>
-<li>The following tags are not currently supported:<BR><BR>
-<ul>
-<li>FreeCharacter</li>
-<li>PathsArePostscript</li>
-<li>SyncFrame</li>
-<li>FreeAll</li>
-<li>NameCharacter</li>
-<li>SerialNumber</li>
-<li>FrameTag</li>
-<li>GenCommand</li>
-<li>DefineCommandObj</li>
-<li>CharacterSet</li>
-<li>FontRef</li>
-<li>DefineBitsPrt</li>
-</ul>
-<BR>These tags are undocumented and are not commonly used in Flash files. When encountering one of these tags Transform SWF will decode it as an Unsupported Tag.
-</li>
-
-</body>
-</html>

Deleted: dev/dev-2-2/doc/releases/transform-1.1.0.html
===================================================================
--- dev/dev-2-2/doc/releases/transform-1.1.0.html	2006-10-01 16:18:31 UTC (rev 234)
+++ dev/dev-2-2/doc/releases/transform-1.1.0.html	2006-11-30 14:34:12 UTC (rev 235)
@@ -1,528 +0,0 @@
-<html>
-<head>
-<link type="text/css" href="style.css" rel="stylesheet">
-</head>
-
-<body>
-
-<h1>Release Notes for Transform SWF 1.1</h1>
-
-<p>Version 1.1 is a maintenance release, though the changes are extensive: several classes have been renamed and the names 
-of methods changed to make the code more intuitive and easier to write. In addition, methods, particularly constructors, 
-have been added to simplify the creation of objects.</p>
-
-<P>Originally Transform SWF used the same names for classes defined in Macromedia's Flash File Format Specification. 
-However some of the names assigned to tags and fields were not easy to understand. The following classes have been renamed 
-to make the contents of a Flash file more readable and intuitive:</P>
-
-<ul>
-<li>FSGlyphEntry renamed to FSCharacter.</li>
-<li>FSGlyphTextRecord renamed to FSTextRecord.</li>
-<li>FSStyleTextRecord renamed to FSTextStyle.</li>
-<li>FSKerningRecord renamed to FSKerning.</li>
-<li>FSDefineBitsLossless renamed to FSDefineImage.</li>
-<li>FSDefineBitsLossless2 renamed to FSDefineImage2.</li>
-<li>FSDefineBits renamed to FSDefineJPEGImage.</li>
-<li>FSDefineBitsJPEG2 renamed to FSDefineJPEGImage2.</li>
-<li>FSDefineBitsJPEG3 renamed to FSDefineJPEGImage3.</li>
-<li>FSStyleChange renamed to FSShapeStyle.</li>
-</ul>
-
-<P>The structure and function of the classes were not changed. A simple recompile is all that is required to use the updated names.</P>
-
-<H2>New Classes</H2>
-
-<P>The FSSerialNumber class was added to support the Serial Number tag from the Flash File Format Specification. This tag was 
-inserted into Flash files by Macromedia's Generator however the tag can be used to add an identification string to a Flash file.</P> 
-
-<H2>Class Changes</H2>
-
-<P>The following sections describe the changes made to each class.
-
-<h3>1. Pkg</h3>
-
-<P>Three new package flags were added:<P>
-
-<ul>
-<li>FONT_SIZE_IS_PIXELS</li>
-<li>LINE_WIDTHS_ARE_PIXELS</li>
-<li>IMAGE_SIZES_ARE_PIXELS</li>
-</ul>
-
-<P>All units in a Flash file are specified in twips, where 20 twips = 1 pixel. The addition of the new flags, complementing 
-the existing COORDINATES_ARE_PIXELS flag, allows a finer degree of control over which classes allow units to be specified in 
-pixels before being converted internally to twips. The only set of classes which do not fully support either twips or pixels 
-are the font and text classes - apart from specifying the font size. A fine degree of control is required to specify the 
-placement of characters rendered in a particular font and supporting pixels lead to rounding errors generating a less 
-aesthetically pleasing result.</P>
-
-<P><B>Localisation</B><BR>
-The set of methods supporting internationalized strings now allow the table of ResourceBundle objects to be specified as an 
-argument to the methods. This improves support for applications using Transform SWF.</P>
-
-<pre>
-    public static String localizedString(Map resourceTable, 
-                                         String tableName,
-                                         String keyName)
-    public static String localizedString(Map resourceTable, 
-                                         String tableName,
-                                         String keyName,
-                                         String argument)
-    public static String localizedString(Map resourceTable,
-                                         String tableName,
-                                         String keyName,
-                                         Object[] arguments)
-</pre>
-
-<P>The reportPackageInformation method is used to report information about either the Transform SWF package or any application 
-using Transform SWF. As with the localizedString methods a table of ResourceBundle objects is passed as an argument.</P>
-
-<pre>
-    public static void reportPackageInformation(Map resourceTable)
-</pre>
-
-<P>The method looks for a ResourceBundle stored in a <i>resourceTable</i> using the key "Package". From the ResourceBundle 
-strings with the following keys: "Application", "Copyright", "License" and "LicenseLocation" are printed on System.out.</P>
-
-<h3>2. FSColorTransform</h3>
-
-<P>The following constructors were added:</P>
-
-<pre>
-    FSColorTransform(int redTerm,
-                     int greenTerm,
-                     int blueTerm)
-    FSColorTransform(float multRed,
-                     float multGreen,
-                     float multBlue,
-                     int addRed,
-                     int addGreen,
-                     int addBlue)
-</pre>
-
-<P>The following constructor is now private:<P>
-
-<pre>
-    FSColorTransform()
-</pre>
-
-<P>This constructor is only used internally to the Transform SWF package and was made public by accident.</P>
-
-
-<h3>3. FSDefineBitsLossless</h3>
-
-<P>This class was <b>renamed</b> to FSDefineImage.</P>
-
-<P>Three constants, Lossless8Bit, Lossless16Bit and Lossless32Bit, that define the size, in bits, for each pixel in the 
-image have been removed. The size of the pixel, in bits, is now specified as an <b>int</b>. In the Developer Edition of 
-Transform SWF the value supplied is checked to ensure that it is one of the following: 8, 16 or 32.</P>
-
-<P>The following accessor methods have been renamed:</P>
-
-<table border="0" style="{ margin-left=6px; }">
-<tr><td>getFormat()</td><td>to</td><td>getPixelSize()</td></tr>
-<tr><td>setFormat(int)</td><td>to</td><td>setPixelSize(int)</td></tr>
-<tr><td>getColorTableSize()</td><td>to</td><td>getTableSize()</td></tr>
-<tr><td>setColorTableSize(int)</td><td>to</td><td>setTableSize(int)</td></tr>
-<tr><td>getImage()</td><td>to</td><td>getCompressedData()</td></tr>
-<tr><td>setImage(byte[])</td><td>to</td><td>setCompressedData(byte[])</td></tr>
-</table>
-
-<P>The getImage(), setImage() methods in Transform SWF 1.0 returned the color table and image compressed as a single 
-block of data. The methods have been renamed to be more accurate.</P>
-
-<P>The following methods were added:</P>
-
-<table border="0" style="{ margin-left=6px; }">
-<tr><td>getColorTable()</td><td>returns the uncompressed color table</td></tr>
-<tr><td>getImage(int)</td><td>returns the uncompressed image</td></tr>
-</table>
-    
-<P>The Package flag, IMAGE_SIZES_ARE_PIXELS, controls whether the values passed as arguments or returned by the following 
-methods can be specified in pixels or twips:</P>
-
-<table border="0" style="{ margin-left=6px; }">
-<tr><td>getWidth()</td></tr>
-<tr><td>setWidth(int)</td></tr>
-<tr><td>getHeight()</td></tr>
-<tr><td>setHeight(int)</td></tr>
-</table>
-
-<h3>4. FSDefineBitsLossless2</h3>
-
-<P>This class was <b>renamed</b> to FSDefineImage2.</P>
-
-<P>The class is now a sub-class of FSDefineImage (was FSDefineBitsLossless). It was a separate class for historical reasons.</P>
-
-
-<h3>5. FSJPEGTables</h3>
-
-<P>This class was <b>renamed</b> to FSJPEGEncodingTable. The name is more accurate as it encodes the quantization coding 
-table for a JPEG image./P>
-
-<P>The following constructors were added:</P>
-
-<table border="0" style="{ margin-left=6px; }">
-<tr><td>FSJPEGEncodingTable()</td><td>Constructs a new FSJPEGEncodingTable object with an empty encoding table.</td></tr>
-</table>
-
-<P>Defining a JPEG image using the FSDefineJPEGImage class requires an FSJPEGEncodingTable object to define the quantization 
-encoding table. The Flash Player will display an image correctly even when an FSJPEGEncodingTable object is created that does 
-not contain any quantization encoding data.</P>
-
-<h3>6. FSDefineBits</h3>
-
-<P>This class was <b>renamed</b> to FSDefineJPEGImage.</P>
-
-<P>The following methods were added:</P>
-
-<table border="0" style="{ margin-left=6px; }">
-<tr><td>FSDefineJPEGImage(String filename)</td><td>Constructs an FSDefineJPEGImage object with the image in the file, <i>filename</i></td></tr>
-<tr><td>getWidth()</td><td>returns the width of the image in twips or pixels.</td></tr>
-<tr><td>getHeight()</td><td>returns the height of the image in twips or pixels.</td></tr>
-</table>
-
-<P>The Package flag, IMAGE_SIZES_ARE_PIXELS, determines whether the sizes of the image are returned in twips or pixels - 20 twips = 1 pixel.</P>
-
-
-<h3>7. FSDefineBitsJPEG2</h3>
-
-<P>This class was <b>renamed</b> to FSDefineJPEGImage2.</P>
-
-<P>The following methods were added:</P>
-
-<table border="0" style="{ margin-left=6px; }">
-<tr>
-    <td>FSDefineJPEGImage2(int anIdentifer, byte[] imageBytes)</td>
-    <td>Constructs an FSDefineJPEGImage2 object with the image data and an empty encoding table.</i></td></tr>
-<tr>
-    <td>FSDefineJPEGImage2(int anIdentifer, String filename)</td>
-    <td>Constructs an FSDefineJPEGImage2 object with the image in the file, <i>filename</i></td></tr>
-<tr>
-    <td>getWidth()</td>
-    <td>returns the width of the image in twips or pixels.</td></tr>
-<tr>
-    <td>getHeight()</td>
-    <td>returns the height of the image in twips or pixels.</td></tr>
-</table>
-
-<P>The Package flag, IMAGE_SIZES_ARE_PIXELS, determines whether the sizes of the image are returned in twips or pixels - 
-20 twips = 1 pixel.</P>
-
-<P>The following accessor methods have been renamed:</P>
-
-<table border="0" style="{ margin-left=6px; }">
-<tr><td>getAlphaTable()</td><td>to</td><td>getAlphaTable()</td></tr>
-</table>
-
-<h3>8. FSDefineBitsJPEG3</h3>
-
-<P>This class was <b>renamed</b> to FSDefineJPEGImage3.</P>
-
-<P>The following methods were added:</P>
-
-<table border="0" style="{ margin-left=6px; }">
-<tr>
-    <td>FSDefineJPEGImage3(int anIdentifer, String filename)</td>
-    <td>Constructs an FSDefineJPEGImage3 object with the image in the file, <i>filename</i></td></tr>
-<tr>
-    <td>getWidth()</td>
-    <td>returns the width of the image in twips or pixels.</td></tr>
-<tr>
-    <td>getHeight()</td><td>returns the height of the image in twips or pixels.</td></tr>
-<tr>
-    <td>getUncompressedAlpha()</td><td>returns the uncompressed alpha channel information for each pixel in the image.</td></tr>
-<tr>
-    <td>setUncompressedAlpha()</td><td>sets the uncompressed alpha channel information for each pixel in the image.</td></tr>
-</table>
-
-<P>The Package flag, IMAGE_SIZES_ARE_PIXELS, determines whether the sizes of the image are returned in twips or pixels - 20 twips = 1 pixel.</P>
-
-<P>The following accessor methods have been renamed:</P>
-
-<table border="0" style="{ margin-left=6px; }">
-<tr>
-    <td>getAlphaTable()</td>
-    <td>to</td>
-    <td>getCompressedAlpha()</td></tr>
-<tr><td>setAlphaTable(byte[])</td>
-    <td>to</td>
-    <td>setCompressedAlpha(byte[])</td></tr>
-</table>
-
-<P>The alpha data is encoded as an array of zlib compressed bytes. The methods were renamed to be more accurate, particularly with the 
-addition of the getUncompressedAlpha() and setUncompressedAlpha() methods.</P>
-
-<h3>9. FSButtonEvent</h3>
-
-<P>The following methods were renamed:</P>
-
-<table border="0" style="{ margin-left=6px; }">
-<tr><td>codeForButtonEvents(ArrayList)</td><td>to</td><td>codeForButtonEvents(String[])</td></tr>
-</table>
-
-<P>The following methods were added:</P>
-
-<table border="0" style="{ margin-left=6px; }">
-<tr><td>codeForButtonEvents(int[])</td><td>added to complement the codeForButtonEvents(String[]) method.</td></tr>
-</table>
-
-<h3>10. FSButtonSound</h3>
-
-<P>The default constructor was updated:</P>
-
-<table border="0" style="{ margin-left=6px; }">
-<tr><td>FSButtonSound()</td><td>to</td><td>FSButtonSound(int buttonId, int eventCode, int soundId, FSSoundInfo soundInfo)
-</td></tr>
-</table>
-
-<h3>11. FSNewFunction</h3>
-
-<P>In the Developer Edition of Transform SWF the name of the function was checked to verify is was not a zero length string or null. 
-This was a bug since null method names are valid when defining a method for a user-defined object and the checking has been removed.</P>
-
-<h3>12. FSGlyphEntry</h3>
-
-<P>This class was <b>renamed</b> to FSCharacter.</P>
-
-<P>The following methods were renamed:</P>
-
-<table border="0" style="{ margin-left=6px; }">
-<tr><td>getGlyph()</td><td>to</td><td>getGlyphIndex()</td></tr>
-<tr><td>setGlyph()</td><td>to</td><td>setGlyphIndex()</td></tr>
-</table>
-
-<h3>13. FSGlyphTextRecord</h3>
-
-<P>This class was <b>renamed</b> to FSTextRecord.</P>
-
-<P>The following methods were renamed:</P>
-
-<table border="0" style="{ margin-left=6px; }">
-<tr><td>getGlyphs()</td><td>to</td><td>getCharacters()</td></tr>
-<tr><td>setGlyphs()</td><td>to</td><td>setCharacters()</td></tr>
-</table>
-
-<h3>14. FSKerningRecord</h3>
-
-<P>This class was <b>renamed</b> to FSKerning.</P>
-
-<P>The following methods were renamed:</P>
-
-<table border="0" style="{ margin-left=6px; }">
-<tr><td>getCode1()</td><td>to</td><td>getLeftIndex()</td></tr>
-<tr><td>getCode2()</td><td>to</td><td>getRightIndex()</td></tr>
-<tr><td>getAdjust()</td><td>to</td><td>getAdjustment()</td></tr>
-</table>
-
-<h3>15. FSDefineText2</h3>
-
-<P>The class is now a sub-class of FSDefineText. It was a separate class for historical reasons.</P>
-
-<h3>16. FSStyleChange</h3>
-
-<P>This class was <b>renamed</b> to FSShapeStyle.</P>
-
-<h3>17. FSLineStyle</h3>
-
-<P>The package flag, LINE_WIDTHS_ARE_PIXELS allows the width of the line can now be specified in twips or pixels.</P>
-
-<h3>18. FSMorphLineStyle</h3>
-
-<P>The package flag, LINE_WIDTHS_ARE_PIXELS allows the start and end line widths to be specified in twips or pixels.</P>
-
-<h3>19. FSDefineEditText</h3>
-
-<P>The FSDefineEditText class has a large number of attributes that define the appearance of the editable text field. Setting 
-the attributes for a number of text fields using the accessor methods can take many lines of code to execute.  A name has been 
-defined for each attribute. When used with the classes Boolean, Integer (to wrap boolean and int values respectively) and String, 
-the attributes can be set using key-value pairs defined in a Map class. The names for each of the attributes are:</P>
-
-<table border="0" style="{ margin-left=6px; }">
-<tr><th>Attribute Name</th><th>accessor methods</th></tr>
-<tr><td>WordWrapped</td><td>isWordWrapped(), setIsWordWrapped()</td></tr>
-<tr><td>Multiline</td><td>isMultiline(), setIsMultiline()</td></tr>
-<tr><td>Password</td><td>isPassword(), setIsPassword()</td></tr>
-<tr><td>ReadOnly</td><td>isReadOnly(), setIsReadOnly()</td></tr>
-<tr><td>Selectable</td><td>isSelectable(), setIsSelectable()</td></tr>
-<tr><td>Bordered</td><td>isBordered(), setIsBordered()</td></tr>
-<tr><td>Outlined</td><td>isOutlined(), setIsOutlined()</td></tr>
-<tr><td>FontId</td><td>getFontId(), setFontId()</td></tr>
-<tr><td>FontHeight</td><td>getFontHeight(), setFontHeight()</td></tr>
-<tr><td>Color</td><td>getColor(), setColor()</td></tr>
-<tr><td>MaxLength</td><td>getMaxLength(), setMaxLength()</td></tr>
-<tr><td>LeftMargin</td><td>getLeftMargin(), setLeftMargin()</td></tr>
-<tr><td>RightMargin</td><td>getRightMargin(), setRightMargin()</td></tr>
-<tr><td>Indent</td><td>getIndent(), setIndent()</td></tr>
-<tr><td>Leading</td><td>getLeading(), setLeading()</td></tr>
-<tr><td>VariableName</td><td>getVariable(), setVariable()</td></tr>
-<tr><td>InitialText</td><td>getInitial(), setInitial()</td></tr>
-</table>
-
-<P>The following methods were added:</P>
-
-<table border="0" style="{ margin-left=6px; }">
-<tr><td>FSDefineEditText(Hashtable)</td><td>constructs an FSDefineEditText object with the attributes initialized using the attributeName, 
-value pairs defined in the Hashtable.</td></tr>
-<tr><td>setAttributes(Hashtable)</td><td>sets the attributes using the attributeName, value pairs defined in the Hashtable.</td></tr>
-<tr><td>getAttributes()</td><td>gets the attributes are a series of attribute, value pairs.</td></tr>
-</table>
-
-<P>The package flag, FONT_SIZE_IS_PIXELS allows the size of the font to be specified in twips or pixels.</P>
-
-
-<h3>20. FSSound</h3>
-
-<P>This class only contained constant definitions and was removed. The fate of the constants was:</P>
-
-<table border="0" style="{ margin-left=6px; }">
-<tr><td>Rate5KHz</td><td>Now defined as a float with the value representing the rate a sound is played in KHz.</td></tr>
-<tr><td>Rate11KHz</td><td>Now defined as a float with the value specified in KHz.</td></tr>
-<tr><td>Rate22KHz</td><td>Now defined as a float with the value specified in KHz.</td></tr>
-<tr><td>Rate44KHz</td><td>Now defined as a float with the value specified in KHz.</td></tr>
-<tr><td>Size8Bit</td><td>The size of a sound sample in bits (8 or 16) is specified as an int.</td></tr>
-<tr><td>Size16Bit</td><td>The size of a sound sample in bits (8 or 16) is specified as an int.</td></tr>
-<tr><td>Mono</td><td>Now specified as the number of sound channels (1 = Mono, 2 = Stereo).</td></tr>
-<tr><td>Stereo</td><td>Now specified as the number of sound channels (1 = Mono, 2 = Stereo).</td></tr>
-<tr><td>SyncNoMultiple</td><td>Moved into the FSSoundInfo class.</td></tr>
-<tr><td>SyncStop</td><td>Moved into the FSSoundInfo class.</td></tr>
-<tr><td>None</td><td>Moved into the FSDefineSound class.</td></tr>
-<tr><td>ADPCM</td><td>Moved into the FSDefineSound class.</td></tr>
-<tr><td>MP3</td><td>Moved into the FSDefineSound class.</td></tr>
-</table>
-
-<h3>21. FSDefineSound</h3>
-
-<P>The rate attribute was previously defined as a constant with values: Rate5KHz, Rate11KHz, Rate22KHz or Rate44KHz. This has been 
-changed to a float with the rate a sound is played now specified in KHz. Valid values are 5.5, 11.0, 22.0 and 44.0. The attribute 
-was made a float to accommodate the 5.5KHz rate.</P>
-
-<P>The size of a sound sample was previously defined as a constant with values: Size8Bit and Size16Bit. This has been replaced by an 
-int specifying the sample size in bits directly - either 8 or 16.</P>
-
-<P>The sound type was previously defined as a constant with values: Mono and Stereo. This has been replaced by an int specifying 
-the number of channels in the sound - either 1 (Mono) or 2 (Stereo).</P>
-
-<P>The following methods were renamed:</P>
-
-<table border="0" style="{ margin-left=6px; }">
-<tr><td>getSize()</td><td>to</td><td>getSampleSize()</td></tr>
-<tr><td>setSize()</td><td>to</td><td>setSampleSize()</td></tr>
-<tr><td>getType()</td><td>to</td><td>getChannelCount()</td></tr>
-<tr><td>setType()</td><td>to</td><td>setChannelCount()</td></tr>
-</table>
-
-<h3>22. FSDefineSoundStreamHead</h3>
-
-<P>The class was updated to mirror the FSDefineSound class:</P>
-
-<ul>
-<li>The playback rate and rate are now defined as floats, repesenting the rate in KHz.</li>
-<li>The sample sizes, in bits, are now specified directly using ints.</li>
-<li>The 'type' is now the number of channels - 1 (Mono) or 2 (Stereo).</li>
-<li>The format for the sound is defined using the constants: None, ADPCM and MP3 from the FSDefineSound class.</li>
-</ul>
-
-<P>The following methods were renamed:</P>
-
-<table border="0" style="{ margin-left=6px; }">
-<tr><td>setCompression()</td><td>to</td><td>setFormat()</td></tr>
-<tr><td>getCompression()</td><td>to</td><td>getFormat()</td></tr>
-<tr><td>getStreamingRate()</td><td>to</td><td>getRate()</td></tr>
-<tr><td>setStreamingRate()</td><td>to</td><td>setRate()</td></tr>
-<tr><td>getStreamingSampleSize()</td><td>to</td><td>getSampleSize()</td></tr>
-<tr><td>setStreamingSampleSize()</td><td>to</td><td>setSampleSize()</td></tr>
-<tr><td>getStreamingSampleCount()</td><td>to</td><td>getSampleCount()</td></tr>
-<tr><td>setStreamingSampleCount()</td><td>to</td><td>setSampleCount()</td></tr>
-</table>
-
-<h3>23. FSDefineSoundStreamHead2</h3>
-
-<P>The class is now a sub-class of FSDefineSoundStreamHead. It was a separate class for historical reasons.</P>
-
-<h3>24. FSSoundInfo</h3>
-
-<P>The constants, <i>SyncNoMultiple</i> and <i>SyncStop</i> were added to the class. Previously they were defined in he 
-FSSound class which has now been removed.</P>
-
-<h2>Documentation</h2>
-
-<P>Documentation has been updated for basic data types, actions, bitmap images and button classes:</P>
-
-<ul>
-<li>FSBounds</li>
-<li>FSColor</li>
-<li>FSCoordTransform</li>
-<li>FSColorTransform</li>
-<li>FSRegisterIndex</li>
-<li>FSTableIndex</li>
-<li>FSAction</li>
-<li>FSCall</li>
-<li>FSGetUrl</li>
-<li>FSGetUrl2</li>
-<li>FSGotoFrame</li>
-<li>FSGotoFrame2</li>
-<li>FSGotoLabel</li>
-<li>FSIf</li>
-<li>FSJump</li>
-<li>FSNewFunction</li>
-<li>FSPush</li>
-<li>FSRegisterCopy</li>
-<li>FSSetTarget</li>
-<li>FSTable</li>
-<li>FSWaitForFrame</li>
-<li>FSWaitForFrame2</li>
-<li>FSWith</li>
-<li>FSJPEGTables</li>
-<li>FSDefineBits</li>
-<li>FSDefineBitsJPEG2</li>
-<li>FSDefineBitsJPEG3</li>
-<li>FSDefineBitsLossless</li>
-<li>FSDefineBitsLossless2</li>
-<li>FSButtonColorTransform</li>
-<li>FSButtonEvent</li>
-<li>FSButtonRecord</li>
-<li>FSButtonSound</li>
-<li>FSDefineButton</li>
-<li>FSDefineButton2</li>
-</ul>
-
-<P>Each of the classes in Transform SWF are essentially wrappers for the data structures that define the Flash File Format 
-Specification. Consequently the documentation is a little dry. The example package showing how to use the various classes 
-in the Transform SWF package provide a clearer way of illustrating  how the classes are combined to generate Flash files.</P>
-
-<h2>Using the Framework</h2>
-
-<P>The Developer Edition of the framework is available free of charge, for development purposes only, on the download page. 
-To use the classes in your code use the following import statement:</P>
-
-<code style="margin-left = 2cm; }">
-import com.flagstone.transform.*;
-</code>
-
-<br><br>
-
-<h2>Known Issues</h2>
-
-<ol>
-<li>The following tags are not currently supported:<BR><BR>
-<ul>
-<li>FreeCharacter</li>
-<li>PathsArePostscript</li>
-<li>SyncFrame</li>
-<li>FreeAll</li>
-<li>NameCharacter</li>
-<li>FrameTag</li>
-<li>GenCommand</li>
-<li>DefineCommandObj</li>
-<li>CharacterSet</li>
-<li>FontRef</li>
-<li>DefineBitsPrt</li>
-</ul>
-<BR>These tags are undocumented and are not commonly used in Flash files. When encountering one of these tags Transform SWF will <br>
-decode it as an FSUnknownTag object.
-</li>
-</ol>
-
-</body>
-</html>

Deleted: dev/dev-2-2/doc/releases/transform-1.2.0.html
===================================================================
--- dev/dev-2-2/doc/releases/transform-1.2.0.html	2006-10-01 16:18:31 UTC (rev 234)
+++ dev/dev-2-2/doc/releases/transform-1.2.0.html	2006-11-30 14:34:12 UTC (rev 235)
@@ -1,318 +0,0 @@
-<html>
-<head>
-<link type="text/css" href="style.css" rel="stylesheet">
-</head>
-
-<body>
-
-<h1>Release Notes for Transform SWF 1.2</h1>
-
-<p>Version 1.2 is a maintenance release. The major changes are completely updated documentation for each class and improved object 
-validation when an attribute is set and when the object is encoded to a Flash file. New classes have been added to support some of 
-the more obscure Flash tags and actions. Some minor changes have been made to the classes to polish some rough edges.</p>
-
-<h2>1. Updated Documentation</h2>
-
-<P>JavaDoc style documentation has been updated for all the classes in the package. The data sheets for each class give a short  description of how the class is used to create Flash files and list the attributes that the class supports. Each class encodes a particular data structure in the Flash file format specification and therefore does not encapsulate behaviours other than the encoding and decoding process and validation. The examples provided show in more detail how the different classes provided in Transform SWF are used together to manipulate and generate Flash files.</P>
-
-<h2>2. Improved Object Validation</h2>
-
-                    <P>The validation code that checks the arguments in set. methods and when the object is encoded to a Flash 
-                        file has been completely overhauled and checks for the most common types of error 
-                        that occur when generating Flash files, for example in each class all required 
-                        attributes must contain valid values, all arrays are checked to ensure that only 
-                        objects of the correct type are included, etc.</P>
-
-<P>The Flash file format tries to be as space efficient as possible and the attributes of tags are defined as bit fields and 8, 16 
-or 32 bit words. Transform SWF simplifies the setting of attributes by using only the int data type which also maintains the platform 
-independence that Java offers. The validation code performs range checking to ensure that the value will not be truncated when the 
-object is encoded.</P>
-
-<h2>3. New Classes</h2>
-
-<P>Several classes have been added to simplify using the package and extend the support for Flash 5:</P><br>
-
-<table cellspacing="10" cellpadding="0" border="0" style="{ margin-left=1cm; }">
-<tr>
-    <td valign="top">FSActionObject</td>
-    <td>&nbsp;&nbsp;</td>
-    <td>This is the abstract root class for all the classes that represent actions in a flash file. Previously this class was private. 
-    Formerly named FSActionTag.</td></tr>
-<tr>
-    <td valign="top">FSControlObject</td>
-    <td>&nbsp;&nbsp;</td>
-    <td>This is the abstract root class for all the classes that encode tags from the Flash file format. Previously this class was 
-    private. Formerly named FSControlTag.</td></tr>
-<tr>
-    <td valign="top">FSDefineObject</td>
-    <td>&nbsp;&nbsp;</td>
-    <td>This is the abstract root class for all the classes that define objects in a flash file. Previously this class was private. 
-    Formerly named FSDefineTag.</td></tr>
-<tr>
-    <td valign="top">FSExport</td>
-    <td>&nbsp;&nbsp;</td>
-    <td>Supports the Export tag which identifies an object that can imported into another Flash file.</td></tr>
-<tr>
-    <td valign="top">FSFree</td>
-    <td>&nbsp;&nbsp;</td>
-    <td>Supports the FreeCharacter tag which deletes an object with the specified identifier from the Flash Player's memory.</td></tr>
-<tr>
-    <td valign="top">FSImport</td>
-    <td>&nbsp;&nbsp;</td>
-    <td>Supports the Import tag which identifies an object to be imported from a Flash file.</td></tr>
-<tr>
-    <td valign="top">FSNull</td>
-    <td>&nbsp;&nbsp;</td>
-    <td>Is used to with the FSPush class to push a null value onto the Flash Player's stack.</td></tr>
-<tr>
-    <td valign="top">FSPathsArePostscript</td>
-    <td>&nbsp;&nbsp;</td>
-    <td>Supports the PathsArePostscript tag which signals that paths use cubic rather than quadratic bezier curves. Since Flash 
-    supports quadratic bezier curves the purpose of this tag is not known - no definition is available from Macromedia.</td></tr>
-<tr>
-    <td valign="top">FSPointer</td>
-    <td>&nbsp;&nbsp;</td>
-    <td>Supports the DefineBitsPrt tag which defines a 32-bit pointer. This tag was added for Macromedia's Generator (now unsupported) 
-    and its exact function is not known - no definition is available from Macromedia.</td></tr>
-<tr>
-    <td valign="top">FSVoid</td>
-    <td>&nbsp;&nbsp;</td>
-    <td>Is used to with the FSPush class to push a void value onto the Flash Player's stack.</td></tr>
-</table>
-
-<P>FSImport and FSExport are important additions as they allow libraries of Flash objects to be created which can then be referenced 
-by name from another Flash file. FSFree, FSPathsArePostscript and FSPointer less commonly used in Flash files and are added for 
-completeness.</P>
-
-<P>FSNull and FSVoid are lightweight classes to support the null and void data types respectively. The previous release of Transform 
-SWF only supported pushing null values onto the Player's stack through the add(Object anObject) method.</P>
-
-<h2>4. Class Changes</h2>
-
-<P>The following sections describe the changes, methods added and bugs fixed for each class.
-
-<h3>4.1. Pkg</h3>
-
-<ol>
-                        <li>A new set of methods supporting internationalized strings have been added. They replace the table 
-                            of ResourceBundle objects with a specific ResourceBundle object which are 
-                            now deprecated. The new methods do not assume a specific model for adding 
-                            localized strings to an application used predefined names for ResourceBundles. 
-                            This makes the methods more flexible and easier to use. 
-                            <pre>
-    public static String localizedString(ResourceBundle aBundle, 
-                                         String tableName, 
-                                         String keyName)
-    public static String localizedString(ResourceBundle aBundle, 
-                                         String tableName, 
-                                         String keyName, 
-                                         String argument)
-    public static String localizedString(ResourceBundle aBundle, 
-                                         String tableName, 
-                                         String keyName, 
-                                         Object[] arguments)
-</pre>
-
-</li><br>
-
-<li>The reportPackageInformation(Map resourceTable) method which used to report information about either the Transform SWF package
- or any application using Transform SWF has been deprecated. This method was a simple wrapper for a series of print statements and 
- is no longer needed with the new simplified localizedString() methods.</li>
-</ol>
-
-<h3>4.2. FSMovie</h3>
-
-<ol>
-<li>Fixed a bug in the getTagsOfType(String className) method to use the unqualified class name, e.g. FSDefineShape. The method now 
-behaves as documented. Previously the full package qualified package name was required, e.g. com.flagstone.transform.FSDefineShape.</li><br>
-
-<li>Added the getObjectsOfClass(Class aClass) method to the FSMovie class. This provides a more flexible mechanism for retrieving objects 
-of a specific class since it allows parent classes to be used.</li><br>
-
-<li>Decoding Flash data now throws DataFormatException rather than an FSValidationException. This change will require a minor change to 
-existing code.</li>
-</ol>
-
-<h3>4.3. FSCoordTransform</h3>
-
-<ol>
-<li>Fixed a bug in the FSCoordTransform object where the default constructor, FSCoordTransform(float[][] aMatrix), was not public.</li>
-</ol>
-
-<h3>4.4. FSAction</h3>
-
-<ol>
-<li>Added class methods to the FSAction class to create action objects for all the stack-based actions supported by the class. In the 
-previous release of Transform SWF creating a stack-based action was performed using the following example:
-
-<pre>
-    FSAction anAction = new FSAction(FSAction.Add);
-</pre>
-
-The addition of the class methods simplifies the code that is written:</P>
-
-<pre>
-    FSAction anAction = FSAction.Add();
-</pre>
-</li>
-
-<li>Added new stack-based actions:
-
-<table cellspacing="5" cellpadding="0" border="0" style="{ margin-left=1cm; }">
-<tr><td valign="top">Swap</td><td>&nbsp;&nbsp;</td><td>Swaps the top two elements on the stack.</td></tr>
-<tr><td valign="top">DeleteVariable</td><td>&nbsp;&nbsp;</td><td>Deletes a variable from the Flash Player's memory.</td></tr>
-<tr><td valign="top">NewMethod</td><td>&nbsp;&nbsp;</td><td>Defines a new method for an object.</td></tr>
-<tr><td valign="top">ToNumber</td><td>&nbsp;&nbsp;</td><td>Converts a string to a number.</td></tr>
-<tr><td valign="top">Enumerate</td><td>&nbsp;&nbsp;</td><td>The function of this action is not currently known.</td></tr>
-</table>
-</li>
-</ol>
-
-<h3>4.5. FSPush</h3>
-
-<ol>
-<li>Added constructors and methods to support the new FSNull and FSVoid classes to push null and void values onto the Flash Player's stack:
-
-<pre>
-    public FSPush(FSNull nullValue)
-    public FSPush(FSVoid voidValue)
-    public add(FSNull nullValue)
-    public add(FSVoid voidValue)
-</pre>
-
-<P>Previously null values could only be added using:</P>
-
-<pre>
-    public FSPush(Object anObject)
-    public add(Object anObject)
-</pre>
-
-These methods were "dangerous" as they allowed any object to be added to an FSPush object. They are now deprecated.</li>
-</ol>
-
-<h3>4.6. FSNewFunction</h3>
-
-<ol>
-<li>Fixed a bug where functions with zero arguments were not being encoded or decoded correctly. This bug was the source of many 
-"Out Of Memory" errors when decoding large Flash files.</li>
-</ol>
-
-                    <h3>4.7. FSSoundInfo</h3>
-
-<ol>
-<li>Added constructors to handle the different sets of optional attributes:
-
-<pre>
-    public FSSoundInfo(int syncType)
-    public FSSoundInfo(int syncType,
-                       int aCount)
-    public FSSoundInfo(int syncType,
-                       int anInPoint,
-                       int anOutPoint)
-    public FSSoundInfo(int syncType,
-                       int anInPoint,
-                       int anOutPoint,
-                       int aCount)
-</pre>
-</li>
-</ol>
-
-<h3>4.8. FSBitmapFill</h3>
-
-<ol>
-<li>The constructor, FSBitmapFill(int aType, int anIdentifier) is deprecated since it does not specify the required transform attribute. 
-However when the object is encoded the validation checks require that the transform attribute is set so existing code will probably not
- be affected. Use the FSBitmapFill(int aType, int anIdentifier, FSCoordTransform aTransform) constructor instead.</li>
-</ol> 
-
-<h3>4.9. FSGradientFill</h3>
-
-<ol>
-<li>The constructor, FSGradientFill(int aType, int anIdentifier) is deprecated since it does not specify the required array of gradient 
-objects. However when the object is encoded the validation checks require that the gradients attribute is valid so existing code will 
-probably not be affected. Use the FSGradientFill(int aType, FSCoordTransform aTransform, ArrayList anArray) constructor instead.</li> 
-</ol>
-
-<h3>4.10. FSDefineFont2</h3>
-
-<ol>
-<li>Added a new constructor:
-
-<pre>
-    public FSDefineFont2(int anIdentifier, 
-                         int anEncoding, 
-                         boolean italics, 
-                         boolean bold, 
-                         String name, 
-                         ArrayList glyphArray, 
-                         ArrayList codes)
-</pre>
-
-This previous default constructor FSDefineFont2(int anIdentifier) is now deprecated. Existing code will not be affected, however it 
-should be updated to use the new default constructor as soon as possible.
-</li>
-</ol>
-
-<h3>4.11. FSDefineEditText</h3>
-
-<ol>
-<li>Added the isHTML attribute to identify that the text in the field should be displayed as HTML. The provides support for a previously 
-undocumented (by Macromedia) feature of the DefineEditText Flag tag.</li>
-</ol>
-
-<h3>4.12. FSValidationException</h3>
-
-<ol>
-<li>The FSValidationException class, which was thrown if a file being decoded did not start with a valid Flash signature, has been 
-removed. The FSMovie class now throws exceptions using the java.util.zip.DataFormatException class.</li>
-</ol>
-
-<h2>5. Known Issues</h2>
-
-<ol>
-<li>The following tags are not currently supported:<BR><BR>
-<ul>
-<li>SyncFrame</li>
-<li>FreeAll</li>
-<li>NameCharacter</li>
-<li>FrameTag</li>
-<li>GenCommand</li>
-<li>DefineCommandObj</li>
-<li>CharacterSet</li>
-<li>FontRef</li>
-</ul>
-<BR>These tags are undocumented and are not commonly used in Flash files. When encountering one of these tags Transform will decode 
-it as an FSUnknownTag object.
-</li>
-</ol>
-
-<h2>6. Requirements</h2>
-
-<P>To use Transform SWF 1.2 (the latest release) you must have:</P>
-
-<ul>
-<li><a href="http://java.sun.com/j2se/">Java 2 Standard Edition</a></li>
-</ul>
-
-<h2>7. Installation</h2>
-
-<P>To install Transform SWF simply add the JAR file from the package to your java classpath:</P>
-
-<ol>
-<li>Use WinZip, pkunzip, StuffIt Expander or tar to decompress and unpack the downloaded file.</li>
-<li>Place the file, transform.jar, in the directory or your choice, e.g. /usr/local/lib/java.</li>
-<li>Update your java classpath to include the jar file when java searches for compiled classes, 
-e.g. CLASSPATH=...:/usr/local/lib/java/transform.jar</li>
-</ol>
-
-<h2>8. Using the Framework</h2>
-
-<P>The Developer Edition of the framework is available free of charge, for development purposes only, on the download page. To use the 
-classes, place the following import statement in your code:</P>
-
-<pre>
-import com.flagstone.transform.*;
-</pre>
-
-</body>
-</html>

Deleted: dev/dev-2-2/doc/releases/transform-1.3.0.html
===================================================================
--- dev/dev-2-2/doc/releases/transform-1.3.0.html	2006-10-01 16:18:31 UTC (rev 234)
+++ dev/dev-2-2/doc/releases/transform-1.3.0.html	2006-11-30 14:34:12 UTC (rev 235)
@@ -1,326 +0,0 @@
-<html>
-<head>
-<link type="text/css" href="style.css" rel="stylesheet">
-</head>
-
-<body>
-
-<h1>Release Notes for Transform 1.3</h1>
-
-<p>Version 1.3 is a maintenance release. The following important changes and updates have been made:</p>
-
-<ul>
-<li>Added the FSFrame class to provide a more abstract view of a movie.</li>
-<li>Added the FSFramedMovie class to encode and decode movies using the FSFrame class.</li>
-<li>Fixed a bug that caused action objects to be validated twice when a movie was encoded.</li>
-<li>Fixed a bug in the getImage() method on the FSDefineImage and FSDefineImage2 classes.</li>
-<li>Fixed a bug in the way the encoding attribute was encoded and decoded on the FSFontInfo and FSDefineFont2 classes.</li>
-<li>FSMovie objects can now be cloned.</li>
-<li>Improved the decoding process to reduce the risk that badly encoded tags will cause fatal exceptions to be thrown.</li> 
-<li>Restructured the request types in the FSGetUrl2 class.</li>
-</ul>
-
-<P>The name of the JAR file has been changed to transform-dev.jar. The "-dev" suffix reflects that the package is the Developer Edition.</P>
-
-
-<h1>New Classes</h1>
-
-<h2>1. FSFrame</h2>
-
-<P>Rather than viewing movies as a sequence of individual objects each representing a given tag in the encoded Flash file, objects can be grouped together in frames. Each FSFrame object has the following attributes:</P>
-
-<ul>
-<li>label - an optional name assigned to a frame.</li>
-<li>definitions - an array containing objects that define items for display in a movie.</li>
-<li>commands - an array containing objects that define commands that affect the display list.</li>
-<li>actions - an array containing objects that define actions executed when each frame is displayed.</li>
-</ul>
-
-<P>FSFrame objects simplify the handling of movies. FSDoAction, FSFrameLabel and FSShowFrame classes can now "hidden" from view. They are generated automatically by the FSFrame object when it is encoded.</P>
-
-<h2>2. FSFramedMovie</h2>
-
-<P>The FSFramedMovie class has been added to support the encoding and decoding of movies using the FSFrame class. FSFramedMovie is a sub-class of FSMovie so the process of constructing, encoding and decoding movies is unchanged. When decoding movies the objects decoded from the Flash tags are grouped into frames providing a higher level view of the movie.</P>
-
-<P>An FSFramedMovie can only contain FSFrame objects which in turn contain the objects that represent the different tags used to represent a Flash movie. The grouping of objects into frames provides a more intuitive API when compared to the unstructured array of objects in the FSMovie class which can contain any object representing a Flash tag in any order.</P>
-
-<P>When decoding movies, objects contained in an FSDefineMovieClip object are also grouped into FSFrame objects.</P>
-
-<P>FSFramedMovie simplifies handling movies by integrating the attributes of the FSHeader and FSSetBackgroundColor classes since they describe attributes of the Flash movie. The corresponding Flash tags are automatically generated when the movie is encoded.</P>
-
-
-<h1>Bug Fixes</h1>
-
-<h2>1. Action Objects</h2>
-
-<ul>
-<li>Fixed a bug where action objects were being validated twice when a movie was encoded. Action objects are lightweight so the performance penalty was minor.</li>
-</ul>
-
-<h2>2. FSDefineFont2</h2>
-
-<ul>
-<li>Fixed a bug in reading and writing the binary data that defines the different font encodings.</li>
-</ul>
-
-<h2>3. FSDefineImage</h2>
-
-<ul>
-<li>Fixed a bug in the byte[] getImage() method which returns the uncompressed image stored in the FSDefineImage object. Previously this method threw an ArrayIndexOutOfBoundsException when called.</li>
-</ul>
-
-<h2>4. FSFontInfo</h2>
-
-<ul>
-<li>Fixed a bug in reading and writing the binary data that defines the different font encoding.</li>
-</ul>
-
-<h2>5. FSMovie</h2>
-
-<ul>
-<li>FSMovie objects are now cloneable.</li>
-</ul>
-
-<h1>Changes in Validation</h1>
-
-<P>The following sections describe the changes made to the code, in the Developer Edition, that validates objects when a movie is encoded.</P>
-
-<h2>1. FSDefineEditText</h2>
-
-<ul>
-<li>Relaxed the validation so that the variableName attribute can be an empty string. This occurs when the object is primarily used to display read-only text rather than as an input field.</li>
-</ul>
-
-<h2>2. FSDefineFont</h2>
-
-<ul>
-<li>When an FSDefineFont object is validated the space occupied by the encoded glyphs is checked to ensure that the object does not overflow when encoded - the FSDefineFont class only supports encoded glyphs that occupy up to 64 Kbytes.</li>
-</ul>
-
-<h2>3. FSDefineFont2</h2>
-
-<ul>
-<li>Relaxed the validation logic that allows the array attributes (shapes, codes, advances, bounds and kernings) to contain no items - used when an FSDefineFont2 object define a mapping to a font installed on the Flash Player's platform.</li>
-</ul>
-
-<h2>4. FSDefineShape, FSDefineShape2, FSDefineShape3, FSDefineMorphShape</h2>
-
-<ul>
-<li>Relaxed the validation logic so that the line and fill styles arrays may be empty. The improved validation on the FSShapeStyle object provides a more rigorous check.</li>
-</ul>
-
-<h2>5. FSGetUrl</h2>
-
-<ul>
-<li>Relaxed the validation logic so that the url attribute can now be an empty string.</li>
-</ul>
-
-<h2>6. FSShapeStyle</h2>
-
-<ul>
-<li>The index value assigned to the fillStyle, altFillStyle and lineStyle attributes is now checked against the current arrays of line and fill styles to ensure that the index references a style in the array.</li>
-</ul>
-
-<h2>7. FSTextStyle</h2>
-
-<ul>
-<li>Fixed a bug in the validation logic that incorrectly reported the optional attribute, fontId was out of a valid range when it was not defined.</li>
-</ul>
-
-
-<h1>Class Changes</h1>
-
-<P>The following sections describe the changes made to package classes.</P>
-
-<h2>1. FSActionObject</h2>
-
-<ul>
-<li>Updated the decoding of the binary data stream so that underflows or overflows, caused by incorrectly encoded data, do not disrupt decoding of subsequent objects in the stream.</li>
-</ul>
-
-<h2>2. FSBounds</h2>
-
-<ul>
-<li>Added the getWidth() and getHeight() methods to return the width and height of the bounding rectangle.</li>
-</ul>
-
-<h2>3. FSCurvedEdge</h2>
-
-<ul>
-<li>Added the following methods:
-
-<pre>
-    getControlX(boolean)
-    getControlY(boolean)
-    getAnchorX(boolean)
-    getAnchorXY(boolean)
-
-    setControlX(int, boolean)
-    setControlY(int, boolean)
-    setAnchorX(int, boolean)
-    setAnchorXY(int, boolean)
-</pre>
-
-The boolean flag allows the Transform package flag Pkg.COORDINATES_ARE_PIXELS to be overridden. The value of the boolean argument indicates whether the int argument is expressed in pixels (true) or twips (false). The principal use of these methods is to allow fine-grain control over drawing, particularly when handling fonts while still allowing the convenience expressing other coordinates in pixels.
-</li>
-</ul>
-
-<h2>4. FSDefineFont2</h2>
-
-<ul>
-<li>Added the constructor
-
-<pre>
-    public FSDefineFont2(
-        int anIdentifier, 
-        int anEncoding, 
-        boolean italics, 
-        boolean bold, 
-        String name, 
-        int ascent, 
-        int descent, 
-        int leading, 
-        ArrayList glyphArray, 
-        ArrayList codeArray, 
-        ArrayList advancesArray, 
-        ArrayList boundsArray, 
-        ArrayList kerningsArray)
-</pre>
-
-that allows all the attributes of the class to be used in constructing a new instance.</li>
-</ul>
-
-<h2>5. FSDefineMovieClip</h2>
-
-<ul>
-<li>Updated encoding and decoding to enable the object to handle FSFrame objects when used within an FSFramedMovie object.</li>
-<li>Added the method, int getFrameCount(), to return the current number of frames in the movie clip.</li>
-<li>Updated the decoding of the binary data stream so that underflows or overflows, caused by incorrectly encoded data, do not disrupt decoding of subsequent objects in the stream.</li>
-</ul>
-
-<h2>6. FSGetUrl2</h2>
-
-<ul>
-<li>The constants defining the different request types have been restructured with three new values added. The request types are used to identify when the second argument on the stack is either a level in the Flash Player, e.g. _level1 or a target which specifies the name of a movie clip, e.g. _root.movieClip. 
-
-    <P>This affects the way the class is used however if Translate SWF is used to generate the code from Actionscript then the practical implications are minor.</P>
-
-    <P>Existing code is unaffected as the existing constants have been deprecated however it should be checked to ensure that subtle bugs associated with the Flash Player interpreting different request types do not arise.</P>
-</li>
-</ul>
-
-<h2>7. FSHeader</h2>
-
-<ul>
-<li>Deprecated accessor methods, getMovieLength() and setMovieLength(). 
-
-    <P>getMovieLength() only returned a valid value when a movie was first decoded. If objects were added later then the number returned would not be accurate. A getMovieLength() method was added to the FSMovie class.</P>
-
-    <P>setMovieLength() was deprecated as the FSMovie class is responsible for setting the length of the movie once all the objects have been encoded. The setMovieLength() was never used in practice.</P>
-</li>
-    
-<li>Deprecated accessor methods, getFrameCount() and setFrameCount(). 
-
-    <P>getFrameCount() only returned a valid value when a movie was first decoded. If objects were added later then the number returned would not be accurate. A getFrameCount() method was added to the FSMovie class.</P>
-
-    <P>setMovieLength() was deprecated as the FSMovie class is responsible for setting the number of frames when the movie is encoded.</P>
-</li>
-</ul>
-
-<h2>8. FSMovie</h2>
-
-<ul>
-<li>Added the following accessor methods for the unique identifier assigned to definition objects.
-
-<pre>
-    public int getIdentifier()
-    public void setIdentifier(int aValue)
-</pre>
-
-Setting the identifier should be done with caution as generating objects with duplicate identifiers will most likely crash the program displaying the file generated.</li>
-
-<li>Added the following accessor methods 
-
-<pre>
-    public int getFrameCount()
-    public int getMovieLength()
-</pre>
-
-to return, respectively, the number of frames and length of the movie, in bytes, when it is encoded.
- 
- Setting the identifier should be done with caution as generating objects with duplicate identifiers will most likely crash the program displaying the file generated.</li>
- 
-<li>The getTagsOfType(String aString) method is now deprecated. The getObjectsOfClass(Class aClass) method provides the same functionality and is more flexible.</li>
-<li>The getTags() method is now deprecated. It is superseded by the new method getObjects(). This was added to clarify the distinction between Transform SWF objects and the Flash file tags that they are encoded to and decoded from.</li>
-<li>The getTagWithIdentifier(int) method is now deprecated. It is superseded by the new method getObjectWithIdentifier(int). This was added for the same reason as the getObjects() method.</li>
-</ul>
-
-<h2>9. Pkg</h2>
-
-<ul>
-<li>Added the integer constant PACKAGE_VERSION which reports the version of Transform SWF. Successive pairs of digits report the major version, minor version and release respectively, e.g. 10201 represents version 1.2.1.</li>
-<li>The main(String args[]) now reports any packages that Transform SWF is dependent on. This currently reports the version of Java required.</li>
-</ul>
-
-<h2>10. FSShapeStyle</h2>
-
-<ul>
-<li>Added the following methods:
-
-<pre>
-    getMoveX(boolean)
-    getMoveY(boolean)
-
-    setMoveX(int, boolean)
-    setMoveY(int, boolean)
-</pre>
-
-The boolean flag allows the Transform package flag Pkg.COORDINATES_ARE_PIXELS to be overridden. The value of the boolean argument indicates whether the int argument is expressed in pixels (true) or twips (false). The methods were added for the same reason as those in the FSCurvedEdge class.
-</li>
-</ul>
-
-<h2>11. FSStraightEdge</h2>
-
-<ul>
-<li>Added the following methods:
-
-<pre>
-    getX(boolean)
-    getY(boolean)
-
-    setX(int, boolean)
-    setY(int, boolean)
-</pre>
-
-The boolean flag allows the Transform package flag Pkg.COORDINATES_ARE_PIXELS to be overridden. The value of the boolean argument indicates whether the int argument is expressed in pixels (true) or twips (false). The methods were added for the same reason as those in the FSCurvedEdge class.
-</li>
-</ul>
-
-<h1>Requirements</h1>
-
-<P>To use Transform SWF you must have:</P>
-
-<ul>
-<li><a href="http://java.sun.com/j2se/">Java 2 Standard Edition</a></li>
-</ul>
-
-<h1>Installation</h1>
-
-<P>To install Transform SWF simply add the JAR file from the package to your java classpath:</P>
-
-<ul>
-<li>Use WinZip, pkunzip, StuffIt Expander or tar to decompress and unpack the downloaded file.</li>
-<li>Place the file, transformdev.jar, in the directory or your choice, e.g. /usr/local/lib/java.</li>
-<li>Update your java classpath to include the jar file when java searches for compiled classes, e.g. CLASSPATH=...:/usr/local/lib/java/transformdev.jar</li>
-</ul>
-
-<h1>Using the Framework</h1>
-
-<P>The Developer Edition of the framework is available free of charge, for development purposes only, on the download page. To use the classes, place the following import statement in your code:</P>
-
-<pre>
-    import com.flagstone.transform.*;
-</pre>
-
-</body>
-</html>

Deleted: dev/dev-2-2/doc/releases/transform-1.4.0.html
===================================================================
--- dev/dev-2-2/doc/releases/transform-1.4.0.html	2006-10-01 16:18:31 UTC (rev 234)
+++ dev/dev-2-2/doc/releases/transform-1.4.0.html	2006-11-30 14:34:12 UTC (rev 235)
@@ -1,949 +0,0 @@
-<html>
-<head>
-<link type="text/css" href="style.css" rel="stylesheet">
-</head>
-
-<body>
-
-<h1>Release Notes for Transform 1.4</h1>
-
-<P>Version 1.4 is a significant upgrade with changes reflecting the lessons learned when the code base was ported for the C++ version of Transform. One of the major goals of this release was to present a common set of objects and methods, where appropriate, with the C++ version in order to to minimise the effort required to support the code and provide a common base for implementing value added features in frameworks such as Transform Utilities. The most significant changes include:</P>
-
-<ul>
-<li>Error checking is no longer carried out in accessor methods. All validation is now performed when the movie is encoded. It was not possible to trap all errors in the accessor methods and validation prior to encoding allows contextual errors such as placing an object on the display list that does not exist to be caught.</li>
-<li>The FSFrame and FSFramedMovie classes have been removed. The classes did not reduce the amount of code required to generate a movie and complicated the decoding process.</li>
-<li>The FSHeader class has been removed. The attributes have been merged into the FSMovie class. This will provides better support in for Flash MX in a future release of Transform.</li>
-<li>Attributes which refer to another object have been standardised to the name 'identifier'. Previously they had various names such as fontId, bitmapId etc. Accessor method names have been changed to getIdentifier() and setIdentifier().</li>
-<li>Names for events or states have been replaced with integer codes. Compound codes which represent more than one event or state are generated by bitwise-ORing code values together. This was previously supported convenience methods which complicated the code with no real benefits.</li>
-<li>The Pkg class has been replaced by Transform. The original design decision is that the Pkg class is each framework would contain version information and provide common services. However although the full package name can be used to qualify which class is references this was a source of confusion/bugs and so the principal class is now named after the framework.</li>
-<li>All methods previously marked as deprecated have been removed.</li>
-<li>FSStraightEdge and FSCurvedEdge have been renamed to the more sensible and easier to type, FSLine and FSCurve.</li>
-<li>All the attributes on FSBounds have been renamed. The Flash coordinate system extends from the top left corner and denoting a bounding rectangle using the suffixes Lower and Upper was counter-intuitive as xLower is actually the upper left corner when viewed on the screen.</li>
-<li>All methods which take coordinates now support an extra flag which allows the setting of COORDINATES_ARE_PIXELS to be bypassed and the values set directly in twips. This provides as high degree of control over the placement and drawing of lines and is used extensively when dealing with font glyphs.</li>
-<li>Attributes used to define sounds have been renamed to make their function clearer and consistent across the different sound classes.</li>
-<li>The documentation for each class has been updated with example code added to illustrate how classes are used.</li>
-<li>The name of the JAR file now contains the version number. An installation script is provided to install and select releases allowing several versions of Transform SWF to be installed in the same development environment.</li>
-</ul>
-
-<P>The majority of the changes are relatively minor in terms of the amount of code that will be affected. A simple search and replace should be sufficient for the majority of changes.</P>
-
-<ul>
-<li>New Classes
-    <ol>
-    <li><a href="#newclass1">FSMovieObject replaces FSControlObject.</a></li>
-    <li><a href="#newclass2">FSCurve replaces FSCurvedEdge.</a></li>
-    <li><a href="#newclass3">FSLine replaces FSStraightEdge.</a></li>
-    <li><a href="#newclass4">FSSound replaces FSSoundInfo.</a></li>
-    <li><a href="#newclass5">FSEnvelope replaces FSSoundEnvelope.</a></li>
-    <li><a href="#newclass6">Transform replaces Pkg.</a></li>
-    <li><a href="#newclass7">FSEventListener replaces FSMovieListener.</a></li>
-    </ol>
-</li>
-<li>Bug Fixes
-    <ol>
-    <li><a href="#bugfix1">FSDefineJPEGImage2 and FSDefineJPEGImage3 now account for encoding bug in Flash.</a></li>
-    <li><a href="#bugfix2">FSGradientFill equals() now fixed.</a></li>
-    </ol>
-</li>
-<li>Class Changes
-    <ol>
-    <li><a href="#classchange1">Removed deprecated constants, constructors and methods.</a></li>
-    <li><a href="#classchange2">Attributes containing object identifiers are renamed to 'identifier'.</a></li>
-    <li><a href="#classchange3">Attributes containing names are renamed to 'name'.</a></li>
-    <li><a href="#classchange4">Extended support for specifying coordinates in twips.</a></li>
-    <li><a href="#classchange5">Compound event and state codes are no longer created using names.</a></li>
-    <li><a href="#classchange6">Convenience constructors and methods added.</a></li>
-    <li><a href="#classchange7">Updated attribute names for sound classes.</a></li>
-    <li><a href="#classchange8">Renamed the attributes in the FSBounds class.</a></li>
-    <li><a href="#classchange9">Merged state flags on FSButtonRecord class.</a></li>
-    <li><a href="#classchange10">FSImport and FSExport now support arrays.</a></li>
-    <li><a href="#classchange11">FSHeader now merged into FSMovie.</a></li>
-    <li><a href="#classchange12">Added toString(int) to control graph depth.</a></li>
-    <li><a href="#classchange13">Miscellaneous Changes.</a></li>
-    </ol>
-</li>
-<li>Validation
-    <ol>
-    <li><a href="#validation1">Accessor methods no longer validate arguments.</a></li>
-    </ol>
-</li>
-<li>Documentation
-    <ol>
-    <li><a href="#documentation1">All class datasheets updated.</a></li>
-    </ol>
-</li>
-</ul>
-
-<h1>New Classes</h1>
-
-<h2><a name="newclass1">1. FSMovieObject replaces FSControlObject.</a></h2>
-
-<P>This is essentially a cosmetic change to make the purpose of this class clearer - it is the abstract base class for all objects added to an FSMovie object. The following method signatures on the FSMovie class has been changed as a result:</P>
-
-<pre>
-    public FSMovieObject getObjectWithIdentifier(int identifier)
-    public void add(FSMovieObject anObject)
-</pre>
-
-<h2><a name="newclass2">2. FSCurve replaces FSCurvedEdge.</a></h2>
-
-<P>Apart from changing the name to something easier to type the following constructor was added:
-
-<pre>
-    public FSCurve(int cx, int cy, int ax, int ay, boolean direct)
-</pre>
-
-<P>This constructor allows the flag COORDINATES_ARE_PIXELS (now in the Transform class) to be overridden with the coordinates specified directly in twips.</P>
-
-<P>None of the other method signatures have been changed.</P>
-
-<h2><a name="newclass3">3. FSLine replaces FSStraightEdge.</a></h2>
-
-<P>In addition to the name change the following constructors was added:
-
-<pre>
-    public FSLine(int x, int y, boolean direct)
-</pre>
-
-<P>Allowing the flag COORDINATES_ARE_PIXELS (now in the Transform class) to be overridden with the coordinates specified directly in twips.</P>
-
-<P>As with FSCurve, none of the existing method signatures have been changed.</P>
-
-<h2><a name="newclass4">4. FSSound replaces FSSoundInfo.</a></h2>
-
-<P>The FSSoundInfo class was always used in conjunction with an identifier which references an FSDefineSound object. The identifier was added to the FSSoundInfo attributes and the class renamed to FSSound. The classes affected by this change are FSStartSound and FSButtonSound. The FSButtonSound is simplified with only one FSSound object associated with each of four possible button states rather than an identifier and an FSSoundInfo object reducing (slightly) the complexity in using the class. See the entries for each class in the Class Changes section.</P>
-
-<P>The fields that identify the different encoding formats for sound are also included in the FSSound class. Previously constants were defined for None, ADPCM and MP3. 'None' has been replaced with PCMB and PCML representing Pulse Code Modulated (PCM) sound with big-endian and little-endian byte ordering respectively.</P>
-
-<P>The following classes and methods are affected by this change:</P>
-
-
-<ul>
-<li>FSButtonSound
-
-<ul>
-<li>The class constructor is now:
-
-<pre>
-    public FSButtonSound(int anIdentifier, int eventCode, FSSound aSound)
-</pre>
-</li>
-
-<li>The accessor method:
-<pre>
-    public FSSound getSoundForEvent(int eventCode)
-</pre>
-
-replaces
-
-<pre>
-    public int getSoundIdForEvent(int eventCode)
-    public FSSoundInfo getSoundInfoForEvent(int eventCode)
-</pre>
-</li>
-
-<li>The accessor method:
-<pre>
-    public void setSoundForEvent(int eventCode, FSSound aSound)
-</pre>
-
-replaces
-
-<pre>
-    public void setSoundIdForEvent(int eventCode, int anIdentifier)
-    public void setSoundInfoForEvent(int eventCode, FSSoundInfo aSoundInfo)
-    public void setSoundIdAndInfoForEvent(int eventCode, 
-                                          int anIdentifier, 
-                                          FSSoundInfo aSoundInfo)
-</pre>
-</li>
-</ul>
-</li>
-
-<li>FSStartSound
-
-<ul>
-<li>The class constructor is now:
-
-<pre>
-    public FSStartSound(FSSound aSound)
-</pre>
-</li>
-
-<li>The accessor methods:
-
-<pre>
-    public int getSoundId()
-    public FSSoundInfo getSoundInfo()
-    
-    public void setSoundId(int anIdentifier)
-    public void setSoundInfo(FSSoundInfo aSoundInfo)
-</pre>
-
-Are replaced with:
-
-<pre>
-    public FSSound getSound()
-    public void setSound(FSSound aSound)
-</pre>
-</li>
-</ul>
-</li>
-</ul>
-
-<h2><a name="newclass5">5. FSEnvelope replaces FSSoundEnvelope.</a></h2>
-
-<P>The class and attributes were renamed to make the purpose of the class easier to understand.</P>
-
-<ul>
-<li>The mark44 attribute was renamed to mark.</li>
-<li>The level0 attribute was renamed to left as it reflects the sound level in the left channel of a stereo sound system.</li>
-<li>The level1 attribute was renamed to right as it reflects the sound level in the right channel of a stereo sound system.</li>
-</ul>
-
-<P>The accessor methods have changed accordingly. No functional changes were made to the class.</P>
-
-
-<h2><a name="newclass6">6. Transform replaces Pkg.</a></h2>
-
-<P>The Pkg class was intended to report version information on the Transform framework and provide methods used throughout the framework. The same class name was used in other Flagstone frameworks. Although the full package name can be used to qualify which class is references this was a source of confusion/bugs and so the principal class is now named after the framework. This is also more consistent with the C++ version of the framework.</P>
-
-<P>Changes from the Pkg class are:
-
-<ul>
-<li>The PACKAGE_VERSION constant which reports the version information has been split into MAJOR_VERSION, MINOR_VERSION and MICRO_VERSION.</li>
-
-<li>The constants used to identify the types of objects added to movies and actions have been moved to the FSMovieObject and FSActionObject classes. The constants DefineButtonColorTransform was renamed to ButtonColorTransform and DefineButtonSound was renamed to ButtonSound.</li>
-
-<li>All methods previously marked as deprecated have been removed:
-
-<pre>
-    public static void reportPackageInformation(Map resourceTable)
-
-    public static String localizedString(Map resourceTable, String tableName, 
-        String keyName, Object[] arguments)
-    public static String localizedString(Map resourceTable, String tableName,
-        String keyName, String argument)
-    public static String localizedString(Map resourceTable, String tableName, 
-        String keyName)
-</pre>
-
-</li>
-</ul>
-
-<h2><a name="newclass7">7. FSEventListener replaces FSMovieListener.</a></h2>
-
-<P>Prior to this release two classes, FSMovieEvent and FSStreamEvent were used to report status information as a movie was encoded or decoded. The classes reported different types of event however their of the classes were essentially identical. The FSStreamEvent was merged into the FSMovieEvent to simplify the handling of events, in particular the reporting and logging of validation errors which report possible problems in the way a Flash file is encoded. As a result the FSMovieListener interface which contained:
-
-<pre>
-    public void logMovieEvent(FSMovieEvent anEvent)
-    public void logStreamEvent(FSStreamEvent anEvent)
-</pre>
-
-is now replaced by the FSEventListener interface which contains a single method:
-
-<pre>
-    public void logMovieEvent(FSMovieEvent anEvent)
-</pre>
-
-<P>See also the FSMovieEvent class for details on how events are reported.</P>
-
-<h1>Bug Fixes</h1>
-
-<h2><a name="bugfix1">1. FSDefineJPEGImage2 and FSDefineJPEGImage3 now account for encoding bug in Flash.</a></h2>
-
-<P>When Flash generates either a DefineBitsJPEG2 or DefineBitsJPEG3 data structure (represented in Transform by the FSDefineJPEGImage2 and FSDefineJPEGImage3 classes respectively) if the encoding table is empty the start of image (SOI) and end of image (EOI) tags used to delimit the JPEG encoded data are reversed. Although the Flash Player displays the image correctly strictly speaking this is a bug.</P>
-
-<P>When FSDefineJPEGImage2 and FSDefineJPEGImage3 objects are encoded the order of the tags is 'corrected' with the SOI written followed by the EOI tag. When an existing Flash file is parsed the classes are able to handle tags is they are not in the correct order.</P>
-
-<h2><a name="bugfix2">2. FSGradientFill equals() now fixed.</a></h2>
-
-<P>Fixed bug where the equals() method was always returning false when comparing two FSGradientFill objects.</P>
-
-<h1>Class Changes</h1>
-
-<h2><a name="classchange1">1. Removed deprecated constants, constructors and methods.</a></h2>
-
-<P>All constants, constructors and methods previously marked as deprecated in previous releases have been removed. the following classes are affected:</P>
-
-<ul>
-<li> FSBitmapFill
-
-<pre>
-    public FSBitmapFill(int aType, int anIdentifier)
-</pre>
-</li>
-
-<li>FSDefineFont2
-
-<pre>
-    public FSDefineFont2(int anIdentifier)
-</pre>
-</li>
-
-<li>FSGetUrl2
-
-<pre>
-    public static final int PageNone = 0;
-    public static final int PageGet  = 1;
-    public static final int PagePost = 2;
-    public static final int MovieNone = 64;
-    public static final int MovieGet  = 65;
-    public static final int MoviePost = 66;
-    public static final int VariableNone = 192;
-    public static final int VariableGet  = 193;
-    public static final int VariablePost = 194;
-</pre>
-</li>
-
-<li>FSGradientFill
-
-<pre>
-    public FSGradientFill(int aType, ArrayList anArray)
-</pre>
-</li>
-
-<li>FSMovie
-
-<pre>
-    public ArrayList getTags()
-    public ArrayList getTagsOfType(String aString) 
-    public Object getTagWithIdentifier(int identifier) 
-</pre>
-</li>
-
-<li>FSPush
-
-<pre>
-    public FSPush(Object anObject)
-
-    public void add(Object anObject)
-</pre>
-</li>
-</ul>
-
-<h2><a name="classchange2">2. Attributes containing object identifiers are renamed to 'identifier'.</a></h2>
-
-<P>When a class contained an attribute which was used to hold the identifier of another object (sub-classes of FSDefineObject) the name of the attribute often reflected the type of object referenced, e.g. fontId. This was often redundant since the class often clearly indicated which type of object was being referenced e.g, the FSFontInfo class contained a fontId attribute which could only refer to an FSDefineFont. Consequently the attribute's accessor methods were renamed to:
-
-<pre>
-    public int getIdentifier()
-    public void setIdentifier(int anIdentifier)
-</pre>
-
-<P>so that purpose of the methods were consistent across all classes and the value returned is clearly an unambiguously an identifier to an instance of a class derived from FSDefineObject. The accessor methods renamed as a result are:</P>
-
-<ul>
-<li>FSBitmapFill
-<pre>
-    public int getBitmapId()
-    public void setBitmapId(int anIdentifier)
-</pre>    
-</li>
-<li>FSButtonColorTransform
-<pre>
-    public int getButtonId()
-    public void setButtonId(int anIdentifier)
-</pre>    
-</li>
-<li>FSButtonRecord
-<pre>
-    public int getShapeId()
-    public void setShapeId(int anIdentifier)
-</pre>    
-</li>
-<li>FSButtonSound
-<pre>
-    public int getButtonId()
-    public void setButtonId(int anIdentifier)
-</pre>    
-</li>
-<li>FSDefineEditText
-<pre>
-    public int getFontId()
-    public void setFontId(int anIdentifier)
-</pre>    
-</li>
-<li>FSFontInfo
-<pre>
-    public int getFontId()
-    public void setFontId(int anIdentifier)
-</pre>    
-</li>
-<li>FSMorphBitmapFill
-<pre>
-    public int getBitmapId()
-    public void setBitmapId(int anIdentifier)
-</pre>    
-</li>
-<li>FSPlaceObject
-<pre>
-    public int getObjectId()
-    public void setObjectId(int anIdentifier)
-</pre>    
-</li>
-<li>FSPlaceObject2
-<pre>
-    public int getObjectId()
-    public void setObjectId(int anIdentifier)
-</pre>    
-</li>
-<li>FSRemoveObject
-<pre>
-    public int getObjectId()
-    public void setObjectId(int anIdentifier)
-</pre>    
-</li>
-<li>FSTextStyle
-<pre>
-    public int getFontId()
-    public void setFontId(int anIdentifier)
-</pre>    
-</li>
-</ul>
-
-<h2><a name="classchange3">3. Attributes containing names are renamed to 'name'.</a></h2>
-
-<P>Similarly to the renaming of attributes containing identifiers of objects, attributes which contain the names of objects have been 'standardised' on 'name'. The attribute's accessor methods were renamed to:
-
-<pre>
-    public int getName()
-    public void setName(String aName)
-</pre>
-
-<P>The classes and accessor methods affected by this change are:</P>
-
-<ul>
-<li>FSFontInfo
-<pre>
-    public String getFontName()
-    public void setFontName(String aName)
-</pre>    
-</li>
-<li>FSDefineFont2
-<pre>
-    public String getFontName()
-    public void setFontName(String aName)
-</pre>    
-</li>
-<li>FSPlaceObject2
-<pre>
-    public String getObjectName()
-    public void setObjectName(String aName)
-</pre>    
-</li>
-</ul>
-
-<h2><a name="classchange4">4. Extended support for specifying coordinates in twips.</a></h2>
-
-<P>The flag Transform.COORDINATES_ARE_PIXELS controls when the coordinate arguments to methods are specified in pixels (true) or twips (false). For most purposes specifying coordinates in pixels reduces the (mental) effort required when displaying objects on the Flash Player screen. However when dealing with fonts and fine placement of shapes on the screen it is useful to be able to specify the coordinates in twips. Rather than changing the temporarily COORDINATES_ARE_PIXELS flag which could cause problems in a thread environment constructors and accessor methods allow the COORDINATES_ARE_PIXELS flag to be temporarily overridden and the arguments to be specified directly in twips.</P>
-
-<P>Previously the FSStraightEdge and FSCurvedEdge classes (now FSLine and FSCurve) were the only ones to support arguments specified in twips. Support has been extended to the following classes:</P>
-
-<ul>
-<li>FSBounds
-
-<pre>
-    public FSBounds(int xl, int yl, int xr, int yr, boolean direct)
-
-    public int getMinX(boolean direct)
-    public int getMaxX(boolean direct)
-    public int getMinY(boolean direct)
-    public int getMaxY(boolean direct)
-
-    public void setMinX(int aNumber, boolean direct)
-    public void setMinY(int aNumber, boolean direct)
-    public void setMaxX(int aNumber, boolean direct)
-    public void setMaxY(int aNumber, boolean direct)
-
-    public int getWidth(boolean direct)
-    public int getHeight(boolean direct)
-
-    public void setMin(int xl, int yl)
-    public void setMin(int xl, int yl, boolean direct)
-    public void setMax(int xl, int yl)
-    public void setMax(int xl, int yl, boolean direct)
-
-    public void setPoints(int xl, int yl, int xr, int yr)
-    public void setPoints(int xl, int yl, int xr, int yr, boolean direct)
-</pre>
-</li>
-
-<li>FSShapeStyle
-
-<pre>
-    public FSShapeStyle(int relativeX, int relativeY, boolean direct)
-    public FSShapeStyle(int lineStyleIndex, 
-                        int fillStyleIndex, 
-                        int altFillStyleIndex, 
-                        int relativeX, 
-                        int relativeY, 
-                        boolean direct)
-    public FSShapeStyle(int lineStyleIndex, 
-                        int fillStyleIndex, 
-                        int altFillStyleIndex, 
-                        int relativeX, 
-                        int relativeY, 
-                        boolean direct,
-                        ArrayList lineStylesArray, 
-                        ArrayList fillStylesArray)
-   
-    void setMove(int x, int y, boolean direct)
-</pre>
-</ul>
-
-
-<h2><a name="classchange5">5. Compound event and state codes are no longer created using names.</a></h2>
-
-<P>In an attempt to simplify the creation of codes that represented multiple events or states for buttons and movie clips, codes were referred to using their name rather than a constant. This was designed to make code more readable when handling situations where an object was responding to multiple events. In practice however this was less than successful. Codes are now simply bitwise Or'ed together to create the compound codes. The classes affected by this are:</P>
-
-<ul>
-<li>FSButtonEvent
-
-Codes are no longer generated from the name of the keys. The following methods have been removed:
-
-<pre>
-    public static int codeForButtonEvent(String eventName)
-    public static int codeForButtonEvents(int[] eventCodes)
-    public static int codeForButtonEvents(String[] eventNames)
-</pre>
-
-Instead codes are generated by bitwise-ORing individual event codes together:
-
-<pre>
-    int code = FSButtonEvent.left | FSButtonEvent.escape;
-</pre>
-
-The following constants have been added for non alpha-numeric keys: 
-
-<pre>
-    public static final int left = 512;
-    public static final int right = 1024;
-    public static final int home = 1536;
-    public static final int end = 2048;
-    public static final int insert = 2560;
-    public static final int delete = 3072;
-    public static final int backspace = 4096;
-    public static final int enter = 6656;
-    public static final int up = 7168;
-    public static final int down = 7680;
-    public static final int pageup = 8192;
-    public static final int pagedown = 8704;
-    public static final int tab = 9216;
-    public static final int escape = 9728;
-    public static final int space = 16384;
-</pre>
-
-The following method has been added to generate codes for characters:
-
-<pre>
-    public static int codeForKey(char c)
-</pre>
-</li>
-
-<li>FSClipEvent
-
-Codes are no longer generated from the name of the event. The following methods have been removed:
-
-<pre>
-    public static int codeForClipEvent(String eventName)
-    public static int codeForClipEvents(ArrayList eventNames)
-</pre>
-
-Instead codes are generated by bitwise-ORing individual event codes together:
-
-<pre>
-    int code = FSClipEvent.mouseMove | FSClipEvent.mouseDown;
-</pre>
-
-</li>
-</ul>
-
-<h2><a name="classchange6">6. Convenience constructors and methods added.</a></h2>
-
-<P>A number of methods were added to various classes to simplify or reduce the amount of code required to add or update objects:</P>
-
-<ul>
-<li>FSColorTransform - added method defining a unity transform
-<pre>
-    public FSColorTransform()
-</pre>
-</li>
-
-<li>FSCoordTransform - added methods to defining a unity transform and construct an translation transformation.
-<pre>
-    public FSCoordTransform()
-    public FSCoordTransform(int x, int y)
-</pre>
-</li>
-
-<li>FSNewFunction - add objects to internal arrays.
-<pre>
-    public void add(String anArgument)
-    public void add(FSActionObject anAction)
-</pre>
-</li>
-
-<li>FSDoAction - add objects to internal array.
-<pre>
-    public void add(FSActionObject anAction)
-</pre>
-</li>
-
-<li>FSDefineButton - add objects to internal array.
-<pre>
-    public void add(FSButtonRecord aButtonRecord)
-    public void add(FSActionObject anAction)
-</pre>
-</li>
-
-<li>FSDefineButton2 - add objects to internal array.
-<pre>
-    public void add(FSButtonRecord aButtonRecord)
-    public void add(FSButtonEvent aButtonEvent)
-</pre>
-</li>
-
-<li>FSButtonEvent - add actions to internal array.
-<pre>
-    public void add(FSActionObject anAction)
-</pre>
-</li>
-
-<li>FSClipEvent - add actions to internal array.
-<pre>
-    public void add(FSActionObject anAction)
-</pre>
-</li>
-
-<li>FSShape - construct an empty shape and add shape elements to internal array.
-<pre>
-    public FSShape()
-    public void add(FSTransformObject anObject)
-</pre>
-</li>
-
-<li>FSTextRecord - add characters to internal array.
-<pre>
-    public add(FSCharacter aCharacter)
-</pre>
-</li>
-
-<li>FSGradientFill - add gradients to internal array.
-<pre>
-    public add(FSGradient aCharacter)
-</pre>
-</li>
-
-<li>FSMorphGradientFill - add morph gradients to internal array.
-<pre>
-    public add(FSMorphGradient aCharacter)
-</pre>
-</li>
-
-<li>FSDefineFont - add shapes to internal array.
-<pre>
-    public void add(FSShape anObject)
-</pre>
-</li>
-
-<li>FSDefineFont - add objects to internal arrays.
-<pre>
-    public void add(FSShape anObject)
-    public void addCode(int aCode)
-    public void addAdvance(int anAdvance)
-    public void add(FSBounds anObject)
-    public void add(FSKerning anObject)
-</pre>
-</li>
-
-<li>FSDefineShape - add line and fill styles to internal arrays.
-<pre>
-    public void add(FSLineStyle aLineStyle)
-    public void add(FSFillStyle aFillStyle)
-</pre>
-</li>
-
-<li>FSDefineMorphShape - add line and fill styles to internal arrays.
-<pre>
-    public void add(FSLineStyle aLineStyle)
-    public void add(FSFillStyle aFillStyle)
-</pre>
-</li>
-
-<li>FSDefineText - add text records to internal array.
-<pre>
-    public void add(FSTextStyle anObject)
-    public void add(FSTextRecord anObject)
-</pre>
-</li>
-
-<li>FSShapeStyle - add line and fill styles to internal arrays.
-<pre>
-    public void add(FSLineStyle aLineStyle)
-    public void add(FSFillStyle aFillStyle)
-</pre>
-</li>
-</ul>
-
-<h2><a name="classchange7">7. Updated attribute names for sound classes.</a></h2>
-
-<P>The attributes in the classes used to handle sounds: FSDefineSound and FSSoundStreamHead are poorly named making their purpose harder to understand. The names across the classes have been renamed and standardised:</P> 
-
-<ul>
-<li>FSDefineSound
-
-<ul>
-<li><em>getRate()</em> has been renamed <em>getPlaybackRate()</em> and now returns an integer defining the rate at which the sound is played in Hertz. Previously the value was returned as a floating point number with the rate rounded to the nearest KiloHertz.</li>
-
-<li><em>setRate(float)</em> has been renamed <em>setPlaybackRate(int)</em> with the integer argument now specifying the number of Hertz at which a sound will be played rather than a floating point number specifying the rate rounded to the nearest KiloHertz.</li>
-
-<li><em>getSampleSize()</em> has been renamed <em>getPlaybackSampleSize()</em> and now returns an integer defining the number of bytes per sample. Previously the number of bits per sample was returned.</li>
-
-<li><em>setSampleSize(int)</em> has been renamed <em>getPlaybackSampleSize(int)</em> with the argument specifying the number of bytes per sample. Previously the argument specified the number of bits per sample.</li>
-
-<li><em>getChannelCount()</em> has been renamed <em>getPlaybackChannels()</em>.</li>
-
-<li><em>setChannelCount(int)</em> has been renamed <em>setPlaybackChannels(int)</em>.</li>
-</ul>
-</li>
-
-<li>FSSoundStreamHead
-
-<ul>
-<li><em>getPlaybackRate()</em> now returns an integer defining the rate at which the sound is played in Hertz. Previously the value was returned as a floating point number with the rate rounded to the nearest KiloHertz.</li>
-
-<li><em>getSampleSize()</em> has been renamed <em>getPlaybackSampleSize()</em> and now returns an integer defining the number of bytes per sample. Previously the number of bits per sample was returned.</li>
-
-<li><em>setSampleSize(int)</em> has been renamed <em>getPlaybackSampleSize(int)</em> with the argument specifying the number of bytes per sample. Previously the argument specified the number of bits per sample.</li>
-
-<li><em>getPlaybackChannelCount()</em> has been renamed <em>getPlaybackChannels()</em>.</li>
-
-<li><em>setPlaybackChannelCount(int)</em> has been renamed <em>setPlaybackChannels(int)</em>.</li>
-
-<li><em>getRate()</em> has been renamed <em>getStreamRate()</em> and now returns an integer defining the rate at which the streaming sound sound is played in Hertz. Previously the value was returned as a floating point number with the rate rounded to the nearest KiloHertz.</li>
-
-<li><em>setRate(float)</em> has been renamed <em>setStreamRate(int)</em> with the integer argument now specifying the number of Hertz at which the streaming sound is played rather than a floating point number specifying the rate rounded to the nearest KiloHertz.</li>
-
-<li><em>getChannelCount()</em> has been renamed <em>getStreamChannels()</em>.</li>
-
-<li><em>setChannelCount(int)</em> has been renamed <em>setStreamChannels(int)</em>.</li>
-
-<li><em>getSampleCount()</em> has been renamed <em>getStreamSampleCount()</em>.</li>
-
-<li><em>setSampleCount(int)</em> has been renamed <em>setStreamSampleCount(int)</em>.</li>
-
-<li>The methods to return the format for the encoded sound have now been moved to the FSSoundStreamHead2 class as the format in FSSoundStreamHead is fixed as ADPCM.</li>
-</ul>
-</li>
-</ul>
-
-<h2><a name="classchange8">8. Renamed the attributes in the FSBounds class.</a></h2>
-
-<P>The coordinate system for the Flash Player is different from other graphics systems with the positive y axis extending from top to bottom of the screen. The attributes have been renamed to remove potential confusion when visualising the placement of the bounding rectangle on the Flash Player screen. The names of the accessor methods have changed:</P>
-
-<pre>
-    public int getXLower()
-    public int getXLower(boolean direct)
-    
-    public int getYLower()
-    public int getYLower(boolean direct)
-    
-    public int getXUpper()
-    public int getXUpper(boolean direct)
-    
-    public int getYUpper()
-    public int getYUpper(boolean direct)
-
-    public void setXLower(int xl)
-    public void setXLower(int xl, boolean direct)
-    
-    public void setYLower(int yl)
-    public void setYLower(int yl, boolean direct)
-    
-    public void setXUpper(int xu)
-    public void setXUpper(int xu, boolean direct)
-    
-    public void setYUpper(int yu)
-    public void setYUpper(int yu, boolean direct)
-</pre>
-
-<P>Are replaced by:</P>
-
-<pre>
-    public int getMinX()
-    public int getMinX(boolean direct)
-    
-    public int getMinY()
-    public int getMinY(boolean direct)
-    
-    public int getMaxX()
-    public int getMaxX(boolean direct)
-    
-    public int getMaxY()
-    public int getMaxY(boolean direct)
-
-    public void setMinX(int xl)
-    public void setMinX(int xl, boolean direct)
-    
-    public void setMinY(int yl)
-    public void setMinY(int yl, boolean direct)
-    
-    public void setMaxX(int xr)
-    public void setMaxX(int xr, boolean direct)
-    
-    public void setMaxY(int yr)
-    public void setMaxY(int yr, boolean direct)
-</pre>
-
-<h2><a name="classchange9">9. Merged state flags on FSButtonRecord class.</a></h2>
-
-<P>The FSButtonRecord class defined the appearance of a button in each of its three states: up, over and down along with a flag used to specify the active area of the button. These boolean flags have been replaced by a single state code attribute along with constants that define values for each state. As with the FSButtonEvent and FSClipEvent classes a shape can define the appearance of the button more more than one state by bitwise Or'ing the individual state codes:</P>
-
-<pre>
-    int buttonCode = FSButtonRecord.Up | FSButtonRecord.Over;
-</pre>
-
-<P>The class constructors are now:</P>
-
-<pre>
-    public FSButtonRecord(int aState, int anIdentifier, int aLayer)
-    public FSButtonRecord(int aState, int anIdentifier, int aLayer, 
-        FSCoordTransform aTransform, FSColorTransform aColorTransform)
-</pre>
-
-<P>The state code is now returned by:</P>
-
-<pre>
-    public int getState()
-</pre>
-
-<P>and the accessor methods:</P>
-
-<pre>
-    public void setIsActive(boolean aBool)
-    public void setIsDown(boolean aBool)
-    public void setIsOver(boolean aBool)
-    public void setIsUp(boolean aBool)
-    
-    public void setButtonState(boolean isDown, boolean isOver, boolean isUp)
-</pre>
-
-<P>are now replaced by:</P>
-
-<pre>
-    public void setState(int aState)
-</pre>
-
-<P>The remaining accessor methods which returned the state of the individual flags:</P>
-
-<pre>
-    public boolean isActive()
-    public boolean isDown()
-    public boolean isOver()
-    public boolean isUp()
-    
-    public void setButtonState(boolean isDown, boolean isOver, boolean isUp)
-</pre>
-
-<P>are retained to identify which states a FSButtonRecord object represents.</P>
-
-<h2><a name="classchange10">10. FSImport and FSExport now support arrays.</a></h2>
-
-<P>Previously only one object at a time could be imported or exported using the FSImport and FSExport classes. The classes have been updated with the identifier and name attributes replaced with a Hashtable. The identifier and name of an object are used as the key/value pair.</P>
-
-<h2><a name="classchange11">11. FSHeader now merged into FSMovie.</a></h2>
-
-<P>The version, frameSize and frameRate attributes from the FSHeader class have now been merged into the FSMovie class. the FSHeader class is no longer used. New constructors have been added to FSMovie:
-
-<pre>
-    public FSMovie(int aVersion, 
-                   FSBounds aBounds, 
-                   float framesPerSecond, 
-                   ArrayList anArray)
-    public FSMovie(FSBounds aBounds, float framesPerSecond)
-</pre>
-
-<P>Accessor methods for the new attributes have also been added.</P>
-
-<h2><a name="classchange12">12. Added toString(int) to control graph depth.</a></h2>
-
-<P>The toString(int depth) method was added to control the number of levels of nested objects
-that are traversed when generating the string representation of an object. The string representation
-is displayed for up to <em>n</em> levels of nested object avoiding generating large strings when 
-obtaining the description of a font definition.</P>
-
-<h2><a name="classchange13">13. Miscellaneous Changes.</a></h2>
-
-<ul>
-<li>FSPush: Removed the method <em>add(ArrayList anArray)</em>. Calls to this method can be replaced with:
-<pre>
-    ArrayList values = push.getValues();
-    values.addAll(anArray);
-</pre>
-</li>
-
-<li>FSTable: Removed the method <em>addAll(ArrayList anArray)</em>. Calls to this method can be replaced with:
-<pre>
-    ArrayList values = table.getValues();
-    values.addAll(anArray);
-</pre>
-</li>
-
-<li>FSMovie: Removed the method <em>add(ArrayList anArray)</em>. Calls to this method can be replaced with:
-<pre>
-    ArrayList objects = movie.getObjects();
-    objects.addAll(anArray);
-</pre>
-</li>
-
-<li>FSDefineMovieClip: Renamed accessor methods for the array of objects to:
-<pre>
-    public ArrayList getObjects()
-    public void setObjects(ArrayList anArray)
-</pre>
-</li>
-
-<li>FSDefineButton2: Renamed constants identifying different types of button:
-<ul>
-<li>PushButton was renamed to Push</li>
-<li>MenuButton was renamed to Menu</li>
-</ul>
-</li>
-
-<li>FSGradientFill: setType(int aType) is now public.</li>
-
-<li> FSMorphGradientFill: setType(int aType) is now public.</li>
-
-<li>FSPlaceObject2: The ratio attribute which is used to define the progress of a morphing operation is now a floating point number taking values between 0.0 and 1.0. Previously the attribute was an integer with values between 0 and 65535. The floating point number is more intuitive.</li> 
-
-<li>FSPlaceObject2: The placeType attribute has been renamed to place.</li> 
-
-<li>FSFramedMovie: The FSFramedMovie class is no longer supported. The classes only slightly simplified the code required to generate a movie at the expense of increase code complexity inside the framework classes affected.</li> 
-
-<li>FSDefineImage: The class has been updated to support direct-mapped images and those with a colour table. For direct mapped images the pixel size is specified in the constructor as either 16 or 24 bits. For images containing a colour table the pixel size is omitted and defaults to 8 bits.</li>
-
-</ul>
-
-<h1>Validation</h1>
-
-<h2><a name="validation1">1. Accessor methods no longer validate arguments.</a></h2>
-
-<P>Error checking is no longer carried out in accessor methods. All validation is now performed when the movie is encoded. Although validating arguments could check whether a value was within the range supported by the bit fields in the Flash file format it was not possible to trap all errors and validation prior to encoding provides a more comprehensive and detailed solution allowing contextual errors such as placing an object on the display list that does not exist to be caught.</P>
-
-<h1>Documentation<h1>
-
-<h2><a name="documentation1">1. All class datasheets updated.</a></h2>
-
-<P>The documentation for each class has been overhauled with the existing class descriptions replaced with the descriptions developed for the C++ version of the framework. Most class descriptions now include simple examples which illustrate how the class is used. In addition an introduction to Flash along with a detailed description of the programming model supported by the Flash Player is also included.</P>
-
-<h1 style="{margin-top: 30;}">Requirements</h1>
-
-<p>To use Transform SWF you must have:</P>
-
-<ul>
-<li><a href="http://java.sun.com/j2se/">Java 2 Standard Edition</a></li>
-</ul>
-
-</body>
-</html>

Deleted: dev/dev-2-2/doc/releases/transform-1.4.1.html
===================================================================
--- dev/dev-2-2/doc/releases/transform-1.4.1.html	2006-10-01 16:18:31 UTC (rev 234)
+++ dev/dev-2-2/doc/releases/transform-1.4.1.html	2006-11-30 14:34:12 UTC (rev 235)
@@ -1,38 +0,0 @@
-<html>
-<head>
-<link type="text/css" href="style.css" rel="stylesheet">
-</head>
-
-<body>
-
-<h2>Release Notes for Transform 1.4.1</h2>
-
-<P>Version 1.4.1 is a minor maintenance release, fixing bugs reported since the last release.</P>
-
-<ul>
-<li>Bug Fixes
-    <ol>
-    <li><a href="#bugfix1">FSDefineFont2 now encodes font layout information.</a></li>
-    </ol>
-</li>
-<li>Validation
-    <ol>
-    <li><a href="#validation1">Flash Version checking is now relaxed.</a></li>
-    </ol>
-</li>
-</ul>
-
-<h2>Bug Fixes</h2>
-
-<h3><a name="bugfix1">1. FSDefineFont2 now encodes font layout information.</a></h3>
-
-<P>FSDefineFont2 now encodes any additional layout information that defines the layout of characters (ascent, descent, leading, advances, bounding box for characters or kerning information for character pairs). It was not encoded in previous releases.</P>
-
-<h2>Validation</22>
-
-<h3><a name="validation1">1. Flash Version checking is now relaxed.</a></h3>
-
-<P>The version for Flash, set in the FSMovie object is validated to ensure that it is not greater than the version supported by the current release. Although a warning is generated that does not affect the encoding of a movie the validation check has been removed allowing movies to be encoded for a higher Flash Version number.</P>
-
-</body>
-</html>

Deleted: dev/dev-2-2/doc/releases/transform-2.0.0.html
===================================================================
--- dev/dev-2-2/doc/releases/transform-2.0.0.html	2006-10-01 16:18:31 UTC (rev 234)
+++ dev/dev-2-2/doc/releases/transform-2.0.0.html	2006-11-30 14:34:12 UTC (rev 235)
@@ -1,326 +0,0 @@
-<html>
-<head>
-<link type="text/css" href="style.css" rel="stylesheet">
-</head>
-
-<body>
-
-<h1>Release Notes for Transform SWF for Java, Version 2.0.</h1>
-
-<P>This edition of Transform is based on the previous release: Transform SWF for Java 1.4.1. This document describes the changes made.</P>
-
-<ul>
-<li>Different Editions are now available for each release of Flash.</li>
-<li>Flash Versions 6 &amp; 7 are now fully supported.</li>
-<li>Pixels are no longer supported, coordinates must be specified in twips.</li>
-<li>Error reporting and handling when encoding or decoding files is improved.</li>
-<li>Validation has been removed and will be handled by a separate, stand-alone class.</li>
-<li>Flash files using different string encodings are now supported.</li>
-<li>Flash Video is now supported.</li>
-</ul>
-
-<p>The development and packaging of the code in Transform SWF for Java has been radically changed. Editions are now released for each version of Flash with releases for Flash 5, 6 and 7 are now available. The documentation for each release fully describes all the classes and features available. Information on the differences between editions are available on Flagstone's web site. An Evaluation Edition is also available that implements all of the classes required to support Flash 1. This allows all of the features available in Flash to be explored for evaluation purposes.</P>
-
-<p>Each Edition nominally contains 100% of the functionality required to support a given version of Flash. Although Transform has been available for almost 2 years there may still be errors due to bugs and incorrect interpretation of the Flash file format as documented by Macromedia. To distinguish between releases of the code each edition has a corresponding <em>build number</em> which is incremented each time a new release is made.</p> <p>With the exception of removing support for values expressed in pixels, the new release will only require minor changes to existing code. The changes described in more detail are as follows:</P>
-
-<ul>
-<li>New Classes    
-<ol>    
-<li><a href="#new1">New classes for Flash 5.</a></li>    
-<li><a href="#new2">New classes for Flash 6.</a></li>    
-<li><a href="#new3">New classes for Flash 7.</a></li>    
-</ol>
-</li>
-
-<li>Class Changes    
-<ol>    
-<li><a href="#change1">Values must now be specified in twips.</a></li>    
-<li><a href="#change2">Error handling and reporting has been improved.</a></li>    
-<li><a href="#change3">All validation has been removed from Transform SWF.</a></li>    
-<li><a href="#change4">Different string encodings are now supported.</a></li>    
-<li><a href="#change5">FSColorTable class is now a factory for FSColor objects.</a></li>    
-<li><a href="#change6">The FSEnd and FSEndShape classes have been removed.</a></li>    
-<li><a href="#change7">Constructors for JPEG image classes no longer support filenames.</a></li>    
-<li><a href="#change8">The FSTextStyle and FSTextRecord classes were merged into FSText.</a></li>    
-<li><a href="#change9">The localization methods in the Transform class have been removed.</a></li>    
-<li><a href="#change10">FSDefineFont2 now supports language attribute for line-breaks - Flash 6 and Flash 7 Editions only.</a></li>    
-<li><a href="#change11">FSFontInfo and FSDefineFont2 now supports small fonts - Flash 7 Edition only.</a></li>    
-<li><a href="#change12">FSFrameLabel now supports anchors - Flash 6 and Flash 7 Editions only.</a></li>    
-<li><a href="#change13">Movie clips now support button events - Flash 6 and Flash 7 Editions only.</a></li>    
-<li><a href="#change14">FSRegisterCopy now supports up to 256 registers - Flash 7 Edition only.</a></li>    
-<li><a href="#change15">FSDefineEditText has been renamed to FSDefineTextField.</a></li>    
-<li><a href="#change16">Factory methods for creating FAction objects have been removed.</a></li>    
-<li><a href="#change17">The FSButtonRecord class has been renamed to FSButton.</a></li>    
-<li><a href="#change18">setIs... methods on FSFontInfo, FSDefineFont2 and FSDefineTextField renamed.</a></li>    
-<li><a href="#change19">The FSWith action now supports an array of actions.</a></li>    
-<li><a href="#change20">FSDefineImage and FSDefineImage2 no longer supports separate colour table and image data.</a></li>    
-<li><a href="#change21">Simplified constructors on FSFontInfo and FSDefineFont2.</a></li>    
-<li><a href="#change22">Renamed sound formats.</a></li>    
-<li><a href="#change23">FSText attributes indent and baseline are renamed to offsetX and offsetY.</a></li>    
-</ol>
-</li>
-
-</ul>
-
-<h2>New Classes</H2>
-
-<h3><a name="new1">1. New classes for Flash 5.</a></h3>
-
-<ul>
-<li>FSEnableDebugger - part of Flash Version 5, though not previously included in Transform.</li>
-</ul>
-
-<h3><a name="new2">2. New classes for Flash 6.</a></h3>
-
-<P>A number of classes were added to support Flash 6:</P>
-
-<ul>
-<li>FSInitialize is used to initialize a movie clip before it is displayed.</li>
-<li>The following byte-code actions have been added to the FSAction class:
-<ul>
-<li>StrictEquals - checks that the values on the stack are the same type as well as representing the same value.</li>
-<li>Greater - the operation can be specified directly rather than synthesised.</li>
-<li>StringGreater - same as Greater but performed on string values.</li>
-<li>InstanceOf - supports the instanceof keyword in ActionScript 2.0.</li>
-</ul>
-</li>
-<li>FSEnableDebugger2 - implements the same functionality as FSEnableDebugger but with a different internal format.</li>
-<li>FSFontInfo2 - extends FSFontInfo to include a language attribute to support line-breaking.</li>
-<li>Classes added to enable video to be displayed directly in the Flash Player:
-<ul>
-<li>FSDefineVideo - defines a video stream that will be displayed by the Player, similar to the FSSoundStreamHead class.</li>
-<li>FSVideoFrame - contains the video information that is displayed in a frame.</li>
-</ul>
-</li>
-</ul>
-
-<P>Classes to support Flash Video format files:</p>
-
-<ul>
-<li>FSVideo - is the contain class for video objects, similar to FSMovie.</li>
-<li>FSVideoObject - is the abstract parent class for video objects, similar to FSMovieObject.</li>
-<li>FSAudioData - is used to add sound to a video stream.</li>
-<li>FSVideoData - is used to specify the video data played in each frame.</li>
-</ul>
-
-<p>will be included in a separate edition of Transform - due for release in the immediate future.</p>
-
-<h3><a name="new3">3. New classes for Flash 7.</a></h3>
-
-<P>New classes added to support Flash 7:</P>
-
-<ul>
-<li>The following byte-code actions have been added to the FSAction class:
-<ul>
-<li>Implements - supports the implements keyword in ActionScript 2.0.</li>
-<li>Extends - supports the extends keyword in ActionScript 2.0.</li><li>Cast - supports the cast keyword in ActionScript 2.0.</li>
-<li>Throw - supports the throw keyword in ActionScript 2.0.</li>
-</ul>
-</li>
-
-<li>FSExceptionHandler class was added to provide support for exceptions in ActionScript 2.0.</li>
-<li>FSNewFunction2 class was added to optimise function definitions and improve the performance of scripts.</li>
-<li>FSLimitScript is used to limit the resources available to a sequence of actions, preventing runaway scripts from crashing the Flash Player.</li>
-<li>FSTabOrder is used to define the tabbing order of objects displayed on the Flash Player screen.</li>
-<li>FSRegisterVariable is to specify which argument in an FSNewFunction2 object will be stored in one of the Flash Player's expanded set of 256 registers.</li>
-</ul>
-
-<h2>Class Changes</H2>
-
-<p>A number of the changes to the existing classes in Transform are only supported in the Flash 6 and 7 Editions. The documentation for each edition is updated to reflect the changes made.</P> 
-
-<h3><a name="change1">1. Values must now be specified in twips.</a></h3>
-
-<P>The flags COORDINATES_ARE_PIXELS, IMAGE_SIZES_ARE_PIXELS and FONT_SIZE_IS_PIXELS in the Transform class have been removed. Coordinates and font sizes must now be specified in twips. There were several reasons for doing this:</P>
-
-<ol>
-<li>Classes in the Transform Utilities framework, particularly the new FSShapeConstructor class which is used for drawing, support specifying values in pixels rather than twips as an object attribute. This provides a cleaner model, allowing values expressed in pixels or twips to be used on a case by case basis.</li>
-<li>Having a single global flag which had to be 'shared' among all the classes caused confusion, resulted in bugs and was useless in a threaded environment.</li>
-<li>Removing support simplified the API for heavily used classes such as FSBounds, FSLine, FSCurve, etc.</li>
-<li>IMAGE_SIZES_ARE_PIXELS was redundant as ALL image dimensions are specified in pixels.</li>
-<li>The use of the flags was not completely consistent across the entire framework.</li>
-</ol>
-
-<h3><a name="change2">2. Error handling and reporting has been improved.</a></h3>
-
-<P>When encoding or decoding FSMovie objects, errors can now be handled in one of two ways:</P>
-
-<ol>
-<li>Throw an exception.</li>
-<li>Report the error to a listener object.</li>
-</ol>
-
-<P>In previous releases of Transform SWF error handling was a mix of the two approaches. Exceptions would be thrown if a file could not be read or written, while errors that resulted from objects underflowing or overflowing while being encoded or decoded were reported to any listener object registered with the movie. This approach was inconsistent and difficult and to use effectively.</P>
-
-<P>Now the two mechanisms have been cleanly separated. The FSMovie class now provides different methods for each approach.</P>
-
-<pre>
-public FSMovie(String fileName)
-            throws FileNotFoundException, DataFormatException, IOException
-public FSMovie(byte[] data) 
-            throws DataFormatException, IOException
-public void decodeFromFile(String fileName) 
-            throws FileNotFoundException, DataFormatException, IOException        
-public void decodeFromData(byte[] bytes) 
-            throws DataFormatException, IOException
-public void encodeToFile(String fileName) 
-            throws FileNotFoundException, IOException
-</pre>
-
-<P>The listener interface is maintained, though with some name changes. All error and status messages are sent to the listener. Although the listener interface is principally used by Flagstone's development teams for debugging it is also useful when decoding a file that may contain corrupted data, allowing the invalid objects to be identified and the entire file decoded without an exception being thrown.</P>
-
-<pre>
-public FSMovie(String fileName, FSMovieListener listener)
-public FSMovie(byte[] data, FSMovieListener listener)
-public void decodeFromFile(String fileName, FSMovieListener listener)
-public void decodeFromData(byte[] bytes, FSMovieListener listener)
-public void encodeToFile(String fileName, FSMovieListener listener)
-</pre>
-
-<h3><a name="change3">3. All validation has been removed from Transform SWF.</a></h3>
-
-<P>Validation was primarily used as a debugging tool to verify that the attributes of each of the classes that would be encoded to generate a Flash file were set correctly. All the validation logic will be provided as a separate package, removing the overhead from the classes and allowing changes in the validation logic to be made more frequently.</P>
-
-<P>Error checking is performed in the constructor and set methods. If an argument is invalid then an IllegalArgumentException will be thrown. Note however that a lot of error checking is contextual, for example referencing an object that is not included in a movie so the Validation Framework is still recommended for detailed error checking.</P>
-
-<h3><a name="change4">4. Different string encodings are now supported.</a></h3>
-
-<P>Attributes containing strings contained UTF8 encoded strings which anticipated with the move to support Unicode that started with Flash 6. However files created using localized versions of the Flash authoring application, for example those Japanese character sets could not be successfully encoded or decoded. An encoding attribute has been added to the FSMovie class which identifies the character set that will be used to encode or decode a file.</P>
-
-<h3><a name="change5">5. FSColorTable class is now a factory for FSColor objects.</a></h3>
-
-<P>Colours from the Netscape Color Table can now be created directly using factory methods in the FSColorTable class. In previous releases of Transform colours were created using the following code:</P>
-
-<pre>
-FSColor aquamarine = new FSColor(FSColorTable.aquamarine);
-</pre>
-
-<p>By creating a class using factory methods for the colours in the table this is now simplified to:</P>
-
-<pre>
-FSColor aquamarine = FSColorTable.aquamarine();
-</pre>
-
-<P>For transparent colours the alpha channel value can now be specified in the factory method:</P>
-
-<pre>
-FSColor transparentAquamarine = FSColorTable.aquamarine(128);
-</pre>
-
-<P>The factory methods were not added to the FSColor class to reduce the size of the compiled code, particularly since a small subset of colours defined in the table are normally used.</P>
-
-<h3><a name="change6">6. The FSEnd and FSEndShape classes have been removed.</a></h3>
-
-<P>An FSEnd object no longer needs to be added to an FSMovie or FSDefineMovieClip object to mark the end of an array of movie objects. The marker will be encoded (or decoded) by the FSMovie or FSDefineMovieClip. Similarly an FSEndShape object no longer needs to be added to an FSShape object to mark the end of the shape definition.</P>
-
-<h3><a name="change7">7. Constructors for JPEG image classes no longer support filenames.</a></h3>
-
-<P>The FSDefineJPEGImage, FSDefineJPEGImage2 and FSDefineJPEGImage3 classes allowed the name of a file containing a JPEG image to be specified in a constructor. The contents of the file would be loaded to initialize the object. These constructors have been moved in the the new FSImageConstructor class in the Transform Utilities framework. The goal is to add methods that support a wider range of image formats and to provide a more consistent way of creating objects - similar constructors were not available for FSDefineImage, FSDefineImage2 classes.</P>
-
-<h3><a name="change8">8. The FSTextStyle and FSTextRecord classes have merged.</a></h3>
-
-<P>The FSTextStyle class has been merged into the FSTextRecord class and renamed to FSText. The same level of functionality is maintained - text records can contain style information or text strings or both. The change was made to maintain compatibility with Flash Version 6. File containing Flash 5 or earlier will still be encoded or decoded correctly.</P>
-
-<h3><a name="change9">9. The localization methods in the Transform class have been removed.</a></h3>
-
-<P>The Transform class contained several methods for creating localized strings using a ResourceBundle object loaded from a properties file. With the new model of using keys to identify errors, when reporting errors using the listener interface, applications using the framework can now use the error key in their own localization implementations therefore providing methods for localization was no longer useful.</P>
-
-<h3><a name="change10">10. FSDefineFont2 now supports language attribute for line-breaks - Flash 6 and Flash 7 Editions only.</a></h3>
-
-<P>A language attribute has been added to FSDefineFont2 class in Flash 6 and Flash 7 Editions. This provides the Flash Player with information on the spoken language for the text in a given font and is used to provide locale specific line-breaking for better display of text.</p>
-
-<h3><a name="change11">11. FSFontInfo and FSDefineFont2 now supports small fonts - Flash 7 Edition only.</a></h3>
-
-<P>Reserved fields in the FSFontInfo and FSDefineFont2 classes were changed to support the small attribute. This is a boolean flag indicating that the font definition is for a small font which may be aligned on pixel boundaries for faster display.</P>
-
-<h3><a name="change12">12. FSFrameLabel now supports anchors - Flash 6 and Flash 7 Editions only.</a></h3>
-
-<P>When a label is specified for a frame using the FSFrameLabel class it can also be identified as an anchor, allowing the frame to be specified in a URL just like a named hyperlink in HTML.</P>
-
-<h3><a name="change13">13. Movie clips now support button events - Flash 6 and Flash 7 Editions only.</a></h3>
-
-<P>The FSClipEvent object has been updated to support the new event model for movie clips introduced in Flash 7. Compatibility with Flash 5 is maintained.</P>
-
-<h3><a name="change14">14. FSRegisterCopy now supports up to 256 registers - Flash 7 Edition only.</a></h3>
-
-<P>In Flash 7, actions can now access up to 256 registers for storing values, rather than using slower variables in memory.</P>
-
-<h3><a name="change15">15. FSDefineEditText has been renamed to FSDefineTextField.</a></h3>
-
-<P>The FSDefineEditText class has been renamed to make its purpose more obvious.</P>
-
-<h3><a name="change16">16. Factory methods for creating FAction objects have been removed.</a></h3>
-
-<P>The factory methods on the FSAction class that were used to generate stack based actions were removed for several reasons: 1) to reduce the size of the compiled class 2) to reduce the size of the data-sheet for the class. Since the type of each action was documented the factory method documentation was repetitious and 3) the Translate parser and particularly the ASNode class from Translate can be used to generate sequences of actions more easily than generating the individual byte-code actions.</P>
-
-<h3><a name="change17>17. The FSButtonRecord class has been renamed to FSButton.</a></h3>
-
-<P>FSButtonRecord was renamed to the simpler FSButton.</p>
-
-<h3><a name="change18>18. setIs... methods on FSFontInfo, FSDefineFont2 and FSDefineTextField renamed.</a></h3>
-
-<P>Accessor methods for boolean attributes on the FSFontInfo, FSDefineFont2 and FSDefineTextField classes were renamed. For example setIsBold(boolean) was renamed to setBold(boolean).</p>
-
-<h3><a name="change19>19. The FSWith action now supports an array of actions.</a></h3>
-
-<P>The FSWith action was introduced in Flash 5 to temporarily change the context for actions, replacing the FSSetTarget action. The main movie or a movie clip object is popped of the stack and the FSWith action executes a set actions to update the object. In previous releases the FSWith action contained an actionLength attribute which contained the number of bytes that the set of actions following, occupied in memory. This has been replaced by an array so the actions associated with an FSWith action form part of the object. This will simplify the creation and manipulation of FSWith objects.</p>
-
-<h3><a name="change20>20. FSDefineImage and FSDefineImage2 no longer supports separate colour table and image data.</a></h3>
-
-<P>The FSDefineImage and FSDefineImage2 classes supported constructors and accessor methods where the colour table and image data could be specified separately. The object would then combine and compress the data using the zlib algorithm so it could be encoded to a Flash file. The constructor and methods are no longer supported, the same functionality is supported in the FSImageConstructor class in Transform Utilities which simplifies the process.</p>
-
-<h3><a name="change21">21. Simplified constructors on FSFontInfo and FSDefineFont2.</a></h3>
-
-<P>The FSFontInfo and FSDefineFont2 classes contain several attributes. Constructors which allowed all of the attributes to specified in a single step have been removed to make code more readable. Simplifying the constructors also improves code compatiblity between different versions of Flash - the language attibute was added in Flash 6 and support for small fonts was wadded in Flash 7.</p>
-
-<P>Each class now supports a single constructor:</P>
-
-<pre>
-public FSFontInfo(int anIdentifier, String name)
-public FSDefineFont2(int anIdentifier, String name)
-</pre>
-
-<P>While</p>
-<pre>
-public FSDefineFont2(int anIdentifier,
-                     int anEncoding,
-                     boolean italics,
-                     boolean bold,
-                     String name,
-                     ArrayList glyphArray,
-                     ArrayList codeArray)
-
-public FSDefineFont2(int anIdentifier,
-                     int anEncoding,
-                     boolean italics,
-                     boolean bold,
-                     String name,
-                     int ascent,
-                     int descent,
-                     int leading,
-                     ArrayList glyphArray,
-                     ArrayList codeArray,
-                     ArrayList advancesArray,
-                     ArrayList boundsArray,
-                     ArrayList kerningsArray)
-
-public FSFontInfo(int anIdentifier,
-                   String aName,
-                   int anEncoding,
-                   boolean isItalic,
-                   boolean isBold,
-                   ArrayList anArray)
-</pre>
-
-<P>have been removed.</P>
-
-<h3><a name="change22">22. Renamed sound formats.</a></h3>
-
-<p>Previously Pulse-Code Modulated (PCM) sounds distinguished between big-endian (FSSound.PCMB) and little-endian(FSSound.PCMB) formats. PCMB was renamed to NATIVE_PCM since the byte order depends in the platform on which the sound is played. PCML was renamed to PCM since this provides cross-platform compatilbility and should be the default format for PCM encoded sound.</p>
-
-<h3><a name="change23">23. FSText attributes indent and baseline are renamed to offsetX and offsetY.</a></h3>
-
-<p>The indent and baseline specified the position of the line of text relative to thebounding rectangle that completely enclosed an area of text. The attributes were renamedto make their purpose more clear.</p>
-
-</body>
-</html>

Deleted: dev/dev-2-2/doc/releases/transform-2.0.1.html
===================================================================
--- dev/dev-2-2/doc/releases/transform-2.0.1.html	2006-10-01 16:18:31 UTC (rev 234)
+++ dev/dev-2-2/doc/releases/transform-2.0.1.html	2006-11-30 14:34:12 UTC (rev 235)
@@ -1,58 +0,0 @@
-<html>
-<head>
-<link type="text/css" href="style.css" rel="stylesheet">
-</head>
-
-<body>
-
-<h1>Release Notes for Transform SWF for Java, Version 2.0.1.</h1>
-
-<P>This release contains updated for the Eval, SWF5, SWF6 &amp; SWF7 Editions.</P>
-
-<table class="index">
-<tr><td class="section">Bug Fixes</td></tr>
-
-<tr><td class="item">
-<a href="#fix1">FSProtect decodes password string correctly.</a>
-</td>
-</tr>
-
-<tr><td class="item">
-<a href="#fix2">FSEnableDebugger decodes password string correctly.</a>
-</td>
-</tr>
-
-<tr><td class="item">
-<a href="#fix3">FSEnableDebugger2 decodes password string correctly.</a>
-</td>
-</tr>
-
-<tr><td class="section">Class Changes</td></tr>
-
-<tr><td class="item">
-<a href="#change1">The SWF_VERSION field on Transform is renamed to VERSION.</a>
-</td>
-</tr>
-
-</table>
-
-<h3><a name="fix1">1. FSProtect now decodes password string correctly.</a></h3>
-
-<P>The FSProtect class contains an MD5 encrypted password. Due to an error in Macromedia's Flash (SWF)File Format Specification the password string was not being decoded correctly. This is now fixed.</P>
-
-<h3><a name="fix2">2. FSEnableDebugger now decodes password string correctly.</a></h3>
-
-<P>The FSEnableDebugger class contains an MD5 encrypted password. Due to an error in Macromedia's Flash (SWF)File Format Specification the password string was not being decoded correctly. This is now fixed.</P>
-
-<h3><a name="fix3">3. FSEnableDebugger2 now decodes password string correctly.</a></h3>
-
-<P>The FSEnableDebugger2 class contains an MD5 encrypted password. Due to an error in Macromedia's Flash (SWF)File Format Specification the password string was not being decoded correctly. This is now fixed.</P>
-
-<h2>Class Changes</H2>
-
-<h3><a name="change1">1. The SWF_VERSION field on Transform is renamed to VERSION.</a></h3>
-
-<P>The field SWF_VERSION in the Transform class is used to identify the version of Flash supported. The field has been renamed to VERSION to standardize the release with the upcoming release of the Transform Video framework which supports Flash Video.</P>
-
-</body>
-</html>

Deleted: dev/dev-2-2/doc/releases/transform-2.0.2.html
===================================================================
--- dev/dev-2-2/doc/releases/transform-2.0.2.html	2006-10-01 16:18:31 UTC (rev 234)
+++ dev/dev-2-2/doc/releases/transform-2.0.2.html	2006-11-30 14:34:12 UTC (rev 235)
@@ -1,81 +0,0 @@
-<html>
-<head>
-<link type="text/css" href="style.css" rel="stylesheet">
-</head>
-
-<body>
-
-<h1>Release Notes for Transform for Java, Version 2.0.2.</h1> 
-
-<P>This build affects the following Editions: Eval, SWF5, SWF6 &amp; SWF7.</P>  
-
-<ul>
-<li>Bug Fixes     
-<ol>     
-<li><a href="#fix1">FSMovie now sets default signature correctly.</a></li>     
-</ol> 
-</li> 
-<li>Class Changes     
-<ol>     
-<li><a href="#change1">Binary encoded data can now be added to classes supporting actions or events.</a></li>     
-<li><a href="#change2">Added constructor FSDefineMovieClip(int anIdentifier).</a></li>     </ol> 
-</li> 
-</ul>  
-
-<h2>Bug Fixes</H2>  
-
-<h3><a name="fix1">1. FSMovie now sets default signature correctly.</a></h3>  
-
-<P>A default signature was set in the FSMovie class when using the following constructors:</P> 
- 
-<pre> 
-FSMovie() 
-FSMovie(FSBounds aBounds, float framesPerSecond) 
-</pre>  
-
-<p>The Flash version defaults to the constant Transform.VERSION and the signature selected was based on the version number. The signature was being set to "FWS" (indicating the movie is not compressed when encoded) for movies with a version number greater than 5 and  "CWS" (compress the movie when encoded) for version numbers 5 or lower. Flash only introduced movie compression with Flash 6 so this is the opposite of what should have happened. This is  now fixed so movies with Flash version numbers of 5 of less default to "FWS" while for  version numbers 6 or higher the default is "CWS".</P>  
-
-<P>In practice this presented no problems for Flash Players supporting Version 6 or higher which would uncompress a movie with the CWS signature and version numbers 5 or less. However Flash Players supporting Flash 5 or lower would not display the file correctly.</P>  
-
-<h2>Class Changes</H2>  
-
-<h3><a name="change1">1. Binary encoded data can now be added to classes supporting actions or events.</a></h3>  
-
-<P>The new release of Translate (Flagstone's ActionScript compiler) generates actions  encoded as binary data rather than arrays of objects. The following methods and  constructors have been added to classes that support actions or events to allow the data generated by Translate to be encoded in movies:</P>  
-
-<pre> 
-public FSDoAction(byte[] bytes) 
-public void setEncodedActions(byte[] bytes)
-  
-public FSDefineButton(int anIdentifier, ArrayList buttonRecordArray, byte[] bytes) 
-public void setEncodedActions(byte[] bytes)  
-
-public FSButtonEvent(int aNumber, byte[] bytes) 
-public void setEncodedActions(byte[] bytes)  
-
-public FSClipEvent(int eventCode, byte[] bytes) 
-public FSClipEvent(int eventCode, int keyCode, byte[] bytes) // SWF6 or SWF7 only 
-public void setEncodedActions(byte[] bytes)  
-
-public FSDefineButton2(int anIdentifier, 
-                       int buttonType, 
-                       ArrayList buttonRecordArray, 
-                       byte[] bytes) 
-public void setEncodedEvents(byte[] bytes)  
-
-public FSPlaceObject2(int anIdentifier, 
-                      int aLayer, 
-                      byte[] byte, 
-                      String aName, 
-                      int xLocation, 
-                      int yLocation) 
-public void setEncodedEvents(byte[] bytes) </pre>  
-
-<P>Generating the encoded actions, rather than objects, in Translate greatly boosts performance both in the compiler and when a movie is subsequently encoded.</P>   
-
-<h3><a name="change2">2. Added constructor FSDefineMoveClip(int anIdentifier).</a></h3>  
-
-<P>The new constructor was added to make writing code that added control objects to a movie clip more readable. Creating an array of control objects then adding it to the FSDefineMovieClip object is still more efficient however.</P>
-
-</body>
-</html>

Deleted: dev/dev-2-2/doc/releases/transform-2.0.3.html
===================================================================
--- dev/dev-2-2/doc/releases/transform-2.0.3.html	2006-10-01 16:18:31 UTC (rev 234)
+++ dev/dev-2-2/doc/releases/transform-2.0.3.html	2006-11-30 14:34:12 UTC (rev 235)
@@ -1,22 +0,0 @@
-<html>
-<head>
-<link type="text/css" href="style.css" rel="stylesheet">
-</head>
-
-<body>
-
-<h1>Release Notes for Transform SWF for Java, Version 2.0.3.</h1> 
-
-<P>This release is the first where the code is covered using the Berkeley 
-Software Distribution (BSD) License. Previous releases were covered with a 
-commercial license.</P>
-
-<P>Previously the framework was released in a series of editions: SWF5, SWF6, 
-SWF7 &amp; Eval - one for each "recent" version of Flash and a free Evaluation 
-edition which supported Flash 1, respectively. The editions have been dropped 
-and the current code base contains all of the classes required to support Flash 
-7 (MX 2004). The framework is backwards compatible allowing files corresponding
-to earlier versions of Flash to be generated.</P>
-
-</body>
-</html>

Deleted: dev/dev-2-2/doc/releases/transform-2.0.4-patch-1.html
===================================================================
--- dev/dev-2-2/doc/releases/transform-2.0.4-patch-1.html	2006-10-01 16:18:31 UTC (rev 234)
+++ dev/dev-2-2/doc/releases/transform-2.0.4-patch-1.html	2006-11-30 14:34:12 UTC (rev 235)
@@ -1,73 +0,0 @@
-<html>
-<head>
-<title>Release Notes for Transform SWF for Java, Version 2.0.4, Patch 1</title>
-<style type="text/CSS">
-<!--
-a:link { text-decoration: none; }
-a:visited { color: darkred; text-decoration: none; }
-a:active { text-decoration: none; }
-a:hover { color: #000066; text-decoration: none; }
-
-h1 { font-size: 140%; background-color: darkgray; padding: 3px 10px; }
-h2 { font-size: 120%; background-color: darkgray; padding: 3px 10px; }
-h3 { font-size: 110%; margin-bottom: 0px; }
-
-div.section { margin-left: 10px; margin-right: 10px; }
-
-p { margin-top: 0px; }
-pre { font-size: 90%; }
-ul { margin-left: 10px; }
-ul ol { margin-left: 10px; }
-table { margin-left: 10px;}
--->
-</style>
-</head>
-<body>
-
-<h1>Release Notes for Transform SWF for Java, Version 2.0.4, Patch 1.</h1>
-
-<div class="section">
-<P>This patch contains updated source code to fix two reported bugs in Transform
-classes.</P>
-
-</div><!-- section -->
-
-<h2>Classes Updated</H2>  
-
-<h3>FSDefineJPEGImage2, FSDefineJPEGImage3</h3>
-<p>The method:
-<pre>
-    private byte[] readJPEGStream(FSCoder coder)
-</pre>
-has been updated to correctly scan for the Start Of Image (SOI) tag in JPEG images.
-
-<h3>FSPush, FSProperty</h3>
-<p>The FSProperty class has been added to allow properties to use the pre-Flash 5
-codes (these were represented as 32-bit floating point numbers, while Flash 5 
-and upwards uses integers). The FSPush class was updated to decode the values 
-using the FSProperty class.</p>
-
-</div><!-- section -->
-
-<h2>How To Install</h2>
-<p>Simply replace the existing version of the classes in the source code tree
-and recompile - the Ant build file contains the build target which will perform
-the compile step and package the classes into a JAR file.<p>
-
-<p><em>IMPORTANT:</em> This patch is made available with limited testing. Please keep a copy of the 
-files you are replacing - just in case.</p>
-
-<h2>Additional Information</h2>
-
-<div class="section">
-<p>For Further Information please contact:</p>
-
-<p>Stuart MacKay<br/>
-Flagstone Software Ltd.<br/>
-92 High Street<br/>
-Wick, Caithness KW1 4LY<br/>
-Scotland<br/><br/>
-www.flagstonesoftware.com
-</div><!-- section -->
-</body>
-</html>

Deleted: dev/dev-2-2/doc/releases/transform-2.0.4.html
===================================================================
--- dev/dev-2-2/doc/releases/transform-2.0.4.html	2006-10-01 16:18:31 UTC (rev 234)
+++ dev/dev-2-2/doc/releases/transform-2.0.4.html	2006-11-30 14:34:12 UTC (rev 235)
@@ -1,103 +0,0 @@
-<html>
-<head>
-<title>Release Notes for Transform SWF, Version 2.0.4 for Java</title>
-<style type="text/CSS">
-<!--
-a:link { text-decoration: none; }
-a:visited { color: darkred; text-decoration: none; }
-a:active { text-decoration: none; }
-a:hover { color: #000066; text-decoration: none; }
-
-h1 { font-size: 140%; background-color: darkgray; padding: 3px 10px; }
-h2 { font-size: 120%; background-color: darkgray; padding: 3px 10px; }
-h3 { font-size: 110%; margin-bottom: 0px; }
-
-div.section { margin-left: 10px; margin-right: 10px; }
-
-p { margin-top: 0px; }
-pre { font-size: 90%; }
-ul { margin-left: 10px; }
-ul ol { margin-left: 10px; }
-table { margin-left: 10px;}
--->
-</style>
-</head>
-<body>
-
-<h1>Release Notes for Transform SWF for Java, Version 2.0.4.</h1>
-
-<div class="section">
-<P>This is a minor release fixing bugs and simplifying the package
-structure and build process.</P>
-
-<ul>
-<li>Bug Fixes     
-<ol>     
-<li><a href="#fix1">FSCoord Transform now composites transforms correctly.</a></li>     
-</ol> 
-</li> 
-<li>Package Changes     
-<ol>     
-<li><a href="#package1">Examples are now included in the source tree.</a></li>     
-<li><a href="#package2">Simplified package structure and build targets.</a></li>     
-<li><a href="#package3">Datasheets are now generated using Javadoc.</a></li>     
-</ol> 
-</li> 
-</ul>  
-</div><!-- section -->
-
-<h2>Bug Fixes</H2>  
-
-<div class="section">
-<h3><a name="fix1">1. FSCoord Transform now composites transforms correctly.</a></h3>  
-
-<P>In previous releases values from the composited transform were being reused 
-in the compositing operation rather than being saved to a temporary result 
-matrix. Now fixed.</P> 
-</div><!-- section -->
-
-<h2>Package Changes</H2>  
-
-<div class="section">
-<h3><a name="package1">1. Examples are now included in the source tree.</a></h3>  
-
-<P>The examples showing how to use the framework classes are now included in the 
-source tree in the package com.flagstone.transform.examples. This is the first 
-step in creating a unified package structure with all the source code in one 
-location.</P> 
-
-<h3><a name="package2">2. Simplified package structure and build targets.</a></h3>  
-
-<p>Classes are now compiled and packaged using a single ANT build file, build.xml. 
-The previous version contained references to build files that were used internally 
-to the projectand not normally part of the distribution.</P>
-
-<p>The build targets have also been simplified and made more flexible. A single
-target 'build' is not used to compile optimized versions of the framework and package
-the classes in a JAR file. For more detailed control, targets for each step in the 
-build process are included, giving a choice to compile optimized or debug versions
-of the framework, compile the examples and to package all compiled classes in the 
-JAR file. See the ANT file build.xml for more details.</P>
-
-<h3><a name="package3">3. Datasheets are now generated using Javadoc.</a></h3>  
-
-<p>Javadoc is now the preferred way of generating the class datasheets. Previously 
-doxygen was used. While doxygen is an excellent tool the goal of simplifying the
-package structure made Javadoc easier to use and avoided the need to download 
-and maintain another application.</P>
-</div><!-- section -->
-
-<h2>Additional Information</h2>
-
-<div class="section">
-<p>For Further Information please contact:</p>
-
-<p>Stuart MacKay<br/>
-Flagstone Software Ltd.<br/>
-92 High Street<br/>
-Wick, Caithness KW1 4LY<br/>
-Scotland<br/><br/>
-www.flagstonesoftware.com
-</div><!-- section -->
-</body>
-</html>

Deleted: dev/dev-2-2/doc/releases/transform-2.0.5.html
===================================================================
--- dev/dev-2-2/doc/releases/transform-2.0.5.html	2006-10-01 16:18:31 UTC (rev 234)
+++ dev/dev-2-2/doc/releases/transform-2.0.5.html	2006-11-30 14:34:12 UTC (rev 235)
@@ -1,239 +0,0 @@
-<html>
-<head>
-<title>Release Notes for Transform SWF for Java, Version 2.0.5</title>
-<style type="text/CSS">
-<!--
-a:link { text-decoration: none; }
-a:visited { color: darkred; text-decoration: none; }
-a:active { text-decoration: none; }
-a:hover { color: #000066; text-decoration: none; }
-
-h1 { font-size: 140%; background-color: darkgray; padding: 3px 10px; }
-h2 { font-size: 120%; background-color: darkgray; padding: 3px 10px; }
-h3 { font-size: 110%; margin-bottom: 0px; }
-
-div.section { margin-left: 10px; margin-right: 10px; }
-
-p { margin-top: 0px; }
-pre { font-size: 90%; }
-ul { margin-left: 10px; }
-ul ol { margin-left: 10px; }
-table { margin-left: 10px;}
--->
-</style>
-</head>
-<body>
-
-<h1>Release Notes for Transform SWF for Java, Version 2.0.5.</h1>
-
-<div class="section">
-<P>This release contains bug fixes and the deployment of text suites that use
-TestNG.</P>
-
-<P>Special thanks goes to Denis Bohm of Firefly Design for contributing fixes 
-for several bugs.</p>
-
-</div><!-- section -->
-
-<ul>
-<li>Bug Fixes     
-<ol>     
-<li><a href="#fix1">FSDefineVideo: the smoothing attribute is now encoded correctly.</a></li>     
-<li><a href="#fix2">FSPlaceObject2: ratioes of zero are now encoded.</a></li>     
-<li><a href="#fix3">FSPlaceObject2: clipping depth now masks shapes correctly.</a></li>     
-<li><a href="#fix4">FSPlaceObject2: unity colour transforms are now encoded correctly.</a></li>     
-<li><a href="#fix5">Shapes now handle all bitmap fill styles.</a></li>     
-<li><a href="#fix6">Bug fixes in 2.0.4 Patch 1 are included.</a></li>     
-</ol> 
-</li> 
-<li>Class Changes     
-<ol>     
-<li><a href="#class1">FSPlaceObject2 encodes any non-null transform.</a></li>     
-<li><a href="#class2">FSDefineTextField: defaults values for layout changed.</a></li>     
-</ol>
-</li>
-<li>Internal Class Changes 
-<ol>     
-<li><a href="#int1">FSCoordTransform now encoded more efficiently.</a></li>     
-<li><a href="#int2">FSText: number of advance bits defaults to 1.</a></li>     
-<li><a href="#int3">FSFontInfo: character code table is now encoded more efficiently.</a></li>     
-<li><a href="#int4">FSSoundStreamHead2 preserves reserved field.</a></li>     
-</ol> 
-</li> 
-<li>Package Changes 
-<ol>     
-<li><a href="#package1">Added the Tools package.</a></li>     
-<li><a href="#package2">Added test suites using TestNG.</a></li>     
-<li><a href="#package3">Further simplified package structure.</a></li>     
-</ol> 
-</li> 
-</ul>  
-</div><!-- section -->
-
-<h2>Bug Fixes</H2>  
-
-<div class="section">
-<h3><a name="fix1">1. FSDefineVideo: the smoothing attribute is now encoded correctly.</a></h3>  
-
-<P>Smoothing in FSDefineVideo tells the Flash Player to "smooth" the frames 
-displayed. This improves the visual appearance of the video but at a heavy
-performance cost. In previous releases the inverse value of boolean flag that 
-controls whether smoothing would be used was being encoded. Now Fixed</P> 
-
-<h3><a name="fix2">2. FSPlaceObject2: ratioes of zero are now encoded.</a></h3>  
-
-<p>The documentation for the class specified that the default value for the 
-morphing ratio was set to minus one (-1.0) and if the attribute was set to
-another value between 0.0 and 1.0 then it would be encoded in the movie. This
-attribute is now set correctly to -1.0 and morphing ratioes are now encoded.</p>
-
-<p>In previous releases the default value was actually zero and the text for 
-encoding was if the value was greater than zero. Consequently shapes at the 
-start of the morphing process would not be displayed correctly. Hpowever the 
-practical consequences of this bug were probably small since shapes typically 
-were quickly displayed moving through the different morphing steps.</p>
-
-<h3><a name="fix3">3. FSPlaceObject2: clipping depth now masks shapes correctly.</a></h3>  
-
-<p>The clipping depth allows a shape on a given layer to mask shapes displayed
-in front of it up to a specified layer number. In previous releases the 
-layer number was being decremented by 1 before encoding - for reasons which are
-lost in the mists of time. As a result the shape did not clip the topmost 
-layer specified. This is now fixed.</p>
-
-<h3><a name="fix4">4. FSPlaceObject2: unity colour transforms are now encoded correctly.</a></h3>  
-
-<p>A unity colour transform, which set the colours to the original values 
-defined in the shape has a special encoding in Flash files which is not included
-in the Flash file format specification from Macromedia. The transform is encoded
-as an empty transform with no add terms or multiply terms. When this form was 
-seen in files it was assumed it was a bug and that the transform was not doing
-anything useful. It is now known that this form "resets" the colour changes to
-the original colours are displayed. The effect was noticed on transparent shapes 
-where the unity transform is used to make the shape opaque.</p>
-
-<h3><a name="fix5">5. Shapes now handle all bitmap fill styles</a></h3>  
-
-<p>The Bitmap fill style types, Unsmoothed_Tiled and Unsmoothed_Clipped are now
-being decoded and encoded correctly in shape definitions: FSDefineShape, 
-FSDefineShape2 and FSDefineShape3.</p>
-
-<h3><a name="fix6">6. Bug fixes in 2.0.4 Patch 1 are included.</a></h3>  
-
-<p>The bug fixes for FSDefineJPEGImage2, FSDefineJPEGImage3 and FSPush are 
-included in this release.</p>
-
-</div><!-- section -->
-
-<h2>Class Changes</H2>  
-
-<div class="section">
-<h3><a name="class1">1. FSPlaceObject2 encodes any non-null transform.</a></h3>  
-
-<p>The FSPlaceObject2 class will now encode any non-null FSCoordTransform and
-FSCOlorTransform object. Previously the class checked to see whether the 
-transforms were unity transforms and only encoded them if they were not.</P>
-
-<h3><a name="class2">2. FSDefineTextField: defaults values for layout changed.</a></h3>  
-
-<p>Default values for alignment, leftMargin, rightMargin, indent and leading 
-were previosly set to zero. Layout information for a text field , which is 
-comprised of these attributes, was not encoded if all of the attributes were 
-zero. The default values are now set to the package constant 
-Transform.VALUE_NOT_SET which allows values of zero to be correctly specified
-when controlling the layout of the text displayed in the field.</p>
-
-</div><!-- section -->
-
-<h2>Class Changes</H2>  
-
-<div class="section">
-<h3><a name="int1">1. FSCoordTransform now encoded more efficiently.</a></h3>  
-
-<P>The same "empty" representation for FSColorTransform when encoding unity 
-transforms applies to FSCordsTransform. The class has been updated to encode
-and decode correctly using this form.</p>
-
-<h3><a name="int2">2. FSText: number of advance bits defaults to 1.</a></h3>  
-
-<p>FSText: the minimum number of advance bits is set to 1 so that files encoded 
-using Transform are identical to files generated by third-party tools. This 
-update appears to have no functional use but simplifies the progress of 
-regression testing.</P>
-
-<p>This change affects only the way text objects are encoded and is completely 
-hidden from the API.</p>
-
-<h3><a name="int3">3. FSFontInfo: character code table is now encoded more efficiently.</a></h3>  
-
-<p>The table containing the character codes is now sized correctly, using only 
-16-bits when there are codes over 255. Previously wide (16-bit) codes were 
-always used for ShiftJIS or Unicode characters.</p>
-
-<p>This change affects only the way text objects are encoded and is completely 
-hidden from the API.</p>
-
-<h3><a name="int4">4. FSSoundStreamHead2 now preserves reserved field.</a></h3>  
-
-<p>FSSoundStreamHead2: added an attributed _reserved, which is used to hold the 
-state of a reserved field when decoding a movie so then the movie is encoded the
-value is preserved. This field is supposed to always be zero, but this is not 
-the case in practice. This preserves the function in case it implements an 
-undocumented Flash feature.</p>
-
-</div><!-- section -->
-
-
-<h2>Class Changes</H2>  
-
-<div class="section">
-
-<h3><a name="package1">1. Added the Tools package.</a></h3>
-
-<p>A new package com.flagstone.transform.tools has been added for useful 
-programs and utilities. The first tool to be included is TextDump which saves
-a full text description of a Flash file. This tool implements the Export 
-command in Describe SWF (it uses the same code, with minor modifications) and 
-generates a formatted file showing all the data structures and values decoded 
-from a Flash file.</p>
-
-<p>The primary use of this tool is for debugging. Text representations of file
-that has been decoded then reencoded can be compared against the original file
-providing a quick way of seeing what the differences are.</p>
- 
-<h3><a name="package2">2. Added test suites using TestNG.</a></h3>
-
-<P>As promised in the roadmap, TestNG is now being used for performing all 
-testing on the classes. Some tests has been added, the most important one is 
-com.flagstone.transform.test.FSMovieTest. This test combined with the TextDump 
-tool is now used to verify that all the classes in the framework are encoding 
-and decoding correctly.</P>
-
-<p>More tests will be added in the future to verify correct operation of 
-individual classes.</P>
-
-<P>TestNG is not included with the release but see the file, doc/README.txt for
-more information on how to obtain the library and run the test suites included 
-in the directory, test/suites.</p>
- 
-<h3><a name="package3">3. Further simplified package structure.</a></h3>
-
-<p>Some of files such as README.txt and LICENCE.txt have been moved around to
-simplify the package structure and generally tidy things up.</p> 
-
-</div><!-- section -->
-
-<h2>Additional Information</h2>
-
-<div class="section">
-<p>For Further Information please contact:</p>
-
-<p>Stuart MacKay<br/>
-Flagstone Software Ltd.<br/>
-92 High Street<br/>
-Wick, Caithness KW1 4LY<br/>
-Scotland<br/><br/>
-www.flagstonesoftware.com
-</div><!-- section -->
-</body>
-</html>

Deleted: dev/dev-2-2/doc/releases/transform-2.1.1.html
===================================================================
--- dev/dev-2-2/doc/releases/transform-2.1.1.html	2006-10-01 16:18:31 UTC (rev 234)
+++ dev/dev-2-2/doc/releases/transform-2.1.1.html	2006-11-30 14:34:12 UTC (rev 235)
@@ -1,80 +0,0 @@
-<html>
-<head>
-<title>Release Notes for Transform SWF for Java, Version 2.1.1</title>
-<style type="text/CSS">
-<!--
-a:link { text-decoration: none; }
-a:visited { color: darkred; text-decoration: none; }
-a:active { text-decoration: none; }
-a:hover { color: #000066; text-decoration: none; }
-
-h1 { font-size: 140%; background-color: darkgray; padding: 3px 10px; }
-h2 { font-size: 120%; background-color: darkgray; padding: 3px 10px; }
-h3 { font-size: 110%; margin-bottom: 0px; }
-
-div.section { margin-left: 10px; margin-right: 10px; }
-
-p { margin-top: 0px; }
-pre { font-size: 90%; }
-ul { margin-left: 10px; }
-ul ol { margin-left: 10px; }
-table { margin-left: 10px;}
--->
-</style>
-</head>
-<body>
-
-<h1>Release Notes for Transform SWF for Java, Version 2.1.1.</h1>
-
-<div class="section">
-<P>This a minor release fixing bugs.</P>
-
-</div><!-- section -->
-
-<ul>
-<li>Bug Fixes     
-<ol>     
-<li><a href="#fix1">FSSoundConstructor: Now decodes MP3 files correctly.</a></li>     
-</ol> 
-</li> 
-</ul>  
-</div><!-- section -->
-
-<h2>Bug Fixes</H2>  
-
-<div class="section">
-<h3><a name="fix1">1. FSSoundConstructor: Now decodes MP3 files correctly.</a></h3>  
-
-<P>When an MP3 file contained a trailing ID3 block that overwrote part of the
-last frame in a file the decoder would scan this block for a new start of frame
-marker. If the scanning process started less than 11 bits (the size of the marker)
-from the end of the file then the method FSCodec.findBits() would go into an
-infinite loop.</P> 
-
-<p>The cause was a bug in the way the findBits() method stepped through a block
-of data. If a read using the readBits() method would cause an overflow then the 
-value of the internal pointer would be clamped to the end of the file. The 
-pointer was then decremented by the size of the start of frame marker (11 bits)
-and incremented by the step size (8 bits). The next read would cause an overflow 
-so the pointer was clamped and the process repeated ad infinitum.</p>
-
-<p>The process of decoding MP3 files now checks whether a frame has ended 
-prematurely and the findBits() method now correctly adjusts for the actual 
-number of bits read - not the expected number.</P>
-
-</div><!-- section -->
-
-<h2>Additional Information</h2>
-
-<div class="section">
-<p>For Further Information please contact:</p>
-
-<p>Stuart MacKay<br/>
-Flagstone Software Ltd.<br/>
-92 High Street<br/>
-Wick, Caithness KW1 4LY<br/>
-Scotland<br/><br/>
-www.flagstonesoftware.com
-</div><!-- section -->
-</body>
-</html>

Deleted: dev/dev-2-2/doc/releases/transform-2.1.html
===================================================================
--- dev/dev-2-2/doc/releases/transform-2.1.html	2006-10-01 16:18:31 UTC (rev 234)
+++ dev/dev-2-2/doc/releases/transform-2.1.html	2006-11-30 14:34:12 UTC (rev 235)
@@ -1,322 +0,0 @@
-<html>
-<head>
-<title>Release Notes for Transform SWF for Java, Version 2.1</title>
-<style type="text/CSS">
-<!--
-a:link { text-decoration: none; }
-a:visited { color: darkred; text-decoration: none; }
-a:active { text-decoration: none; }
-a:hover { color: #000066; text-decoration: none; }
-
-h1 { font-size: 140%; background-color: darkgray; padding: 3px 10px; }
-h2 { font-size: 120%; background-color: darkgray; padding: 3px 10px; }
-h3 { font-size: 110%; margin-bottom: 0px; }
-
-div.section { margin-left: 10px; margin-right: 10px; }
-
-p { margin-top: 0px; }
-pre { font-size: 90%; }
-ul { margin-left: 10px; }
-ul ol { margin-left: 10px; }
-table { margin-left: 10px;}
--->
-</style>
-</head>
-<body>
-
-<h1>Release Notes for Transform SWF for Java, Version 2.1.</h1>
-
-<div class="section">
-<P>This release brings forward a lot of changes discussed in the roadmap for 
-Version 3.0. The two most important ones are:
-<ol>
-<li>Transform Utilities classes are included in the package structure.</li>
-<li>Lazy decoding of actions and shapes which brings huge performance gains.</li>
-</ol>
-Other changes are mostly administrative, cleaning up code and generally resolving
-minor technical issues and improving support and use of TestNG for testing and
-verification.</p>
-
-<p>The project is also open to code contributed by other developers. A new 
-package transform.contrib is now included in the source tree for code not 
-covered by Flagstone's copyright. This package is open for any code which maybe 
-useful for developers - as long as it is compatible with the BSD licence.</P>
-
-</div><!-- section -->
-
-<ul>
-<li>Bug Fixes     
-<ol>     
-<li><a href="#fix1">FSPush: FSProperty objects are cloned correctly.</a></li>     
-<li><a href="#fix2">FSTextConstructor handles file names in upper case.</a></li>     
-</ol> 
-</li> 
-<li>New Classes 
-<ol>     
-<li><a href="#new1">FSCharacterTable providing character sets for FSTextConstructor</a></li>     
-<li><a href="#new2">FSCoderException to handle and report encoding or decoding errors.</a></li>     
-</ol> 
-</li> 
-<li>Class Changes     
-<ol>     
-<li><a href="#class1">FSMovieTest: Added methods to benchmark code performance.</a></li>     
-<li><a href="#class2">FSTransformObject: methods used to encode/decode classes are public.</a></li>     
-<li><a href="#class3">Added copy constructors on all classes.</a></li>     
-<li><a href="#class4">Removed redundant exception declarations.</a></li>
-<li><a href="#class5">Added the constructor public FSTextConstructor(int, Font).</a></li>
-<li><a href="#class6">FSTextConstructor: added reset method.</a></li>
-<li><a href="#class7">FSTextConstructor: added willDisplay method.</a></li>
-<li><a href="#class8">Tidied up FSCoder class and deprecated FSCodec.</a></li>
-<li><a href="#class9">TransformUtil is deprecated.</a></li>
-<li><a href="#class10">Deprecated the FSMovieListener interface.</a></li>
-</ol>
-</li>
-<li>Internal Class Changes 
-<ol>     
-<li><a href="#int1">Canonical objects are now used.</a></li>     
-<li><a href="#int2">Added lazy decoding of shapes and actions.</a></li>     
-<li><a href="#int3">Improved decoding of JPEG image data.</a></li>     
-</ol> 
-</li> 
-<li>Package Changes 
-<ol>     
-<li><a href="#package1">Merged Transform and Transform Utilities.</a></li>     
-<li><a href="#package2">Added a package for contrubuted code.</a></li>     
-</ol> 
-</li> 
-</ul>  
-</div><!-- section -->
-
-<h2>Bug Fixes</H2>  
-
-<div class="section">
-<h3><a name="fix1">1. FSPush: FSProperty objects are cloned correctly.</a></h3>  
-
-<P>FSProperty objects are now copied into the cloned array. Previously the 
-cloned array "dropped" any FSPropert objects.</P> 
-
-<h3><a name="fix1">2. FSTextConstructor handles file names in upper case.</a></h3>  
-
-<p>File names in upper case are now handled - this makes using TrueType files 
-from Windows systems much easier.</p>
-
-</div><!-- section -->
-
-<h2>New Classes</H2>  
-
-<div class="section">
-<h3><a name="new1">1. FSCharacterTable providing character sets for FSTextConstructor</a></h3>  
-
-<P>The willDisplay() method on FSTextConstructor (see below) is used to 
-define the characters that will be encoded in a font. The FSCharacterTable 
-class provided arrays of characters that can be used with the willDisplay
-method. Different character sets are provided for ISO 8859-1 as well as 
-characters for the main European languages.</P> 
-
-<h3><a name="new2">2. FSCoderException to handle and report encoding or decoding errors.</a></h3>  
-
-<P>Added a new exception class, FSCoderException to report when underflow or
-overflow errors occur when encoding or decoding objects. Previously only the 
-more general IOException was reported. FSCoderException contains information on 
-the location of the data structure in the file that caused the error making 
-diagnosis much easier.</p>
-
-</div><!-- section -->
-
-<h2>Class Changes</H2>  
-
-<div class="section">
-<h3><a name="class1">1. FSMovieTest: Added methods to benchmark code performance.</a></h3>  
-
-<p>Updated FSMovieTest.java to record the time taken to decode and encode
-Flash files. TestNG scripts for running the tests were added to the directory
-test\benchmarks. The benchmark tests use Flash files stored in the directories
-text\data\movies\swf&lt;x&gt;</P>
-
-<p>The benchmarks measure the time taken to decode or encode a given Flash file
-100 times and are best suited to measure relative improvements when optimizing 
-the code in the Transform classes.</p>
-
-<h3><a name="class2">2. FSTransformObject: methods used to encode/decode classes are public.</a></h3>  
-
-<p>The methods used to encode and decode objects:</p>
-
-<pre>    int length(FSCoder)
-    void decode(FSCoder)
-    void encode(FSCoder)
-</pre>
-
-<p>along with the constructor for each class that initialised an object with
-binary data decoded from an FSCoder object are all "upgraded" to public to 
-support testing with TestNG.</P>
-
-<h3><a name="class3">3. Added copy constructors on all classes.</a></h3>  
-
-<p>All classes now have copy constructors to complement the clone()
-method.</p>
-
-<h3><a name="class4">4. Removed redundant exception declarations.</a></h3>  
-
-<p>Removed redundant exceptions declarations from method signatures:
-FileNotFoundException is covered by IOException. Applies to FSMovie,
-FSSoundConstructor, FSImageConstructor. This change is simply aesthetic all the 
-removed exceptions are subclasses of IOException.</p>
-
-<h3><a name="class5">5. Added the constructor public FSTextConstructor(int, Font).</a></h3>  
-
-<p>FSTextConstructor had a single constructor FSTextConstructor(int, String)
-which was used to pass names of files and names of fonts. This new constructor
-was added to clearly differentiate fonts from files. Existing code is unaffected
-and will continue to operate in all future releases however use of this new
-method is encouraged when using AWT font definitions.</p>
-
-<h3><a name="class6">6. FSTextConstructor: added reset method.</a></h3>  
-
-<p>Added a reset(int) method to allow FSTextConstructor objects to be reused 
-when generating objects for more than one Flash file. The reset method clears
-the internal table used to track the order in which characters are used. This 
-allows the same FSTextConstructor object to be used to generate multiple font
-definitions. This is particularly useful when using AWT based fonts where the 
-time taken to decode the font definitions is relatively large.</p>
-
-<h3><a name="class7">7. FSTextConstructor: added willDisplay method.</a></h3>  
-
-<p>Added the method, willDisplay(char[]) to allow sets of characters to be 
-defined before creating any text objects.</p>
-
-<p>This solves the bug where characters were encoded in the order they were used 
-but not in ascending order of character code. This also simplifies using 
-FSTextConstructor class where previously text objects had to be defined before 
-the font definition was created.</p>
-
-<p>A corresponding canDisplay(char[]) method was added to verify that a given
-font can display all of the characters in a given set.</P>
-
-<h3><a name="class8">8. Tidied up FSCoder class and deprecated FSCodec.</a></h3>  
-
-<p>Tidied up the FSCoder class, making all methods more reliable and merging in
-functionality from Transform Utilities FSCodec. All decoding and encoding of 
-data is now performed using FSCoder. FSCodec is deprecated.</p>
-
-<h3><a name="class9">9. TransformUtil is now deprecated.</a></h3>  
-
-<p>with the merging of the Transform and Transform Utilities packages the 
-class TransformUtil is no longer required to provide basic version information
-and is now deprecated.</p>
-
-<h3><a name="class10">10. Deprecated the FSMovieListener interface.</a></h3>  
-
-<p>Deprecated the FSMovieListener interface, FSMovieEvent class and the methods 
-on the FSMovie class that used them.</p>
-
-<p>The FSMovieListener interface was originally used to support Describe. When 
-a movie was parsed the values decoded were reported to a FSMovieListener. This 
-allowed Describe to build a tree of objects so the contents of a Flash file 
-could be browsed.</p>
-
-<p>The interface also allowed errors to be reported so a file could be decoded 
-even if part of it was corrupted - some third-party tools are known to contain 
-bugs that generate errors. The Flash Player is robust when encountering this 
-type of error so the Movie Listener interface was an attempt to introduce 
-robustness into Transform.</p>
-
-<p>In practice the value of the interface was limited. Files containing errors
- which would cause errors were relatively unusual and when an error was detected 
- it was not obvious that recovering form the error was useful.</p>
-
-</div><!-- section -->
-
-<h2>Internal Class Changes</H2>  
-
-<div class="section">
-<h3><a name="int1">1. Canonical objects are now used.</a></h3>  
-
-<P>Added canonical version of objects that can be safely shared since they 
-contain no editable attributes. The classes affected are FSNull, FSVoid, 
-FSAction, FSCall, FSShowFrame and FSPathsArePostscript. The most significant is 
-FSAction which specifies byte-codes for stack-based actionsand so will boost 
-performance when decoding files. The numbers of objects involved for other
-classes are much smaller in comparison but are included for completeness.</p>
-
-<h3><a name="int2">2. Added lazy decoding of shapes and actions.</a></h3>  
-
-<p>Added lazy decoding of actions to FSButtonEvent, FSClipEvent, FSDoAction, 
-FSDefineButton and FSInitialize. The encoded actions will be stored in binary
-form in these objects until accessed using the getActions() or addAction()
-methods. When either of these methods are used the encoded actions will be 
-decoded into an array of FSAction objects. This reduces the number of objects
-created when a file is decoded so that only the actions accessed are decoded.</P>
-
-<P>Similarly for classes that define shapes. The array of FSLine, FSCurve and 
-FSShapeStyle objects are stored in binary form then decoded only when the array
-is accessed. The classes that define shapes are FSDefineShape, FSDefineShape2, 
-FSDefineShape3, FSDefineMorphShape, FSDefineFont and FSDefineFont2. Accessing
-shape objects is relatively unusual so lazy decoding speeds up processing by 
-only decoding objects that are used.</p>
-
-<p>Lazy decoding provides an enormous increase in performance. Benchmark tests
-when decoding files gave average performance increases of 15 times - with a 
-range between 0 and 420 times. Larger files gave larger performance gains.</p>
-
-<p>This is particularly important when using existing Flash files as a 
-template for customization. Simply replacing images, text and sound in a file
-does not typically need font glyphs and shapes to be decoded and using lazy 
-decoding can dramatically increase performance.</p>
-
-<P>Lazy decoding and encoding does not require any API changes.</p>
-
-<h3><a name="int3">3. Improved decoding of JPEG image data.</a></h3>  
-
-<p>Improved the algorithm when decoding the encoding table in the classes
-FSDefineJPEGImage2 and FSDefineJPEGImage3. The encoding table is now processed 
-correctly, even when the encoding table is empty and the start of image (SOI) 
-and end of image (EOI) markers are incorrectly specified.</p>
-
-</div><!-- section -->
-
-
-<h2>Package Changes</H2>  
-
-<div class="section">
-
-<h3><a name="package1">1. Merged Transform and Tranform Utilities.</a></h3>
-
-<p>Merged the classes from Transform Utilities into the Transform framework to 
-create a single release. All future releases will include the Utilities classes.
-Transform Utilities will no longer be released as a separate framework.</p>
-
-<P>Consequently the class, TransformUtil, which contains version number 
-information is deprecated and will be dropped in Transform 2.2.
-
-<h3><a name="package2">2. Added a package for contributed code.</a></h3>
-
-<p>A new package transform.contrib is included for code from third-parties
-that can be used with the classes in the Transform framework but which is not 
-subject to the same licencing terms or copyright ownership.</p>
-
-<p>Contributed code can be found in the directory src/transform/contrib. Any 
-code may be contributed to the project as long as it is compatible with the 
-terms of the BSD licence. All rights are retained by the author(s). Flagstone 
-specifically disclaims any rights to the code.</p>
-
-<p>The first contributed class is the code to compress WAV files to ADPCM. The 
-code is a Java port of C code released by Jack Jansen, Stichting Mathematisch 
-Centrum, Amsterdam, The Netherlands. This code was previously available on the 
-Flagstone web site and will now be included in future releases.</p>
-
-</div><!-- section -->
-
-<h2>Additional Information</h2>
-
-<div class="section">
-<p>For Further Information please contact:</p>
-
-<p>Stuart MacKay<br/>
-Flagstone Software Ltd.<br/>
-92 High Street<br/>
-Wick, Caithness KW1 4LY<br/>
-Scotland<br/><br/>
-www.flagstonesoftware.com
-</div><!-- section -->
-</body>
-</html>

Modified: dev/dev-2-2/src/com/flagstone/transform/FSButtonEvent.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSButtonEvent.java	2006-10-01 16:18:31 UTC (rev 234)
+++ dev/dev-2-2/src/com/flagstone/transform/FSButtonEvent.java	2006-11-30 14:34:12 UTC (rev 235)
@@ -285,6 +285,16 @@
         return actions;
     }
 
+    /** 
+     * Get the array of encoded actions that are executed when the frame is displayed.
+     *
+     * @return the array of action objects or null if the actions have been
+     * decoded.
+     */
+    public byte[] getEncodedActions() 
+    { 
+        return encodedActions;
+    }
     /** Sets the event code that this FSButtonEvent defines actions for.
 
         @param aNumber the event code.

Modified: dev/dev-2-2/src/com/flagstone/transform/FSButtonSound.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSButtonSound.java	2006-10-01 16:18:31 UTC (rev 234)
+++ dev/dev-2-2/src/com/flagstone/transform/FSButtonSound.java	2006-11-30 14:34:12 UTC (rev 235)
@@ -36,8 +36,8 @@
 <p>A sound is played for only a subset of the events that a button responds to:</p>
 
 <table>
+<tr><td>rollOut</td><td>The cursor exits the active area of the button.</td></tr> 
 <tr><td>rollOver</td><td>The cursor enters the active area of the button.</td></tr> 
-<tr><td>rollOut</td><td>The cursor exits the active area of the button.</td></tr> 
 <tr><td>press</td><td>The mouse button is clicked and the cursor is inside the active area of the button.</td></tr> 
 <tr><td>release</td><td>The mouse button is released while the cursor is inside the active area of the button.</td></tr>
 </table>
@@ -57,12 +57,12 @@
 </tr>
 
 <tr>
-<td><a name="FSButtonSound_2">sound[rollOver]</a></td>
+<td><a name="FSButtonSound_3">sound[rollOut]</a></td>
 <td>An FSSound object that describes how the sound will be played for a rollOver event.</td>
 </tr>
 
 <tr>
-<td><a name="FSButtonSound_3">sound[rollOut]</a></td>
+<td><a name="FSButtonSound_2">sound[rollOver]</a></td>
 <td>An FSSound object that describes how the sound will be played for a rollOver event.</td>
 </tr>
 
@@ -147,9 +147,9 @@
     {
         FSSound aSound = null;
         
-        if (eventCode == FSButtonEvent.RollOver)
+        if (eventCode == FSButtonEvent.RollOut)
             aSound = sound[0];
-        else if (eventCode == FSButtonEvent.RollOut)
+        else if (eventCode == FSButtonEvent.RollOver)
             aSound = sound[1];
         else if (eventCode == FSButtonEvent.Press)
             aSound = sound[2];
@@ -175,9 +175,9 @@
         */
     public void setSoundForEvent(int eventCode, FSSound aSound)
     {
-        if (eventCode == FSButtonEvent.RollOver)
+        if (eventCode == FSButtonEvent.RollOut)
             sound[0] = aSound;
-        else if (eventCode == FSButtonEvent.RollOut)
+        else if (eventCode == FSButtonEvent.RollOver)
             sound[1] = aSound;
         else if (eventCode == FSButtonEvent.Press)
             sound[2] = aSound;

Modified: dev/dev-2-2/src/com/flagstone/transform/FSClipEvent.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSClipEvent.java	2006-10-01 16:18:31 UTC (rev 234)
+++ dev/dev-2-2/src/com/flagstone/transform/FSClipEvent.java	2006-11-30 14:34:12 UTC (rev 235)
@@ -385,6 +385,16 @@
     }
 
     /** 
+     * Get the array of encoded actions that are executed when the frame is displayed.
+     *
+     * @return the array of action objects or null if the actions have been
+     * decoded.
+     */
+    public byte[] getEncodedActions() 
+    { 
+        return encodedActions;
+    }
+    /** 
      * Set the array of encoded actions generated by the classes in the Translate
      * framework. If the object already contains an array of actions then they 
      * will be deleted.

Modified: dev/dev-2-2/src/com/flagstone/transform/FSCoder.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSCoder.java	2006-10-01 16:18:31 UTC (rev 234)
+++ dev/dev-2-2/src/com/flagstone/transform/FSCoder.java	2006-11-30 14:34:12 UTC (rev 235)
@@ -683,7 +683,7 @@
         int bytesWritten = 0;
         
         if (ptr+(bytes.length << 3) > end)
-            addCapacity(data.length/2);
+            addCapacity(data.length/2+bytes.length);
         
         if (bytes == null || bytes.length == 0)
             return bytesWritten;
@@ -1051,7 +1051,11 @@
     public static final int TransparentColors = 0;
 
     static final int Action = 1;
-    static final int Version = 2;
+    /**
+     * Version is used to pass the current version of Flash that an object is 
+     * being encoded or decoded for.
+     */
+    public static final int Version = 2;
     static final int Type = 3;
     static final int Empty = 4;
     static final int Identifier = 5;

Modified: dev/dev-2-2/src/com/flagstone/transform/FSDefineButton.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSDefineButton.java	2006-10-01 16:18:31 UTC (rev 234)
+++ dev/dev-2-2/src/com/flagstone/transform/FSDefineButton.java	2006-11-30 14:34:12 UTC (rev 235)
@@ -276,6 +276,16 @@
     }
 
     /** 
+     * Get the array of encoded actions that are executed when the frame is displayed.
+     *
+     * @return the array of action objects or null if the actions have been
+     * decoded.
+     */
+    public byte[] getEncodedActions() 
+    { 
+        return encodedActions;
+    }
+    /** 
      * Set the array of encoded actions that will be executed when the button is 
      * clicked and released. The encoded actions are typically generated by the 
      * classes in the Translate framework. If the object already contains an 

Modified: dev/dev-2-2/src/com/flagstone/transform/FSDefineFont.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSDefineFont.java	2006-10-01 16:18:31 UTC (rev 234)
+++ dev/dev-2-2/src/com/flagstone/transform/FSDefineFont.java	2006-11-30 14:34:12 UTC (rev 235)
@@ -226,22 +226,27 @@
         
         super.decode(coder);
         
-        int start = coder.getPointer()-16;
+        int offsetStart = coder.getPointer();
+        int shapeCount = coder.scanWord(2, false) / 2;        
         
-        int shapeCount = coder.scanWord(2, false) / 2;
+        coder.setPointer(offsetStart);
+
+        int[] offset = new int[shapeCount+1];
         
-        int[] offset = new int[shapeCount];
-
         for (int i=0; i<shapeCount; i++)
             offset[i] = coder.readWord(2, false);
+        
+        offset[shapeCount] = length-2;
             
-        for (int i=0; i<shapeCount-1; i++)
-            shapes.add(new FSShape(coder, offset[i+1]-offset[i]));
+        for (int i=0; i<shapeCount; i++) {
+            coder.setPointer(offsetStart+(offset[i]<<3));
+            
+            if (coder.context[FSCoder.DecodeGlyphs] == 1)
+                shapes.add(new FSShape(coder));
+            else   
+                shapes.add(new FSShape(coder, offset[i+1]-offset[i]));
+        }
         
-        int bytesDecoded = (coder.getPointer()-start) >>> 3;
-
-        shapes.add(new FSShape(coder, length-bytesDecoded));
-
         coder.endObject(name());
     }
 }

Modified: dev/dev-2-2/src/com/flagstone/transform/FSDefineFont2.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSDefineFont2.java	2006-10-01 16:18:31 UTC (rev 234)
+++ dev/dev-2-2/src/com/flagstone/transform/FSDefineFont2.java	2006-11-30 14:34:12 UTC (rev 235)
@@ -855,6 +855,7 @@
         name = coder.readString(nameLength);
         glyphCount = coder.readWord(2, false);
 
+        int offsetStart = coder.getPointer();
         int[] offset = new int[glyphCount+1];
         
         for (int i=0; i<glyphCount; i++)
@@ -863,7 +864,15 @@
         offset[glyphCount] = coder.readWord((containsWideOffsets) ? 4 : 2, false);
 
         for (int i=0; i<glyphCount; i++)
-            shapes.add(new FSShape(coder, offset[i+1]-offset[i]));
+        {
+            coder.setPointer(offsetStart+(offset[i]<<3));
+            
+            if (coder.context[FSCoder.DecodeGlyphs] == 1)
+                shapes.add(new FSShape(coder));
+            else   
+                shapes.add(new FSShape(coder, offset[i+1]-offset[i]));
+                
+        }
 
         for (int i=0; i<glyphCount; i++)
             codes.add(new Integer(coder.readWord((containsWideCodes) ? 2 : 1, false)));

Modified: dev/dev-2-2/src/com/flagstone/transform/FSDefineImage2.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSDefineImage2.java	2006-10-01 16:18:31 UTC (rev 234)
+++ dev/dev-2-2/src/com/flagstone/transform/FSDefineImage2.java	2006-11-30 14:34:12 UTC (rev 235)
@@ -105,6 +105,7 @@
     public FSDefineImage2(FSCoder coder)
     {
         super(DefineImage2, 0);
+        extendLength = true;
         decode(coder);
     }
     /** Constructs an FSDefineImage2 object defining a colour-mapped image.
@@ -118,6 +119,7 @@
     public FSDefineImage2(int anIdentifier, int width, int height, int tableSize, byte[] compressedBytes)
     {
         super(DefineImage2, anIdentifier);
+        extendLength = true;
         setWidth(width);
         setHeight(height);
         setPixelSize(8);
@@ -135,6 +137,7 @@
     public FSDefineImage2(int anIdentifier, int width, int height, byte[] compressedBytes)
     { 
         super(DefineImage2, anIdentifier);
+        extendLength = true;
         setWidth(width);
         setHeight(height);
         setPixelSize(32);

Modified: dev/dev-2-2/src/com/flagstone/transform/FSDefineJPEGImage2.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSDefineJPEGImage2.java	2006-10-01 16:18:31 UTC (rev 234)
+++ dev/dev-2-2/src/com/flagstone/transform/FSDefineJPEGImage2.java	2006-11-30 14:34:12 UTC (rev 235)
@@ -95,9 +95,7 @@
     private int width;
     private int height;
     private byte[] image = null;
-    private byte[] encodingTable = new byte[] { 
-        (byte)0xFF, (byte)0xD8, (byte)0xFF, (byte)0xD9 
-    };
+    private byte[] encodingTable = null;
 
     /**
      * Construct an FSDefineJPEGImage2 object, initalizing it with values decoded 
@@ -193,6 +191,9 @@
         */
     public void setEncodingTable(byte[] bytes)
     {
+        if (bytes == null) {
+            bytes = new byte[] { (byte)0xFF, (byte)0xD8, (byte)0xFF, (byte)0xD9 };
+        }
         encodingTable = bytes;
     }
 

Modified: dev/dev-2-2/src/com/flagstone/transform/FSDefineJPEGImage3.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSDefineJPEGImage3.java	2006-10-01 16:18:31 UTC (rev 234)
+++ dev/dev-2-2/src/com/flagstone/transform/FSDefineJPEGImage3.java	2006-11-30 14:34:12 UTC (rev 235)
@@ -119,9 +119,7 @@
     private int width;
     private int height;
     private byte[] image = null;
-    private byte[] encodingTable = new byte[] { 
-        (byte)0xFF, (byte)0xD8, (byte)0xFF, (byte)0xD9 
-    };
+    private byte[] encodingTable = null;
     private byte[] alpha = null;
 
     /**
@@ -208,6 +206,9 @@
         */
     public void setEncodingTable(byte[] bytes)
     {
+        if (bytes == null) {
+            bytes = new byte[] { (byte)0xFF, (byte)0xD8, (byte)0xFF, (byte)0xD9 };
+        }
         encodingTable = bytes;
     }
 

Modified: dev/dev-2-2/src/com/flagstone/transform/FSDefineShape.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSDefineShape.java	2006-10-01 16:18:31 UTC (rev 234)
+++ dev/dev-2-2/src/com/flagstone/transform/FSDefineShape.java	2006-11-30 14:34:12 UTC (rev 235)
@@ -433,7 +433,10 @@
         
         int bytesDecoded = (coder.getPointer()-start) >> 3;
 
-        shape = new FSShape(coder, length-bytesDecoded);
+        if (coder.context[FSCoder.DecodeShapes] == 1)
+            shape = new FSShape(coder);
+        else
+            shape = new FSShape(coder, length-bytesDecoded);
 
         coder.endObject(name());
     }

Modified: dev/dev-2-2/src/com/flagstone/transform/FSDefineShape2.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSDefineShape2.java	2006-10-01 16:18:31 UTC (rev 234)
+++ dev/dev-2-2/src/com/flagstone/transform/FSDefineShape2.java	2006-11-30 14:34:12 UTC (rev 235)
@@ -463,7 +463,10 @@
 
         int bytesDecoded = (coder.getPointer()-start) >> 3;
 
-        shape = new FSShape(coder, length-bytesDecoded);
+        if (coder.context[FSCoder.DecodeShapes] == 1)
+            shape = new FSShape(coder);
+        else
+            shape = new FSShape(coder, length-bytesDecoded);
 
         coder.context[FSCoder.ArrayCountExtended] = 0;
 

Modified: dev/dev-2-2/src/com/flagstone/transform/FSDefineShape3.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSDefineShape3.java	2006-10-01 16:18:31 UTC (rev 234)
+++ dev/dev-2-2/src/com/flagstone/transform/FSDefineShape3.java	2006-11-30 14:34:12 UTC (rev 235)
@@ -466,7 +466,10 @@
 
         int bytesDecoded = (coder.getPointer()-start) >> 3;
 
-        shape = new FSShape(coder, length-bytesDecoded);
+        if (coder.context[FSCoder.DecodeShapes] == 1)
+            shape = new FSShape(coder);
+        else
+            shape = new FSShape(coder, length-bytesDecoded);
 
         coder.context[FSCoder.TransparentColors] = 0;
         coder.context[FSCoder.ArrayCountExtended] = 0;

Modified: dev/dev-2-2/src/com/flagstone/transform/FSDoAction.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSDoAction.java	2006-10-01 16:18:31 UTC (rev 234)
+++ dev/dev-2-2/src/com/flagstone/transform/FSDoAction.java	2006-11-30 14:34:12 UTC (rev 235)
@@ -180,6 +180,16 @@
     }
 
     /** 
+     * Get the array of encoded actions that are executed when the frame is displayed.
+     *
+     * @return the array of action objects or null if the actions have been
+     * decoded.
+     */
+    public byte[] getEncodedActions() 
+    { 
+        return encodedActions;
+    }
+    /** 
      * Set the array of encoded actions generated by the classes in the Translate
      * framework. If the object already contains an array of actions then they 
      * will be deleted.

Modified: dev/dev-2-2/src/com/flagstone/transform/FSInitialize.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSInitialize.java	2006-10-01 16:18:31 UTC (rev 234)
+++ dev/dev-2-2/src/com/flagstone/transform/FSInitialize.java	2006-11-30 14:34:12 UTC (rev 235)
@@ -211,6 +211,16 @@
     }
 
     /** 
+     * Get the array of encoded actions that are executed when the frame is displayed.
+     *
+     * @return the array of action objects or null if the actions have been
+     * decoded.
+     */
+    public byte[] getEncodedActions() 
+    { 
+        return encodedActions;
+    }
+    /** 
      * Set the array of encoded actions generated by the classes in the Translate
      * framework. If the object already contains an array of actions then they 
      * will be deleted.

Modified: dev/dev-2-2/src/com/flagstone/transform/FSPlaceObject2.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSPlaceObject2.java	2006-10-01 16:18:31 UTC (rev 234)
+++ dev/dev-2-2/src/com/flagstone/transform/FSPlaceObject2.java	2006-11-30 14:34:12 UTC (rev 235)
@@ -821,9 +821,9 @@
                 result = result && transform == typedObject.transform;
 
             if (clipEvents != null)
-                result = clipEvents.equals(typedObject.clipEvents);
+                result = result && clipEvents.equals(typedObject.clipEvents);
             else
-                result = Transform.equals(encodedEvents, typedObject.encodedEvents);
+                result = result && Transform.equals(encodedEvents, typedObject.encodedEvents);
         }
         return result;
     }

Modified: dev/dev-2-2/src/com/flagstone/transform/FSProtect.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSProtect.java	2006-10-01 16:18:31 UTC (rev 234)
+++ dev/dev-2-2/src/com/flagstone/transform/FSProtect.java	2006-11-30 14:34:12 UTC (rev 235)
@@ -95,7 +95,11 @@
     public FSProtect(FSProtect obj)
     {
         super(obj);
-        password = new String(obj.password);
+        
+        if (obj.password != null)
+            password = new String(obj.password);
+        else
+            password = obj.password;
     }    
 
     /** Gets the MD5 encrypted password.

Modified: dev/dev-2-2/src/com/flagstone/transform/FSShape.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSShape.java	2006-10-01 16:18:31 UTC (rev 234)
+++ dev/dev-2-2/src/com/flagstone/transform/FSShape.java	2006-11-30 14:34:12 UTC (rev 235)
@@ -63,7 +63,11 @@
      */
     FSShape(FSCoder coder, int length)
     {
-        if (coder.context[FSCoder.DecodeShapes] == 0)
+        /*
+         * This test is used to overcome a bug in SWFTool's pdf2swf where empty 
+         * glyphs are only encoded using 1 byte - should be 2.
+         */
+        if (length > 1)
             encodedObjects = new byte[length];
         
         decode(coder);
@@ -248,13 +252,13 @@
     
     public void decode(FSCoder coder)
     {
-        if (coder.context[FSCoder.DecodeShapes] == 1)
+        if (encodedObjects != null)
         {
-            objects = FSMovie.decodeShape(coder);
+            coder.readBytes(encodedObjects);            
         }
         else
         {
-            coder.readBytes(encodedObjects);            
+            objects = FSMovie.decodeShape(coder);
         }
     }
 }

Modified: dev/dev-2-2/src/com/flagstone/transform/FSText.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSText.java	2006-10-01 16:18:31 UTC (rev 234)
+++ dev/dev-2-2/src/com/flagstone/transform/FSText.java	2006-11-30 14:34:12 UTC (rev 235)
@@ -472,17 +472,18 @@
         boolean _containsOffsetX = containsOffsetX();
         boolean _containsOffsetY = containsOffsetY();
         
-        int length = 0;
+        int length = 1;
     
         if (containsStyle())
         {
-            length += 1;
             length += (_containsFont) ? 2 : 0;
             length += (_containsColor) ? color.length(coder) : 0;
             length += (_containsOffsetY) ? 2 : 0;
             length += (_containsOffsetX) ? 2 : 0;
             length += (_containsFont) ? 2 : 0;
         }
+        
+        length += 1;
 
         if (characters.size() > 0)
         {
@@ -490,7 +491,7 @@
             int numberOfGlyphBits = coder.context[FSCoder.NumberOfGlyphBits];
             int numberOfAdvanceBits = coder.context[FSCoder.NumberOfAdvanceBits];
             
-            numberOfBits = 8 + (numberOfGlyphBits + numberOfAdvanceBits)*characters.size();
+            numberOfBits = (numberOfGlyphBits + numberOfAdvanceBits)*characters.size();
             numberOfBits += (numberOfBits % 8 > 0) ? 8 - (numberOfBits % 8) : 0;
 
             length += numberOfBits >> 3;
@@ -505,40 +506,35 @@
         boolean _containsOffsetY = containsOffsetY();
         boolean _containsOffsetX = containsOffsetX();
 
-        if (containsStyle())
-        {
-            coder.writeBits(1, 1);
-            coder.writeBits(0, 3);
-            coder.writeBits(_containsFont ? 1 : 0, 1);
-            coder.writeBits(_containsColor ? 1 : 0, 1);
-            coder.writeBits(_containsOffsetY ? 1 : 0, 1);
-            coder.writeBits(_containsOffsetX ? 1 : 0, 1);
+        coder.writeBits(1, 1);
+        coder.writeBits(0, 3);
+
+        coder.writeBits(_containsFont ? 1 : 0, 1);
+        coder.writeBits(_containsColor ? 1 : 0, 1);
+        coder.writeBits(_containsOffsetY ? 1 : 0, 1);
+        coder.writeBits(_containsOffsetX ? 1 : 0, 1);
+    
+        if (_containsFont)
+            coder.writeWord(identifier, 2);
+    
+        if (_containsColor)
+            color.encode(coder);
+    
+        if (_containsOffsetX)
+            coder.writeWord(offsetX, 2);
+    
+        if (_containsOffsetY)
+            coder.writeWord(offsetY, 2);
+    
+        if (_containsFont)
+            coder.writeWord(height, 2);
+
+        coder.writeWord(characters.size(), 1);
         
-            if (_containsFont)
-                coder.writeWord(identifier, 2);
-        
-            if (_containsColor)
-                color.encode(coder);
-        
-            if (_containsOffsetX)
-                coder.writeWord(offsetX, 2);
-        
-            if (_containsOffsetY)
-                coder.writeWord(offsetY, 2);
-        
-            if (_containsFont)
-                coder.writeWord(height, 2);
-        }
-        
-        if (characters.size() > 0)
-        {
-            coder.writeWord(characters.size(), 1);
+        for (Iterator charIter = characters.iterator(); charIter.hasNext();) 
+            ((FSTransformObject)charIter.next()).encode(coder);
             
-            for (Iterator charIter = characters.iterator(); charIter.hasNext();) 
-                ((FSTransformObject)charIter.next()).encode(coder);
-                
-            coder.alignToByte();
-        }
+        coder.alignToByte();
     }
     
     public void decode(FSCoder coder)

Modified: dev/dev-2-2/src/com/flagstone/transform/FSVideoFrame.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/FSVideoFrame.java	2006-10-01 16:18:31 UTC (rev 234)
+++ dev/dev-2-2/src/com/flagstone/transform/FSVideoFrame.java	2006-11-30 14:34:12 UTC (rev 235)
@@ -95,7 +95,7 @@
     public FSVideoFrame(int anIdentifier, int frameNumber, byte[] data)
     {
         super(VideoFrame);
-        setIdentifier(identifier);
+        setIdentifier(anIdentifier);
         setFrameNumber(frameNumber);
         setData(data);
     }

Modified: dev/dev-2-2/src/com/flagstone/transform/Transform.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/Transform.java	2006-10-01 16:18:31 UTC (rev 234)
+++ dev/dev-2-2/src/com/flagstone/transform/Transform.java	2006-11-30 14:34:12 UTC (rev 235)
@@ -35,7 +35,7 @@
 /**
  * The %Transform class defines constants and methods used throughout the %Transform package. 
  */
-public final class Transform
+public class Transform
 {
     /** 
      * @deprecated No longer required for debugging.

Modified: dev/dev-2-2/src/com/flagstone/transform/examples/Import.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/examples/Import.java	2006-10-01 16:18:31 UTC (rev 234)
+++ dev/dev-2-2/src/com/flagstone/transform/examples/Import.java	2006-11-30 14:34:12 UTC (rev 235)
@@ -58,16 +58,16 @@
         characters.add(new FSCharacter(1, 120));  // 'a'
         characters.add(new FSCharacter(0, 120));  // ' '
         characters.add(new FSCharacter(19, 120)); // 's'
-        characters.add(new FSCharacter(10, 120)); // 't'
+        characters.add(new FSCharacter(20, 120)); // 't'
         characters.add(new FSCharacter(18, 120)); // 'r'
         characters.add(new FSCharacter(9, 120));  // 'i'
         characters.add(new FSCharacter(14, 120)); // 'n'
-        characters.add(new FSCharacter(6, 120));  // 'g'
+        characters.add(new FSCharacter(7, 120));  // 'g'
 
 //         Create the string setting the height to be 12-point (240 twips) and displaying the characters in black.
 //         the text is not indented or offset.
 
-        lines.add(new FSText(1, FSColorTable.black(), 0, 0, 14, characters));
+        lines.add(new FSText(1, FSColorTable.black(), 0, 0, 240, characters));
 
 //         Calculate the bounding rectangle that encloses the text.
 //         The width of the text by summing all the advances.

Modified: dev/dev-2-2/src/com/flagstone/transform/test/FSColorTest.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/test/FSColorTest.java	2006-10-01 16:18:31 UTC (rev 234)
+++ dev/dev-2-2/src/com/flagstone/transform/test/FSColorTest.java	2006-11-30 14:34:12 UTC (rev 235)
@@ -31,146 +31,272 @@
 
 import com.flagstone.transform.*;
 
-public class FSColorTest 
+public class FSColorTest extends FSClassTest
 {    
-    private byte[][] testData = new byte[][] { 
-        {(byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00},
-        {(byte)0xFF, (byte)0xFF, (byte)0xFF, (byte)0xFF},
+    private static int[][] opaque = new int[][] {
+        {  0,   0,   0},
+        { 51,   0,   0},
+        { 51, 102,   0},
+        {  0, 102,   0},
+        {  0, 102, 153},
+        {  0,   0, 153},
+        { 51,   0, 153},
+        { 51, 102, 153},
     };
-                
-    private int[][] testValues = new int[][] {
+    
+    private static int[][] alpha = new int[][] {
+        { 51, 102, 153,   0},
+        { 51, 102, 153, 204},
+        { 51,   0, 153, 204},
+        { 51,   0, 153,   0},
+        {  0,   0, 153,   0},
+        {  0,   0, 153, 204},
+        {  0, 102, 153, 204},
+        {  0, 102, 153,   0},
+        {  0, 102,   0,   0},
+        {  0, 102,   0, 204},
+        { 51, 102,   0, 204},
+        { 51, 102,   0,   0},
+        { 51,   0,   0,   0},
+        { 51,   0,   0, 204},
+        {  0,   0,   0, 204},
         {  0,   0,   0,   0},
-        {255, 255, 255, 255},
     };
-                
-    public FSColorTest()
-    {        
+    
+    private static FSColor[] colours = null;
+    private static FSColor[] coloursWithAlpha = null;
+    
+    public static FSColor[] colours()
+    {
+        if (colours == null)
+        {
+            colours = new FSColor[opaque.length];
+            
+            for (int i=0; i<opaque.length; i++) {
+                colours[i] = new FSColor(opaque[i][0], opaque[i][1], opaque[i][2]);
+            }       
+       }
+       return colours;
     }
-    /**
-     * @testng.test groups="color"
-     */
-    public void color()
+    
+    public static int[][] encodedColours()
     {
-        checkConstructors();
-        checkAccessors();
-        checkEncode();
-        checkDecode();
+        int[][] data = new int[opaque.length][];
+        
+        for (int i=0; i<opaque.length; i++)
+        {
+            data[i] = new int[opaque[i].length];
+            
+            for (int j=0; j<opaque[i].length; j++) {
+                data[i][j] = opaque[i][j];
+            }
+        }
+        return data;
     }
+    
+    public static FSColor[] coloursWithAlpha()
+    {
+        if (coloursWithAlpha == null)
+        {
+            coloursWithAlpha = new FSColor[alpha.length];
+            
+            for (int i=0; i<alpha.length; i++) 
+            {
+                coloursWithAlpha[i] = new FSColor(alpha[i][0], alpha[i][1], alpha[i][2], alpha[i][3]);
+            }       
+       }
+       return colours;
+    }
+    
     /**
-     * @testng.test groups="constructors"
+     * @testng.test groups="color, constructors"
      */
     public void checkConstructors()
     {
         FSColor colour = null;
         
-        for (int i=0; i<testValues.length; i++) 
+        for (int i=0; i<opaque.length; i++) 
         {
-            colour = new FSColor(testValues[i][0], testValues[i][1], testValues[i][2]);
-            compareAttributes(colour, testValues[i], 3);
-
-            colour = new FSColor(testValues[i][0], testValues[i][1], testValues[i][2], testValues[i][3]);
-            compareAttributes(colour, testValues[i], 4);
+            colour = new FSColor(opaque[i][0], opaque[i][1], opaque[i][2]);
+            
+            checkColours(colour, opaque[i]);
         }
+    }   
+    /**
+     * @testng.test groups="color, constructors"
+     */
+    public void checkConstructorsWithAlpha()
+    {
+        FSColor colour = null;
+        
+        for (int i=0; i<alpha.length; i++) 
+        {
+            colour = new FSColor(alpha[i][0], alpha[i][1], alpha[i][2], alpha[i][3]);
+            
+            checkColours(colour, alpha[i]);
+        }
     }
     /**
-     * @testng.test groups="accessors"
+     * @testng.test groups="color, constructors"
      */
+    public void checkCopyConstructors()
+    {
+        for (int i=0; i<opaque.length; i++) 
+        {
+            FSColor colour = new FSColor(opaque[i][0], opaque[i][1], opaque[i][2]);
+            
+            checkColours(new FSColor(colour), opaque[i]);
+        }
+   }    
+    /**
+     * @testng.test groups="color, constructors"
+     */
+    public void checkCopyConstructorsWithAlpha()
+    {
+        for (int i=0; i<alpha.length; i++) 
+        {
+            FSColor colour = new FSColor(alpha[i][0], alpha[i][1], alpha[i][2], alpha[i][3]);
+            
+            checkColours(new FSColor(colour), alpha[i]);
+        }
+    }    
+    /**
+     * @testng.test groups="color, accessors"
+     */
     public void checkAccessors()
     {
-        FSColor colour = new FSColor(-1, -1, -1, -1);
+        FSColor colour = new FSColor(-1, -1, -1);
         
-        for (int i=0; i<testValues.length; i++) 
+        for (int i=0; i<opaque.length; i++) 
         {
-            colour.setRed(testValues[i][0]);
-            colour.setGreen(testValues[i][1]);
-            colour.setBlue(testValues[i][2]);
-            colour.setAlpha(testValues[i][3]);
+            colour.setRed(opaque[i][0]);
+            colour.setGreen(opaque[i][1]);
+            colour.setBlue(opaque[i][2]);
             
-            compareAttributes(colour, testValues[i], 4);
+            checkColours(colour, opaque[i]);
         }
 
-        colour = new FSColor(-1, -1, -1, -1);
+        colour = new FSColor(-1, -1, -1);
         
-        for (int i=0; i<testValues.length; i++) 
+        for (int i=0; i<opaque.length; i++) 
         {
-            colour.setChannels(testValues[i][0], testValues[i][1], testValues[i][2], testValues[i][3]);            
-            compareAttributes(colour, testValues[i], 4);
+            colour.setChannels(opaque[i][0], opaque[i][1], opaque[i][2]);            
+            
+            checkColours(colour, opaque[i]);
         }
+    }
+    /**
+     * @testng.test groups="color, accessors"
+     */
+    public void checkAccessorsWithAlpha()
+    {
+        FSColor colour = new FSColor(-1, -1, -1, -1);
         
+        for (int i=0; i<alpha.length; i++) 
+        {
+            colour.setRed(alpha[i][0]);
+            colour.setGreen(alpha[i][1]);
+            colour.setBlue(alpha[i][2]);
+            colour.setAlpha(alpha[i][3]);
+            
+            checkColours(colour, alpha[i]);
+        }
+
         colour = new FSColor(-1, -1, -1, -1);
         
-        for (int i=0; i<testValues.length; i++) 
+        for (int i=0; i<alpha.length; i++) 
         {
-            colour.setChannels(testValues[i][0], testValues[i][1], testValues[i][2]);            
-            compareAttributes(colour, testValues[i], 3);
-        }       
+            colour.setChannels(alpha[i][0], alpha[i][1], alpha[i][2], alpha[i][3]);
+            
+            checkColours(colour, alpha[i]);
+        }
     }
     /**
-     * @testng.test groups="encode"
+     * @testng.test groups="color, utilities"
      */
-    public void checkEncode()
+    public void checkEquals()
     {
-        checkEncode(3); // opaque colours
-        checkEncode(4); // transparent colours
+       for (int i=0; i<opaque.length; i++)
+        {
+            int next = (i+1)%opaque.length;
+            
+            FSColor a = new FSColor(opaque[i][0], opaque[i][1], opaque[i][2]);
+            FSColor b = new FSColor(opaque[i][0], opaque[i][1], opaque[i][2]);
+            FSColor c = new FSColor(opaque[next][0], opaque[next][1], opaque[next][2]);
+            FSColor d = new FSColor(opaque[i][0], opaque[i][1], opaque[i][2], 255);
+            FSColor e = new FSColor(opaque[i][0], opaque[i][1], opaque[i][2], 128);
+            
+            checkEqual(a, b);
+            checkNotEqual(a, c);
+            checkEqual(a, d);
+            checkNotEqual(a, e);
+        }
     }
     /**
-     * @testng.test groups="decode"
+     * @testng.test groups="color, encode"
      */
-    public void checkDecode()
+    public void checkEncode()
     {
-        checkDecode(3); // opaque colours
-        checkDecode(4); // transparent colours
+        FSCoder coder = new FSCoder(FSCoder.LITTLE_ENDIAN, 0);
+             
+        for (int i=0; i<opaque.length; i++) 
+        {
+            FSColor colour = new FSColor(opaque[i][0], opaque[i][1], opaque[i][2]);
+            
+            checkEncode(coder, colour, opaque[i]);
+            checkColours(colour, opaque[i]);
+        }
     }
-    
-    private void checkEncode(int count)
+    /**
+     * @testng.test groups="color, encode"
+     */
+    public void checkEncodeWithAlpha()
     {
-        FSColor colour = null;
-        FSCoder coder = new FSCoder(FSCoder.LITTLE_ENDIAN, count);
-        
-        coder.setContext(FSCoder.TransparentColors, (count == 4) ? 1:0);
-        
-        for (int i=0; i<testValues.length; i++) 
+        FSCoder coder = new FSCoder(FSCoder.LITTLE_ENDIAN, 0);
+        coder.setContext(FSCoder.TransparentColors, 1);
+             
+        for (int i=0; i<alpha.length; i++) 
         {
-            if (count == 3)
-                colour = new FSColor(testValues[i][0], testValues[i][1], testValues[i][2]);
-            else
-                colour = new FSColor(testValues[i][0], testValues[i][1], testValues[i][2], testValues[i][3]);
-                
-            coder.setPointer(0);
-            colour.encode(coder);
+            FSColor colour = new FSColor(alpha[i][0], alpha[i][1], alpha[i][2], alpha[i][3]);
             
-            assert ((colour.length(coder)) == count) : "Calculated length does not match expected.";
-            assert ((coder.getPointer() >>> 3) == count) : "Calculated length does not match encoded length.";
-            
-            compareData(coder.getData(), testData[i], count);
+            checkEncode(coder, colour, alpha[i]);
+            checkColours(colour, alpha[i]);
         }
     }
-    private void checkDecode(int count)
+    /**
+     * @testng.test groups="color, decode"
+     */
+    public void checkDecode()
     {
-        FSCoder coder = new FSCoder(FSCoder.LITTLE_ENDIAN, count);
-        
-        for (int i=0; i<testValues.length; i++) 
+        for (int i=0; i<opaque.length; i++) 
         {
-            coder.setData(FSCoder.LITTLE_ENDIAN, testData[i]);
-            
-            compareAttributes(new FSColor(coder), testValues[i], count);
+            FSCoder coder = new FSCoder(FSCoder.LITTLE_ENDIAN, compact(opaque[i]));            
+            checkColours(new FSColor(coder), opaque[i]);
+            checkDecode(coder, opaque[i].length);
+        }
+    }
+    /**
+     * @testng.test groups="color, decode"
+     */
+    public void checkDecodeWithAlpha()
+    {
+        for (int i=0; i<opaque.length; i++) 
+        {
+            FSCoder coder = new FSCoder(FSCoder.LITTLE_ENDIAN, compact(alpha[i]));            
+            coder.setContext(FSCoder.TransparentColors, 1);
 
-            assert ((coder.getPointer() >>> 3) == count) : "";
+            checkColours(new FSColor(coder), alpha[i]);
+            checkDecode(coder, alpha[i].length);
         }
     }
-    private void compareAttributes(FSColor colour, int[] expected, int channelCount)
+    
+    private void checkColours(FSColor colour, int[] expected)
     {
         assert(colour.getRed() == expected[0]) : "Red channel does not match expected value";
         assert(colour.getGreen() == expected[1]) : "Green channel does not match expected value";
         assert(colour.getBlue() == expected[2]) : "Blue channel does not match expected value";
         
-        if (channelCount == 4)
+        if (expected.length == 4)
             assert(colour.getAlpha() == expected[3]) : "Alpha channel does not match expected value";
     }
-    private void compareData(byte[] values, byte[] expected, int count)
-    {
-        for (int i=0; i<count; i++) {
-            assert(values[i] == expected[i]) : "Encoded byte does not match expected value";
-        }
-    }
 }

Modified: dev/dev-2-2/src/com/flagstone/transform/test/FSSetBackgroundColorTest.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/test/FSSetBackgroundColorTest.java	2006-10-01 16:18:31 UTC (rev 234)
+++ dev/dev-2-2/src/com/flagstone/transform/test/FSSetBackgroundColorTest.java	2006-11-30 14:34:12 UTC (rev 235)
@@ -29,44 +29,129 @@
  */
 package com.flagstone.transform.test;
 
-public class FSSetBackgroundColorTest 
+import com.flagstone.transform.*;
+
+public class FSSetBackgroundColorTest extends FSClassTest
 {    
-    public FSSetBackgroundColorTest()
-    {        
+    private static FSColor[] colours = new FSColor[] {
+        new FSColor(  0,   0,   0),
+        new FSColor(255,   0,   0),
+        new FSColor(255, 255,   0),
+        new FSColor(  0, 255,   0),
+        new FSColor(  0, 255, 255),
+        new FSColor(  0,   0, 255),
+        new FSColor(255,   0, 255),
+        new FSColor(255, 255, 255),
+    };
+           
+    private static int[][] encodedObjects = new int[][] {
+        { 0x43, 0x02, 0x00, 0x00, 0x00 }, 
+        { 0x43, 0x02, 0xFF, 0x00, 0x00 }, 
+        { 0x43, 0x02, 0xFF, 0xFF, 0x00 }, 
+        { 0x43, 0x02, 0x00, 0xFF, 0x00 }, 
+        { 0x43, 0x02, 0x00, 0xFF, 0xFF }, 
+        { 0x43, 0x02, 0x00, 0x00, 0xFF }, 
+        { 0x43, 0x02, 0xFF, 0x00, 0xFF }, 
+        { 0x43, 0x02, 0xFF, 0xFF, 0xFF }, 
+    };
+    
+    /**
+     * @testng.test groups="setbackgroundcolor, constructors"
+     */
+    public void checkConstructors()
+    {
+        for (int i=0; i<colours.length; i++)
+        {
+            FSSetBackgroundColor background = new FSSetBackgroundColor(colours[i]);
+            
+            checkType(FSMovieObject.SetBackgroundColor, background.getType());
+            checkEqual(colours[i], background.getColor());
+        }
     }
     /**
-     * @testng.test groups="setbackgroundcolor"
-     *     dependsOnGroups="color"
+     * @testng.test groups="setbackgroundcolor, constructors"
      */
-    public void setBackgroundColor()
+    public void checkCopyConstructor()
     {
-        checkConstructors();
-        checkAccessors();
-        checkEncode();
-        checkDecode();
+        for (int i=0; i<colours.length; i++)
+        {
+            FSSetBackgroundColor original = new FSSetBackgroundColor(colours[i]);
+            FSSetBackgroundColor copy = new FSSetBackgroundColor(original);
+            
+            checkEqual(colours[i], copy.getColor());
+            checkNotIdentical(colours[i], copy.getColor());
+        }
     }
     /**
-     * @testng.test groups="constructors"
+     * @testng.test groups="setbackgroundcolor, constructors"
      */
-    public void checkConstructors()
+    public void checkContainsReference()
     {
+        FSColor colour = new FSColor(0, 0, 0);
+        FSSetBackgroundColor background = new FSSetBackgroundColor(colour);
+        
+        checkIdentical(colour, background.getColor());
     }
     /**
-     * @testng.test groups="accessors"
+     * @testng.test groups="setbackgroundcolor, constructors"
      */
+    public void checkClone()
+    {
+        FSColor colour = new FSColor(0, 0, 0);
+        FSSetBackgroundColor background = new FSSetBackgroundColor(colour);
+        FSSetBackgroundColor clone = (FSSetBackgroundColor)background.clone();
+        
+        checkEqual(background, clone);
+        checkNotIdentical(background, clone);
+    }
+    /**
+     * @testng.test groups="setbackgroundcolor, accessors"
+     */
     public void checkAccessors()
     {
+        FSSetBackgroundColor background = new FSSetBackgroundColor(new FSColor(-1, -1, -1));
+        
+        for (int i=0; i<colours.length; i++)
+        {
+            background.setColor(colours[i]);
+            checkEqual(colours[i], background.getColor());
+        }
     }
     /**
-     * @testng.test groups="encode"
+     * @testng.test groups="setbackgroundcolor, utilities"
      */
+    public void checkEquals()
+    {
+        for (int i=0; i<colours.length; i++)
+        {
+            FSSetBackgroundColor a = new FSSetBackgroundColor(colours[i]);
+            FSSetBackgroundColor b = new FSSetBackgroundColor(colours[i]);
+            
+            checkEqual(a, b);
+        }
+    }
+    /**
+     * @testng.test groups="setbackgroundcolor, encode"
+     */
     public void checkEncode()
     {
+        for (int i=0; i<encodedObjects.length; i++) {
+            checkEncode(new FSSetBackgroundColor(colours[i]), encodedObjects[i]);
+        }
     }
     /**
-     * @testng.test groups="decode"
+     * @testng.test groups="setbackgroundcolor, decode"
      */
     public void checkDecode()
-    {
+    {       
+        for (int i=0; i<encodedObjects.length; i++) 
+        {
+            FSCoder coder = new FSCoder(FSCoder.LITTLE_ENDIAN, compact(encodedObjects[i]));            
+            FSSetBackgroundColor background = new FSSetBackgroundColor(coder);
+
+            checkDecode(coder, encodedObjects[i].length);
+            checkType(FSMovieObject.SetBackgroundColor, background.getType());
+            checkEqual(colours[i], background.getColor());
+        }
     }
 }

Modified: dev/dev-2-2/src/com/flagstone/transform/tools/TextDump.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/tools/TextDump.java	2006-10-01 16:18:31 UTC (rev 234)
+++ dev/dev-2-2/src/com/flagstone/transform/tools/TextDump.java	2006-11-30 14:34:12 UTC (rev 235)
@@ -1575,7 +1575,7 @@
                     decoded = true;
                     break;
                 case NewFunction2:
-                    decodeNewFunction2(coder);
+                    length = decodeNewFunction2(coder);
                     next = start + (length << 3);
                     decoded = true;
                     break;
@@ -2392,6 +2392,8 @@
                 
             int actionsLength = coder.readWord("actionsLength", 2, false);
             
+            length += actionsLength;
+            
             coder.beginArray("actions");
 
             while (actionsLength > 0)
@@ -2400,7 +2402,7 @@
             coder.endObject();
             coder.endObject();
             
-            return length + actionsLength;
+            return length;
         }
         
         int decodeNewFunction2(SWFDecoder coder)
@@ -2422,6 +2424,8 @@
                 
             int actionsLength = coder.readWord("actionsLength", 2, false);
             
+            length += actionsLength;
+            
             coder.beginArray("actions");
 
             while (actionsLength > 0)
@@ -2430,7 +2434,7 @@
             coder.endObject();
             coder.endObject();
             
-            return length + actionsLength;
+            return length;
         }
 
         void decodePush(SWFDecoder coder)

Modified: dev/dev-2-2/src/com/flagstone/transform/util/FSImageConstructor.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/util/FSImageConstructor.java	2006-10-01 16:18:31 UTC (rev 234)
+++ dev/dev-2-2/src/com/flagstone/transform/util/FSImageConstructor.java	2006-11-30 14:34:12 UTC (rev 235)
@@ -564,7 +564,7 @@
      */
     public void setIndexedImage(int encoding, int imageWidth, int imageHeight, byte[][] table, byte[][] image)
     {
-        if (format != IDX8 || format != IDXA)
+        if (encoding != IDX8 && encoding != IDXA)
             throw new IllegalArgumentException("Indexed images must have a format of IDX8 or IDXA");
             
         format = encoding;
@@ -601,7 +601,7 @@
      */
     public void setColorImage(int encoding, int imageWidth, int imageHeight, byte[][][] image)
     {
-        if (format != RGB5 || format != RGB8 || format != RGBA)
+        if (encoding != RGB5 && encoding != RGB8 && encoding != RGBA)
             throw new IllegalArgumentException("True colour images must has a format of RGB5, RGB8 or RGBA");
             
         format = encoding;
@@ -1289,8 +1289,15 @@
                 break;
             case INDEXED_COLOUR:
                 format = IDXA;
-                for (int i=0; i<length; i++) {
+                for (int i=0; i<length; i++) 
+                {
                     colourTable[i][3] = (byte)coder.readWord(1, false);
+
+                    if (colourTable[i][3] == 0) {
+                        colourTable[i][0] = 0;
+                        colourTable[i][1] = 0;
+                        colourTable[i][2] = 0;
+                    }
                 }
                 break;
             default:

Modified: dev/dev-2-2/src/com/flagstone/transform/util/FSTextConstructor.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/util/FSTextConstructor.java	2006-10-01 16:18:31 UTC (rev 234)
+++ dev/dev-2-2/src/com/flagstone/transform/util/FSTextConstructor.java	2006-11-30 14:34:12 UTC (rev 235)
@@ -308,7 +308,7 @@
      * font definition object generated and referenced by all the text object
      * generated.
      * 
-     * @param fileName either the name of a Flash, TrueType or OpenType file 
+     * @param filename either the name of a Flash, TrueType or OpenType file 
      * containing an existing font definition.
      * 
      * @throws FileNotFoundException if the fontName specifies a file and the 
@@ -599,13 +599,13 @@
                 yMin = bounds.getMinY();
                 yMax = bounds.getMaxY();
             }
-            else if (n==lines.size()) {
-                yMax += bounds.getMaxY();
-            }
             else {
                 yMax += lineSpacing;
             }
             
+            if (n==lines.size()-1)
+                yMax += bounds.getHeight();
+            
             xMin = (xMin < bounds.getMinX()) ? xMin : bounds.getMinX();
             xMax = (xMax > bounds.getMaxX()) ? xMax : bounds.getMaxX();
                     
@@ -637,7 +637,7 @@
         return boundsForText(glyphCodes, glyphAdvances, fontSize);
     }
     /**
-     * Returns the advance, in twips to the next character. this method can be
+     * Returns the advance, in twips, to the next character. This method can be
      * used when laying out sequences of individual characters, rather than as 
      * as single string.
      * 

Modified: dev/dev-2-2/src/com/flagstone/transform/util/TransformUtil.java
===================================================================
--- dev/dev-2-2/src/com/flagstone/transform/util/TransformUtil.java	2006-10-01 16:18:31 UTC (rev 234)
+++ dev/dev-2-2/src/com/flagstone/transform/util/TransformUtil.java	2006-11-30 14:34:12 UTC (rev 235)
@@ -74,7 +74,7 @@
  * @deprecated No longer used with the merging of Transform Utilties into the 
  * main Transform SWF distribution.
  */
-public final class TransformUtil 
+public class TransformUtil 
 {
     // Package information  
     static final boolean DebugEdition = false;

Deleted: dev/dev-2-2/test/data/readme.txt
===================================================================
--- dev/dev-2-2/test/data/readme.txt	2006-10-01 16:18:31 UTC (rev 234)
+++ dev/dev-2-2/test/data/readme.txt	2006-11-30 14:34:12 UTC (rev 235)
@@ -1,78 +0,0 @@
----------------------------------
-  Using Files For Testing
----------------------------------
-This directory is designed to be the root directory for suites of files that 
-can be used to test the classes in the Transform SWF framework. Different 
-directories are listed for running tests using Flash files, images, sounds, etc.
-
-The directories are organized according to the type of file that is used in 
-testing: movies, fonts, images and sounds. Files for specific formats are then
-placed in sub-directories to allow tests to be run with a specific format or
-version - Please see the TestBG scripts included in the test\suites directory 
-for more information.
-
-The directory tree, as assumed in the TestNG scripts has the following structure:
-
- data
-   |
-   +- fonts
-   |    |
-   |    + vera
-   |    ...
-   |
-   +- images
-   |    |
-   |    +- bmp
-   |    +- jpg
-   |    +- png
-   |
-   +- movies
-   |    |
-   |    +- swf4
-   |    +- swf5
-   |    +- swf6
-   |    +- swf7
-   |
-   +- sounds
-        |
-        + mp3
-        + wav
-        
-
-Place files for testing in the appropriate directories. Each directory is 
-assumed to contain one type of file. Please review the code used to run the 
-tests before mixing different types of files together.
-
--------------
-  IMPORTANT
--------------
-The directories list here are distributed empty for several reasons. First is simply 
-one of size - there are potentially hundreds of files that could be used in testing
-and so providing a comprehensive list would make downloads prohibitively large.
-Other reasons include copyright or other licencing issues - many real-world Flash 
-files provide a great way for testing the way Transform SWF decodes and encodes 
-Flash files but cannot be distributed.
-
---------------------------------
-  Useful Sources for Test Data
---------------------------------
-Here are some of the suites/ lists of files that are currently used for testing 
-the classes in the Transform SWF framework. This list will be updated on a regular 
-basis:
-
-Flash Files
-www.flashKit.com is probably the most useful source of Flash files that can
-be included in testing.
-
-BMP Format Images
-A test suite can be downloaded from http://pobox.com/~jason1/bmpsuite/
-
-PNG Format Images 
-www.schaik.com/pngsuite/pngsuite.htmlwww.schaik.com/pngsuite/pngsuite.html
-
-Fonts
-Bitstream have released their Vera font with an Open Source license:
-http://gnome.org/fonts/
-
-DejaVu fonts add wide range of characters to the Vera fonts.
-http://dejavu.sourceforge.net/.
\ No newline at end of file

Modified: dev/dev-2-2/test/suites/FSImageConstructor.xml
===================================================================
--- dev/dev-2-2/test/suites/FSImageConstructor.xml	2006-10-01 16:18:31 UTC (rev 234)
+++ dev/dev-2-2/test/suites/FSImageConstructor.xml	2006-11-30 14:34:12 UTC (rev 235)
@@ -3,7 +3,7 @@
 <suite name="FSImageConstructorTest">
 
     <test name="BMP Images">
-		<parameter name="srcDir" value="test/data/images/bmp"/>
+		<parameter name="srcDir" value="test/data/bmp"/>
 		<parameter name="dstDir" value="test/results/FSImageConstructor/bmp"/>
 		<parameter name="ext" value="bmp"/>
 		<classes>
@@ -11,17 +11,8 @@
 		</classes>
   	</test>
   	
-    <test name="JPG Images">
-		<parameter name="srcDir" value="test/data/images/jpg"/>
-		<parameter name="dstDir" value="test/results/FSImageConstructor/jpg"/>
-		<parameter name="ext" value="jpg"/>
-		<classes>
-      		<class name="com.flagstone.transform.test.FSImageConstructorTest"/>
-		</classes>
-  	</test>
-  	
     <test name="PNG Images">
-		<parameter name="srcDir" value="test/data/images/png"/>
+		<parameter name="srcDir" value="test/data/png"/>
 		<parameter name="dstDir" value="test/results/FSImageConstructor/png"/>
 		<parameter name="ext" value="png"/>
 		<classes>

Modified: dev/dev-2-2/test/suites/FSMovie.xml
===================================================================
--- dev/dev-2-2/test/suites/FSMovie.xml	2006-10-01 16:18:31 UTC (rev 234)
+++ dev/dev-2-2/test/suites/FSMovie.xml	2006-11-30 14:34:12 UTC (rev 235)
@@ -4,11 +4,8 @@
  	
     <parameter name="logFile" value=""/>
 
-    <!--
-        Decode a movie. 
-    -->
-    <test name="Encode SWF4">
-		<parameter name="srcDir" value="test/data/movies/swf4"/>
+    <test name="Decode">
+		<parameter name="srcDir" value="test/data/swf"/>
 		<parameter name="dstDir" value=""/>
 		<classes>
       		<class name="com.flagstone.transform.test.FSMovieTest">
@@ -19,100 +16,25 @@
 		</classes>
   	</test>
 
-    <test name="Encode SWF5">
-		<parameter name="srcDir" value="test/data/movies/swf5"/>
-		<parameter name="dstDir" value=""/>
+    <test name="Encode">
+		<parameter name="srcDir" value="test/data/swf"/>
+		<parameter name="dstDir" value="test/results/FSMovie/encode"/>
 		<classes>
       		<class name="com.flagstone.transform.test.FSMovieTest">
       			<methods>
-      				<include name="decode"/>
-      			</methods>
-      		</class>
-		</classes>
-  	</test>
-
-    <test name="Encode SWF6">
-		<parameter name="srcDir" value="test/data/movies/swf6"/>
-		<parameter name="dstDir" value=""/>
-		<classes>
-      		<class name="com.flagstone.transform.test.FSMovieTest">
-      			<methods>
-      				<include name="decode"/>
-      			</methods>
-      		</class>
-		</classes>
-  	</test>
-
-    <test name="Encode SWF7">
-		<parameter name="srcDir" value="test/data/movies/swf7"/>
-		<parameter name="dstDir" value=""/>
-		<classes>
-      		<class name="com.flagstone.transform.test.FSMovieTest">
-      			<methods>
-      				<include name="decode"/>
-      			</methods>
-      		</class>
-		</classes>
-  	</test>
-
-    <!--
-        Decode then encode a movie. 
-    -->
-    <test name="Encode SWF4">
-		<parameter name="srcDir" value="test/data/movies/swf4"/>
-		<parameter name="dstDir" value="test/results/FSMovie/encode/swf4"/>
-		<classes>
-      		<class name="com.flagstone.transform.test.FSMovieTest">
-      			<methods>
       				<include name="encode"/>
       			</methods>
       		</class>
 		</classes>
   	</test>
 
-    <test name="Encode SWF5">
-		<parameter name="srcDir" value="test/data/movies/swf5"/>
-		<parameter name="dstDir" value="test/results/FSMovie/encode/swf5"/>
-		<classes>
-      		<class name="com.flagstone.transform.test.FSMovieTest">
-      			<methods>
-      				<include name="encode"/>
-      			</methods>
-      		</class>
-		</classes>
-  	</test>
-
-    <test name="Encode SWF6">
-		<parameter name="srcDir" value="test/data/movies/swf6"/>
-		<parameter name="dstDir" value="test/results/FSMovie/encode/swf6"/>
-		<classes>
-      		<class name="com.flagstone.transform.test.FSMovieTest">
-      			<methods>
-      				<include name="encode"/>
-      			</methods>
-      		</class>
-		</classes>
-  	</test>
-
-    <test name="Encode SWF7">
-		<parameter name="srcDir" value="test/data/movies/swf7"/>
-		<parameter name="dstDir" value="test/results/FSMovie/encode/swf7"/>
-		<classes>
-      		<class name="com.flagstone.transform.test.FSMovieTest">
-      			<methods>
-      				<include name="encode"/>
-      			</methods>
-      		</class>
-		</classes>
-  	</test>
-
     <!--
         Convert the results from the encode test to text to compare against
         the reference files. 
     -->
-    <test name="Encode ToText SWF4">
-		<parameter name="srcDir" value="test/results/FSMovie/encode/swf4"/>
-		<parameter name="dstDir" value="test/results/FSMovie/encode/swf4"/>
+    <test name="Encode ToText">
+		<parameter name="srcDir" value="test/results/FSMovie/encode"/>
+		<parameter name="dstDir" value="test/results/FSMovie/encode"/>
 		<classes>
       		<class name="com.flagstone.transform.test.FSMovieTest">
       			<methods>
@@ -122,48 +44,12 @@
 		</classes>
   	</test>
 
-    <test name="Encode ToText SWF5">
-		<parameter name="srcDir" value="test/results/FSMovie/encode/swf5"/>
-		<parameter name="dstDir" value="test/results/FSMovie/encode/swf5"/>
-		<classes>
-      		<class name="com.flagstone.transform.test.FSMovieTest">
-      			<methods>
-      				<include name="toText"/>
-      			</methods>
-      		</class>
-		</classes>
-  	</test>
-
-    <test name="Encode ToText SWF6">
-		<parameter name="srcDir" value="test/results/FSMovie/encode/swf6"/>
-		<parameter name="dstDir" value="test/results/FSMovie/encode/swf6"/>
-		<classes>
-      		<class name="com.flagstone.transform.test.FSMovieTest">
-      			<methods>
-      				<include name="toText"/>
-      			</methods>
-      		</class>
-		</classes>
-  	</test>
-
-    <test name="Encode ToText SWF7">
-		<parameter name="srcDir" value="test/results/FSMovie/encode/swf7"/>
-		<parameter name="dstDir" value="test/results/FSMovie/encode/swf7"/>
-		<classes>
-      		<class name="com.flagstone.transform.test.FSMovieTest">
-      			<methods>
-      				<include name="toText"/>
-      			</methods>
-      		</class>
-		</classes>
-  	</test>
-
     <!--
         Decode, clone then encode a movie. 
     -->
-    <test name="Clone SWF4">
-		<parameter name="srcDir" value="test/data/movies/swf4"/>
-		<parameter name="dstDir" value="test/results/FSMovie/clone/swf4"/>
+    <test name="Clone">
+		<parameter name="srcDir" value="test/data/swf"/>
+		<parameter name="dstDir" value="test/results/FSMovie/clone"/>
 		<classes>
       		<class name="com.flagstone.transform.test.FSMovieTest">
       			<methods>
@@ -173,96 +59,23 @@
 		</classes>
   	</test>
 
-    <test name="Clone SWF5">
-		<parameter name="srcDir" value="test/data/movies/swf5"/>
-		<parameter name="dstDir" value="test/results/FSMovie/clone/swf5"/>
+    <test name="Clone ToText">
+		<parameter name="srcDir" value="test/results/FSMovie/clone"/>
+		<parameter name="dstDir" value="test/results/FSMovie/clone"/>
 		<classes>
       		<class name="com.flagstone.transform.test.FSMovieTest">
       			<methods>
-      				<include name="clone"/>
-      			</methods>
-      		</class>
-		</classes>
-  	</test>
-
-    <test name="Clone SWF6">
-		<parameter name="srcDir" value="test/data/movies/swf6"/>
-		<parameter name="dstDir" value="test/results/FSMovie/clone/swf6"/>
-		<classes>
-      		<class name="com.flagstone.transform.test.FSMovieTest">
-      			<methods>
-      				<include name="clone"/>
-      			</methods>
-      		</class>
-		</classes>
-  	</test>
-
-    <test name="Clone SWF7">
-		<parameter name="srcDir" value="test/data/movies/swf7"/>
-		<parameter name="dstDir" value="test/results/FSMovie/clone/swf7"/>
-		<classes>
-      		<class name="com.flagstone.transform.test.FSMovieTest">
-      			<methods>
-      				<include name="clone"/>
-      			</methods>
-      		</class>
-		</classes>
-  	</test>
-
-
-    <test name="Clone ToText SWF4">
-		<parameter name="srcDir" value="test/results/FSMovie/clone/swf4"/>
-		<parameter name="dstDir" value="test/results/FSMovie/clone/swf4"/>
-		<classes>
-      		<class name="com.flagstone.transform.test.FSMovieTest">
-      			<methods>
       				<include name="toText"/>
       			</methods>
       		</class>
 		</classes>
   	</test>
 
-    <test name="Clone ToText SWF5">
-		<parameter name="srcDir" value="test/results/FSMovie/clone/swf5"/>
-		<parameter name="dstDir" value="test/results/FSMovie/clone/swf5"/>
-		<classes>
-      		<class name="com.flagstone.transform.test.FSMovieTest">
-      			<methods>
-      				<include name="toText"/>
-      			</methods>
-      		</class>
-		</classes>
-  	</test>
-
-    <test name="Clone ToText SWF6">
-		<parameter name="srcDir" value="test/results/FSMovie/clone/swf6"/>
-		<parameter name="dstDir" value="test/results/FSMovie/clone/swf6"/>
-		<classes>
-      		<class name="com.flagstone.transform.test.FSMovieTest">
-      			<methods>
-      				<include name="toText"/>
-      			</methods>
-      		</class>
-		</classes>
-  	</test>
-
-    <test name="Clone ToText SWF7">
-		<parameter name="srcDir" value="test/results/FSMovie/clone/swf7"/>
-		<parameter name="dstDir" value="test/results/FSMovie/clone/swf7"/>
-		<classes>
-      		<class name="com.flagstone.transform.test.FSMovieTest">
-      			<methods>
-      				<include name="toText"/>
-      			</methods>
-      		</class>
-		</classes>
-  	</test>
-  	
     <!--
         Lazy decoding of actions and shapes in a movie. 
     -->
-    <test name="Lazy Decoding SWF4">
-		<parameter name="srcDir" value="test/data/movies/swf4"/>
+    <test name="Lazy Decoding">
+		<parameter name="srcDir" value="test/data/swf"/>
 		<parameter name="dstDir" value=""/>
 		<classes>
       		<class name="com.flagstone.transform.test.FSMovieTest">
@@ -273,48 +86,12 @@
 		</classes>
   	</test>
 
-    <test name="Lazy Decoding SWF5">
-		<parameter name="srcDir" value="test/data/movies/swf5"/>
-		<parameter name="dstDir" value=""/>
-		<classes>
-      		<class name="com.flagstone.transform.test.FSMovieTest">
-      			<methods>
-      				<include name="lazyDecode"/>
-      			</methods>
-      		</class>
-		</classes>
-  	</test>
-
-    <test name="Lazy Decoding SWF6">
-		<parameter name="srcDir" value="test/data/movies/swf6"/>
-		<parameter name="dstDir" value=""/>
-		<classes>
-      		<class name="com.flagstone.transform.test.FSMovieTest">
-      			<methods>
-      				<include name="lazyDecode"/>
-      			</methods>
-      		</class>
-		</classes>
-  	</test>
-
-    <test name="Lazy Decoding SWF7">
-		<parameter name="srcDir" value="test/data/movies/swf7"/>
-		<parameter name="dstDir" value=""/>
-		<classes>
-      		<class name="com.flagstone.transform.test.FSMovieTest">
-      			<methods>
-      				<include name="lazyDecode"/>
-      			</methods>
-      		</class>
-		</classes>
-  	</test>
-
    <!--
         Lazy encoding of actions and shapes in a movie. 
     -->
-    <test name="Lazy Encoding SWF4">
-		<parameter name="srcDir" value="test/data/movies/swf4"/>
-		<parameter name="dstDir" value="test/results/FSMovie/lazyEncode/swf4"/>
+    <test name="Lazy Encoding">
+		<parameter name="srcDir" value="test/data/swf"/>
+		<parameter name="dstDir" value="test/results/FSMovie/lazyEncode"/>
 		<classes>
       		<class name="com.flagstone.transform.test.FSMovieTest">
       			<methods>
@@ -324,49 +101,13 @@
 		</classes>
   	</test>
 
-    <test name="Lazy Encoding SWF5">
-		<parameter name="srcDir" value="test/data/movies/swf5"/>
-		<parameter name="dstDir" value="test/results/FSMovie/lazyEncode/swf5"/>
-		<classes>
-      		<class name="com.flagstone.transform.test.FSMovieTest">
-      			<methods>
-      				<include name="lazyEncode"/>
-      			</methods>
-      		</class>
-		</classes>
-  	</test>
-
-    <test name="Lazy Encoding SWF6">
-		<parameter name="srcDir" value="test/data/movies/swf6"/>
-		<parameter name="dstDir" value="test/results/FSMovie/lazyEncode/swf6"/>
-		<classes>
-      		<class name="com.flagstone.transform.test.FSMovieTest">
-      			<methods>
-      				<include name="lazyEncode"/>
-      			</methods>
-      		</class>
-		</classes>
-  	</test>
-
-    <test name="Lazy Encoding SWF7">
-		<parameter name="srcDir" value="test/data/movies/swf7"/>
-		<parameter name="dstDir" value="test/results/FSMovie/lazyEncode/swf7"/>
-		<classes>
-      		<class name="com.flagstone.transform.test.FSMovieTest">
-      			<methods>
-      				<include name="lazyEncode"/>
-      			</methods>
-      		</class>
-		</classes>
-  	</test>
-
     <!--
-        Convert the results from the lazy encoding test to text to compare against
-        the reference files. 
+        Convert the results from the lazy encoding test to text to compare 
+        against the reference files. 
     -->
-    <test name="Encode ToText SWF4">
-		<parameter name="srcDir" value="test/results/FSMovie/lazyEncode/swf4"/>
-		<parameter name="dstDir" value="test/results/FSMovie/lazyEncode/swf4"/>
+    <test name="Encode ToText">
+		<parameter name="srcDir" value="test/results/FSMovie/lazyEncode"/>
+		<parameter name="dstDir" value="test/results/FSMovie/lazyEncode"/>
 		<classes>
       		<class name="com.flagstone.transform.test.FSMovieTest">
       			<methods>
@@ -376,41 +117,5 @@
 		</classes>
   	</test>
 
-    <test name="Encode ToText SWF5">
-		<parameter name="srcDir" value="test/results/FSMovie/lazyEncode/swf5"/>
-		<parameter name="dstDir" value="test/results/FSMovie/lazyEncode/swf5"/>
-		<classes>
-      		<class name="com.flagstone.transform.test.FSMovieTest">
-      			<methods>
-      				<include name="toText"/>
-      			</methods>
-      		</class>
-		</classes>
-  	</test>
-
-    <test name="Encode ToText SWF6">
-		<parameter name="srcDir" value="test/results/FSMovie/lazyEncode/swf6"/>
-		<parameter name="dstDir" value="test/results/FSMovie/lazyEncode/swf6"/>
-		<classes>
-      		<class name="com.flagstone.transform.test.FSMovieTest">
-      			<methods>
-      				<include name="toText"/>
-      			</methods>
-      		</class>
-		</classes>
-  	</test>
-
-    <test name="Encode ToText SWF7">
-		<parameter name="srcDir" value="test/results/FSMovie/lazyEncode/swf7"/>
-		<parameter name="dstDir" value="test/results/FSMovie/lazyEncode/swf7"/>
-		<classes>
-      		<class name="com.flagstone.transform.test.FSMovieTest">
-      			<methods>
-      				<include name="toText"/>
-      			</methods>
-      		</class>
-		</classes>
-  	</test>
-
 </suite>
 

Modified: dev/dev-2-2/test/suites/FSMovieReference.xml
===================================================================
--- dev/dev-2-2/test/suites/FSMovieReference.xml	2006-10-01 16:18:31 UTC (rev 234)
+++ dev/dev-2-2/test/suites/FSMovieReference.xml	2006-11-30 14:34:12 UTC (rev 235)
@@ -8,9 +8,9 @@
 	    Create text dumps of the movies to use as a reference for comparing
 	    the files saved by the encode and clone tests.
 	-->
-    <test name="Reference SWF4">
-		<parameter name="srcDir" value="test/data/movies/swf4"/>
-		<parameter name="dstDir" value="test/results/FSMovie/reference/swf4"/>
+    <test name="Reference">
+		<parameter name="srcDir" value="test/data/swf"/>
+		<parameter name="dstDir" value="test/results/FSMovie/reference/"/>
 		<classes>
       		<class name="com.flagstone.transform.test.FSMovieTest">
       			<methods>
@@ -20,41 +20,5 @@
 		</classes>
   	</test>
 
-    <test name="Reference SWF5">
-		<parameter name="srcDir" value="test/data/movies/swf5"/>
-		<parameter name="dstDir" value="test/results/FSMovie/reference/swf5"/>
-		<classes>
-      		<class name="com.flagstone.transform.test.FSMovieTest">
-      			<methods>
-      				<include name="toText"/>
-      			</methods>
-      		</class>
-		</classes>
-  	</test>
-
-    <test name="Reference SWF6">
-		<parameter name="srcDir" value="test/data/movies/swf6"/>
-		<parameter name="dstDir" value="test/results/FSMovie/reference/swf6"/>
-		<classes>
-      		<class name="com.flagstone.transform.test.FSMovieTest">
-      			<methods>
-      				<include name="toText"/>
-      			</methods>
-      		</class>
-		</classes>
-  	</test>
-
-    <test name="Reference SWF7">
-		<parameter name="srcDir" value="test/data/movies/swf7"/>
-		<parameter name="dstDir" value="test/results/FSMovie/reference/swf7"/>
-		<classes>
-      		<class name="com.flagstone.transform.test.FSMovieTest">
-      			<methods>
-      				<include name="toText"/>
-      			</methods>
-      		</class>
-		</classes>
-  	</test>
-
 </suite>
 

Modified: dev/dev-2-2/test/suites/FSSetBackgroundColor.xml
===================================================================
--- dev/dev-2-2/test/suites/FSSetBackgroundColor.xml	2006-10-01 16:18:31 UTC (rev 234)
+++ dev/dev-2-2/test/suites/FSSetBackgroundColor.xml	2006-11-30 14:34:12 UTC (rev 235)
@@ -3,15 +3,6 @@
 <suite name="FSSetBackgroundColor">
 
 	<test name="Unit Test">
-    	<groups>
-        	<define name="FSSetBackgroundColor">
-        		<include name="color"/>
-        		<include name="setbackgroundcolor"/>
-        	</define>
-    		<run>
-    			<include name="FSSetBackgroundColor"/>
-    		</run>
-    	</groups>
     	<classes>
     		<class name="com.flagstone.transform.test.FSColorTest"/>
     		<class name="com.flagstone.transform.test.FSSetBackgroundColorTest"/>

Modified: dev/dev-2-2/test/suites/FSSoundConstructor.xml
===================================================================
--- dev/dev-2-2/test/suites/FSSoundConstructor.xml	2006-10-01 16:18:31 UTC (rev 234)
+++ dev/dev-2-2/test/suites/FSSoundConstructor.xml	2006-11-30 14:34:12 UTC (rev 235)
@@ -32,31 +32,5 @@
 		</classes>
   	</test>
 
-    <test name="MP3 Sounds - Event">
-		<parameter name="srcDir" value="test/data/sounds/mp3"/>
-		<parameter name="dstDir" value="test/results/FSSoundConstructor/event/mp3"/>
-		<parameter name="ext" value="mp3"/>
-		<classes>
-      		<class name="com.flagstone.transform.test.FSSoundConstructorTest">
-      		    <methods>
-      				<include name="playEventSound" />
-    			</methods>
-      		</class>
-		</classes>
-  	</test>
-  	
-    <test name="MP3 Sounds - Streaming">
-		<parameter name="srcDir" value="test/data/sounds/mp3"/>
-		<parameter name="dstDir" value="test/results/FSSoundConstructor/streaming/mp3"/>
-		<parameter name="ext" value="mp3"/>
-		<classes>
-      		<class name="com.flagstone.transform.test.FSSoundConstructorTest">
-      		    <methods>
-      				<include name="playStreamingSound" />
-    			</methods>
-      		</class>
-		</classes>
-  	</test>
-
 </suite>
 

Modified: dev/dev-2-2/test/suites/FSTextConstructor.xml
===================================================================
--- dev/dev-2-2/test/suites/FSTextConstructor.xml	2006-10-01 16:18:31 UTC (rev 234)
+++ dev/dev-2-2/test/suites/FSTextConstructor.xml	2006-11-30 14:34:12 UTC (rev 235)
@@ -6,9 +6,9 @@
 	<parameter name="dstDir" value=""/>
 	<parameter name="ext" value=""/>
 
-    <test name="TTF Fonts From OrgDot">
-		<parameter name="srcDir" value="test/data/fonts/orgdot"/>
-		<parameter name="dstDir" value="test/results/FSTextConstructor/fonts/orgdot"/>
+    <test name="TTF Fonts">
+		<parameter name="srcDir" value="test/data/ttf"/>
+		<parameter name="dstDir" value="test/results/FSTextConstructor/fonts/ttf"/>
 		<parameter name="ext" value="ttf"/>
 		<classes>
       		<class name="com.flagstone.transform.test.FSTextConstructorTest">
@@ -19,22 +19,9 @@
 		</classes>
   	</test>
   	
-    <test name="TTF Fonts From the Bitstream Vera collection">
-		<parameter name="srcDir" value="test/data/fonts/vera"/>
-		<parameter name="dstDir" value="test/results/FSTextConstructor/fonts/vera"/>
-		<parameter name="ext" value="ttf"/>
-		<classes>
-      		<class name="com.flagstone.transform.test.FSTextConstructorTest">
-      		    <methods>
-      				<include name="displayTrueTypeFont" />
-    			</methods>
-      		</class>
-		</classes>
-  	</test>
-  	
-    <test name="TTF Fonts Installed in Windows">
+   <test name="TTF Fonts Installed in Windows">
 		<parameter name="srcDir" value="/windows/fonts"/>
-		<parameter name="dstDir" value="test/results/FSTextConstructor/fonts/windows"/>
+		<parameter name="dstDir" value="test/results/FSTextConstructor/fonts/win"/>
 		<parameter name="ext" value="ttf"/>
 		<classes>
       		<class name="com.flagstone.transform.test.FSTextConstructorTest">

Modified: dev/dev-2-2/test/suites/TextDump.xml
===================================================================
--- dev/dev-2-2/test/suites/TextDump.xml	2006-10-01 16:18:31 UTC (rev 234)
+++ dev/dev-2-2/test/suites/TextDump.xml	2006-11-30 14:34:12 UTC (rev 235)
@@ -1,33 +1,12 @@
 <!DOCTYPE suite SYSTEM "http://beust.com/testng/testng-1.0.dtd" >
   
 <suite name="TextDump">
-    <test name="ToText SWF4">
-		<parameter name="srcDir" value="test/data/movies/swf4"/>
-		<parameter name="dstDir" value="test/results/TextDump/swf4"/>
+    <test name="ToText">
+		<parameter name="srcDir" value="test/data/swf"/>
+		<parameter name="dstDir" value="test/results/TextDump"/>
 		<classes>
       		<class name="com.flagstone.transform.test.TextDumpTest"/>
 		</classes>
   	</test>
-    <test name="ToText SWF5">
-		<parameter name="srcDir" value="test/data/movies/swf5"/>
-		<parameter name="dstDir" value="test/results/TextDump/swf5"/>
-		<classes>
-      		<class name="com.flagstone.transform.test.TextDumpTest"/>
-		</classes>
-  	</test>
-    <test name="ToText SWF6">
-		<parameter name="srcDir" value="test/data/movies/swf6"/>
-		<parameter name="dstDir" value="test/results/TextDump/swf6"/>
-		<classes>
-      		<class name="com.flagstone.transform.test.TextDumpTest"/>
-		</classes>
-  	</test>
-    <test name="ToText SWF7">
-		<parameter name="srcDir" value="test/data/movies/swf7"/>
-		<parameter name="dstDir" value="test/results/TextDump/swf7"/>
-		<classes>
-      		<class name="com.flagstone.transform.test.TextDumpTest"/>
-		</classes>
-  	</test>  	
 </suite>
 

Modified: dev/dev-2-2/test/suites/Transform.xml
===================================================================
--- dev/dev-2-2/test/suites/Transform.xml	2006-10-01 16:18:31 UTC (rev 234)
+++ dev/dev-2-2/test/suites/Transform.xml	2006-11-30 14:34:12 UTC (rev 235)
@@ -2,19 +2,12 @@
   
 <suite name="Unit Test" verbose="10">
 
-	<test name="FSSetBackgroundColor">
-    	<groups>
-        	<define name="FSSetBackgroundColor">
-        		<include name="color"/>
-        		<include name="setbackgroundcolor"/>
-        	</define>
-    		<run>
-    			<include name="FSSetBackgroundColor"/>
-    		</run>
-    	</groups>
+	<test name="All Classes">
     	<classes>
     		<class name="com.flagstone.transform.test.FSColorTest"/>
+    		<class name="com.flagstone.transform.test.FSProtectTest"/>
     		<class name="com.flagstone.transform.test.FSSetBackgroundColorTest"/>
+    		<class name="com.flagstone.transform.test.FSShowFrameTest"/>
     	</classes>
   	</test>
   	

Modified: dev/dev-2-2/test.xml
===================================================================
--- dev/dev-2-2/test.xml	2006-10-01 16:18:31 UTC (rev 234)
+++ dev/dev-2-2/test.xml	2006-11-30 14:34:12 UTC (rev 235)
@@ -3,14 +3,13 @@
 
     <description>Test targets
     
-        test       run test suites on the classes to verify the framework
-                   classes are correct.
+        clean-test remove all the files generated when running any of the tests.
         
-        tests      compile the classes used to test the framework.
+        build-test compile the classes used to test the framework.
                     
-        test-all   run a full test of all the classes in the framework.
+        test       run a full test of all the classes in the framework.
         
-        test-class run the unit tests for an individual class. The target will
+        class-test run the unit tests for an individual class. The target will
                    prompt for the name of the class to test.
         
         benchmark  run a benchmark suite. The target will prompt for the name of
@@ -27,8 +26,16 @@
     <property name="test.result.dir" value="${test.dir}/results"/>
     <property name="test.report.dir" value="${test.dir}/reports"/>
     
-    <taskdef resource="testngtasks"  classpath="${lib.dir}/testng-4.2-jdk14.jar"/>
+    <condition property="testng.jar" value="testng-4.7-jdk14.jar">
+        <equals arg1="${ant.java.version}" arg2="1.4"/>
+    </condition>
     
+    <condition property="testng.jar" value="testng-4.7-jdk15.jar">
+        <equals arg1="${ant.java.version}" arg2="1.5"/>
+    </condition>
+    
+    <taskdef resource="testngtasks"  classpath="${lib.dir}/${testng.jar}"/>
+    
     <target name="clean-test" 
         description="Remove all the files and reports generating during testing">
         



